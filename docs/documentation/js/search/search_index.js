var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"0.7.2","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["15.1.5","add","angular","applic","artifact","automat","build","capabl","chang","check","choic","cli","code","command","compodoc","compon","creat","dev","develop","directive|pipe|service|class|guard|interface|enum|modul","directori","dist","document","e2","encount","end","execut","file","first","further","gener","go","help","http://localhost:4200","implement","index","jest","match","more","name","navig","need","new","ng","npm","out","overview","packag","page","platform","project","readm","refer","reload","result","run","scaffold","serv","server","sourc","start","store","test","unit","us","version","via"],"overview.html":["16","7","9","browser","compon","inject","interfac","match","out","overview","reset","result","support","svg","zoom"],"modules.html":["match","modul","result"],"components/AddProblemModalComponent.html":["ad","add","addproblemmodalcompon","allproblem","allproblems.foreach((problem","angular/cor","angular/material/dialog","app","aren't","associ","be","box","candid","chang","check","class","close","complex","compon","const","constructor","constructor(dialog","constructor(publ","contain","content","creat","createproblemmap","crypto","cryptoj","cryptojs.sha256(json.stringify(problemcontent)).tostr","currentproblem","currentproblemmap","data","delet","descript","dialog","doesn't","event","event.stoppropag","export","file","getproblemcandid","getproblemcandidates(allproblem","getproblemhash","getproblemhash(problem","given","grab","hash","hint","id","if(problem.id","implement","import","info","inject","inject(mat_dialog_data","js","list","main","map","mat_dialog","mat_dialog_data","match","matdialogref","metadata","method","modal","modal.component.css","modal.component.html","modal.component.t","modal/add","new","ngoninit","object","oninit","otherwis","overallcomplex","param","paramet","pass","privat","problem","problem'","problem.complex","problem.hint","problem.overallcomplex","problem.sourcecod","problem.totalscor","problemcandid","problemcont","problemcontenthash","problemmap","problemservic","problemstoadd","properti","public","pull","receivedproblem","recievedproblem","result","retriev","return","selector","service/problem.servic","show","sourc","sourcecod","src/app/add","stop","string","styleurl","take","teacher","templateurl","this.allproblem","this.createproblemmap","this.currentproblem","this.currentproblemmap.has(problemcontenthash","this.currentproblemmap.set(problemcontenthash","this.currentproblems.foreach","this.data.currentproblem","this.dialog.clos","this.dialog.close(this.problemstoadd","this.getproblemcandidates(this.allproblem","this.getproblemhash(problem","this.problemcandid","this.problemcandidates.push(problem","this.problemservice.getallproblems().subscribe(recievedproblem","this.problemstoadd.delete(problem.id","this.problemstoadd.has(problem.id","this.problemstoadd.set(problem.id","totalscor","updat","updatecandidateproblem","updatecandidateproblem(problem","void"],"components/AppComponent.html":["angular/cor","app","app.component.css","app.component.html","appcompon","class","compon","default","encount","export","file","import","info","match","metadata","properti","result","root","selector","sourc","src/app/app.component.t","string","styleurl","templateurl","titl","valu"],"components/ClassroomCreationComponent.html":["0","1","10","2000","8","_snackbar","access","access_cod","accesscod","activatedrout","addstudenttest","angular/cor","angular/material/dialog","angular/material/snack","angular/rout","app","array(this.teacherclassrooms?.length).fill(tru","associ","bar","be","behaviorsubject","behaviorsubject(tru","boolean","call","check","checkuniqueclassroomnam","class","classroom","classroom_nam","classroomcreationcompon","classroomservic","code","complet","compnent","compon","const","constructor","constructor(priv","constructor(userservic","creat","creation","creation.component.css","creation.component.html","creation.component.t","creation/classroom","data","default","descript","dialog","digit","dispatch","durat","each","enrol","enrolled_stud","error","event","event.target.innertext","export","fals","fetch","file","first_nam","form","formcomplet","function","gener","generateaccesscod","getallstud","grab","id","if(!this.checkuniqueclassroomnam","ignor","import","incomplete','x","info","initi","inject","input","last_nam","later","length","length).touppercas","list","main","match","matdialog","math.random().tostring(36).substring(2","matsnackbar","messag","metadata","method","name","new","newclassroom","next","ngoninit","number","object","observ","onchildremov","onchildremove(index","param","paramet","privat","proper","properti","random","refreshclassroom","result","retriev","return","rout","route:activatedrout","router","rxj","secur","selector","service/classroom.servic","service/student.servic","set","settitleinput","settitleinput(ev","shorten","showchild","sourc","src/app/classroom","string","student","student_list","studentservic","styleurl","submitclassroom","subscrib","subscribe(stud","switchmap","tap","teacher","teacherclassroom","teacheremail","templateurl","text","this._snackbar.open('cannot","this._snackbar.open('classroom","this._snackbar.open('form","this.classroomservice.addclassroom(newclassroom).subscrib","this.classroomservice.addstudenttoclassroom","this.classroomservice.getclassroomsbyteacheremail(this.teacheremail).subscrib","this.formcomplet","this.generateaccesscod","this.length","this.nam","this.name.length","this.showchild","this.showchild.push(tru","this.showchild[index","this.student_list","this.studentservice.getstud","this.teach","this.teacherclassroom","this.teacherclassrooms.map(t=>t.nam","this.teacherclassrooms?.push(classroom","this.teacherclassrooms[0","this.teacherclassrooms[0].access_cod","this.teacheremail","this.userservice.getteacherbyemail(this.userservice.user.teacheremail).subscribe({next:teach","this.userservice.user.first_nam","this.userservice.user.last_nam","this.userservice.user.teacheremail","this.view_stud","true","ts","undefin","uniqu","unique','x","us","user.servic","userservic","valu","var","view_stud","void","x"],"components/ClassroomDetailComponent.html":["0","2000","404","_snackbar","accepttext","access","access_cod","account","allow","angular/cor","angular/material/dialog","angular/material/snack","angular/rout","app","aren't","associ","bar","boolean","box","catch","chang","class","classroom","classroom_id","classroom_servic","classroomcreationcompon","classroomdetailcompon","classroomservic","classroomservice:classroomservic","clipboard","clipboard','x","code","compon","confirm","confirmationmodalcompon","consid","console.log('error","console.log(chang","console.log(this.classroom","console.log(this.classroom_id","const","constructor","constructor(classroomservic","constructor(priv","copi","correct","creation.compon","creation/classroom","current","data","default","delet","deleteclassroom","deleteclassroom(classroom","deliv","detail","detail.component.css","detail.component.html","detail.component.t","detail/classroom","dialog","dialogconfig","dialogconfig.autofocu","dialogconfig.data","dialogconfig.disableclos","dialogref","dialogref.afterclosed().subscrib","document.createrang","document.execcommand('copi","durat","enrol","error","event","event.target","eventemitt","export","fals","file","frontend","gener","handl","htmlspanel","if(data","ignor","implement","import","index","info","input","irrevers","list","made","manipul","match","matdialog","matdialogconfig","matsnackbar","mean","messag","metadata","method","modal.compon","modal/confirm","mouseev","navig","new","new_cod","newaccesscod","ngonchang","ngonchanges(chang","ngzone","notifi","null","number","object","onchang","output","page","param","paramet","parent","preserv","privat","problem","problemset","properti","provid","rang","range.selectnodecontents(span","regener","rejoin","remov","removechild","removestud","removestudent(stud","requir","result","return","rout","router","select","selectaccesscod","selectaccesscode(ev","selector","servic","service/classroom.servic","set","set(this.classroom.enrolled_stud","simplechang","sourc","span","src/app/classroom","still","string","student","student.first_nam","student.id","student.last_nam","student_list","styleurl","success","support","teacher","teacher'","templateurl","this._snackbar.open('copi","this.classroom.id","this.classroom.nam","this.classroom?.id","this.classroom_id","this.classroom_service.getclassroombyid(this.classroom_id).subscrib","this.classroom_service.updateclassroom(updated_classroom","this.classroomservice.deleteclassroom(this.classroom_id","this.classroomservice.removestudent(this.classroom","this.dialog.open(confirmationmodalcompon","this.messag","this.parent.generateaccesscod","this.removechild.emit(this.index","this.router.navigate(['teach","this.stud","this.student_list","this.student_list.delete(stud","this.student_list.s","this.window","this.window.getselect","this.window.getselection().addrange(rang","this.window.getselection().removeallrang","this.zone.run","titl","tri","true","ts","type","unabl","undefin","updated_classroom","updated_classroom.accesscod","us","user","valu","viewchild","viewproblemset","void","warn","window","zone"],"components/ConfirmationModalComponent.html":["accept","accepttext","angular/cor","angular/material/dialog","app","cancel","canceltext","class","close","compon","confirm","confirmationmodalcompon","consequ","constructor","constructor(dialog","constructor(publ","data","default","deni","dialog","export","file","harm","if(this.data.accepttext","if(this.data.canceltext","if(this.data.messag","if(this.data.titl","implement","import","info","initi","inject","inject(mat_dialog_data","mat_dialog_data","match","matdialogref","messag","metadata","method","modal","modal.component.css","modal.component.html","modal.component.t","modal/confirm","ngoninit","oninit","potenti","properti","provid","public","result","return","selector","set","sourc","src/app/confirm","string","styleurl","sure","templateurl","text","this.accepttext","this.canceltext","this.data.accepttext","this.data.canceltext","this.data.messag","this.data.titl","this.dialog.close(fals","this.dialog.close(tru","this.messag","this.titl","titl","user","valu","void"],"components/HomepageComponent.html":["2000","_snackbar","account","angular/cor","angular/material/snack","angular/rout","app","auth.servic","authent","authservic","bar","base","boolean","checkingisstud","checkingisteach","class","classroom","classroomcod","code","code','x","compon","const","constructor","constructor(authservic","constructor(priv","contain","correct","creat","createaccountredirect","creation","data","default","determin","durat","export","fals","file","homepag","homepage.component.css","homepage.component.html","homepagecompon","if(stud","if(teach","if(this.authservice.getuserdetail","if(this.userservice.us","implement","import","info","initi","loggedin","match","matsnackbar","messag","metadata","method","next","ngoninit","oninit","page","param","paramet","privat","proper","properti","protect","provid","ran","result","return","role","rout","router","selector","session","side","snackbar","sourc","src/app/homepage/homepage.component.t","string","student","styleurl","teacher","templateurl","this._snackbar.open('ent","this.authservice.getuserdetail","this.classroomcod","this.loggedin","this.rol","this.router.navigate(['classroom","this.router.navigate(['login","this.router.navigate(['stud","this.userservice.getstudentbyemail(userdetails.email).subscrib","this.userservice.getteacherbyemail(userdetails.email).subscrib","this.userservice.updateuser(stud","this.userservice.updateuser(teach","this.userservice.user.rol","this.userservice.userdetail","this.userservice.userdetails.classroomcod","true","us","user","user'","user.servic","userdetail","userservic","valu","view","void"],"components/LoginComponent.html":["activatedrout","addstud","addstudent(userdetail","addteach","addteacher(userdetail","angular/cor","angular/rout","app","auth.servic","authent","authservic","base","be","boolean","class","classroom","code","compon","const","constructor","constructor(authservic","contain","correct","creation","current","default","email","enrolled_class","enter","error","export","fals","file","first_nam","handl","handlestudentlogin","handlestudentlogin(userdetail","handleteacherlogin","handleteacherlogin(userdetail","hanl","if(!receivedstud","if(!receivedteach","if(!stud","if(!teach","if(this.authservice.getuserdetail","if(this.rol","if(this.userservice.us","implement","import","info","inform","initi","last_nam","log","login","login.component.css","login.component.html","logincompon","match","metadata","method","new","next","ngoninit","oninit","page","param","paramet","params['rol","password_hash","placehold","privat","properti","ran","receivedstud","receivedteach","regist","result","return","role","rout","router","selector","servic","session","set","side","sourc","src/app/login/login.component.t","string","student","studentexist","styleurl","teacher","teacheremail","teacherexist","templateurl","this.addstudent(userdetail","this.addteacher(userdetail","this.authservice.getuserdetail","this.authservice.logout","this.handlestudentlogin(userdetail","this.handleteacherlogin(userdetail","this.rol","this.route.params.subscribe(param","this.router.navig","this.router.navigate(['classroom","this.router.navigate(['stud","this.updatefrontendstudentandredirect(stud","this.updatefrontendteacherandredirect(teach","this.userservice.addstudent(student).subscrib","this.userservice.addteacher(teacher).subscrib","this.userservice.getstudentbyemail(student.email).subscrib","this.userservice.getstudentbyemail(userdetails.email).subscrib","this.userservice.getteacherbyemail(teacher.teacheremail).subscrib","this.userservice.getteacherbyemail(userdetails.email).subscrib","this.userservice.updateuser(receivedstud","this.userservice.updateuser(receivedteach","this.userservice.updateuser(stud","this.userservice.updateuser(teach","this.userservice.user.rol","this.userservice.userdetails.classroomcod","updatefrontendstudentandredirect","updatefrontendstudentandredirect(stud","updatefrontendteacherandredirect","updatefrontendteacherandredirect(teach","us","user","user.servic","userdetail","userdetails.classroomcod","userdetails.email","userdetails.family_nam","userdetails.given_nam","userservic","valu","view","void"],"components/NavbarComponent.html":["angular/cor","app","auth.servic","authent","authservic","base","boolean","check","class","compon","constructor","constructor(authservic","constructor(priv","exist","export","fals","file","firstnam","handl","import","info","isstud","isteach","lastnam","log","logout","match","metadata","method","navbar","navbar.component.css","navbar.component.html","navbarcompon","out","param","paramet","privat","properti","result","return","role","selector","servic","session","sourc","src/app/navbar/navbar.component.t","string","student","styleurl","teacher","templateurl","this.authservice.logout","this.firstnam","this.lastnam","this.userservice.us","this.userservice.user?.rol","this.userservice.userdetail","this.userservice?.user?.first_nam","this.userservice?.user?.last_nam","this.userservice?.user?.rol","true","undefin","user","user.servic","userexist","userservic","via","void"],"components/ProblemCreationComponent.html":["0","1","2","2000","270px","3","_snackbar","access","activatedrout","ad","add","addproblemtoset","addproblemtosets(problem","algorithm","allow","angular/cor","angular/material/dialog","angular/material/snack","angular/rout","app","autofil","backend","bar","base","be","block.complex","blocklist","blocklist.foreach((block","blur","box","break","case","charact","check","class","classroom/1","code","codeinput","complet","complex","complexi","complexityparserservic","compon","const","constant","constructor","constructor(priv","constructor(problemservic","contentedit","correct","createdproblem","createdproblem).subscrib","createdproblem.nam","creation","creation.component.css","creation.component.html","creation.component.t","creation/problem","cubic","current","default","deliv","dialog","dialogconfig","dialogconfig.autofocu","dialogconfig.disableclos","dialogconfig.width","dialogref","dialogref.afterclosed().subscrib","div","document.createtextnode(tabnodevalu","document.getselect","durat","equival","error","event","event'","event.preventdefault","event.target.files[0","event.target.innertext","export","fals","file","file','x","file:fil","filecont","filecontent.split(/[\\r\\n","fileread","find","form","formatcomplex","formatcomplexity(complex","formcomplet","getsourcecodefromtextinput","gettotalscor","handl","handletab","handletab(ev","hint","https://stackoverflow.com/questions/2237497/mak","if(!this.formcomplet","if(lin","if(problemidparam","if(rang","if(setid","if(setidparam","if(this.codeinput.length","if(this.nam","if(this.problemid","if(this.setid","import","incomplete','x","indent","info","inform","initi","input","insert","insid","key","line","linear","map","match","matdialog","matdialogconfig","matsnackbar","maxn","mention","messag","metadata","method","modal.compon","modal/select","name","new","next","ngoninit","ngzone","number","obtain","onfileselect","onfileselected(ev","orm","overallcomplex","page","panel","param","paramet","params['problemid","params['setid","pars","parser.servic","parser/complex","polynomi","postedproblem","postedproblem.setid","privat","probem","problem","problem','x","problem.complex","problem.hint","problem.nam","problem.overallcomplex","problem.sourcecod","problem.totalscor","problemcreationcompon","problemid","problemidparam","problemservic","problemset","properti","quadrat","ran","rang","range.insertnode(tabnod","range.setendafter(tabnod","range.setstartafter(tabnod","reader","reader.onload","reader.readastext(fil","reader.result","result","return","rout","router","score","sel","sel?.getrangeat(0","select","selector","selectsetmodalcompon","send","service/problem.servic","set","setalltoconst","setcodeinput","setcodeinput(ev","setid","setidparam","setids.foreach((setid","sourc","sourcecod","src/app/problem","string","styleurl","submit","submitproblem","switch","t","tab","tabnod","tabnodevalu","teacher","templateurl","text","textbox","this._snackbar.open('ent","this._snackbar.open('form","this._snackbar.open('un","this._snackbar.open(`problem","this.addproblemtosets(createdproblem","this.codeinput","this.codeinput.split(/[\\r\\n","this.complex","this.complexity.foreach(lin","this.complexity.length","this.complexity.push","this.complexity[block.beglin","this.complexityparserservice.parse(this.sourcecode.join(\"\\n","this.dialog.open(selectsetmodalcompon","this.formatcomplexity(block.complex","this.formatcomplexity(maxn","this.gettotalscor","this.hint","this.hints.push","this.hints[block.beglin","this.nam","this.overallcomplex","this.problemid","this.problemservice.addproblem(createdproblem).subscrib","this.problemservice.addproblem(postedproblem).subscrib","this.problemservice.getproblembyid(this.problemid).subscrib","this.problemservice.updateproblem(this.problemid","this.route.params.subscribe(param","this.router.navigate(['/teach","this.router.navigate(['teach","this.setalltoconst","this.setid","this.sourcecod","this.sourcecode.length","this.sourcecode.push(lin","this.totalscor","total","totalscor","true","updat","upload","us","user","valid","valu","via","void","within","x"],"components/SelectSetModalComponent.html":["add","angular/cor","angular/material/dialog","any).subscrib","app","be","boolean","box","class","classroom","classrooms.foreach((classroom","classroomservic","close","code","compon","const","constructor","constructor(dialog","dialog","error","export","fals","file","handl","if(set.id","implement","import","info","initi","isselect","isselected(set","look","map","match","matdialogref","metadata","method","modal","modal.component.css","modal.component.html","modal.component.t","modal/select","new","next","ngoninit","oninit","param","paramet","privat","problem","problemset","problemsetservic","properti","public","ran","result","return","select","selectedset","selector","selectset","selectset(set","selectsetmodalcompon","service/classroom.servic","service/problemset.servic","set","set.id","setid","sourc","src/app/select","styleurl","templateurl","that'","this.classroomservice.getclassroomsbyteacheremail(this.userservice.user.teacheremail).subscrib","this.dialog.clos","this.dialog.close(this.selectedset","this.problemsetservice.getproblemsetsbyclassroomid(classroom.id","this.selectedsets.delete(setid","this.selectedsets.has(set.id","this.selectedsets.has(setid","this.selectedsets.set(setid","this.set","this.sets.concat(set","true","user.servic","userservic","void"],"components/StudentClassroomViewComponent.html":["0","_snackbar","activ","activatedrout","angular/cor","angular/material/snack","angular/rout","app","auth.servic","authent","authservic","bar","base","class","classroom","classrooms.compon","classrooms/stud","classroomservic","compon","console.log(classroom","constructor","constructor(authservic","constructor(priv","current","deliv","enrol","enrolledclassroom","execut","export","file","handl","id","implement","import","info","initi","manipul","match","matsnackbar","messag","metadata","method","ngoninit","object","oninit","page","param","paramet","pass","privat","problem","properti","protect","result","return","right","rout","router","selector","servic","service/classroom.servic","service/student.servic","session","set","sourc","src/app/stud","string","student","studentclassroomscompon","studentclassroomviewcompon","studentservic","styleurl","templateurl","this.enrolledclassroom","this.enrolledclassrooms.length","this.messag","this.router.navigate(['stud","this.stud","this.studentservice.getenrol","this.studentservice.getenrollment(this.userservice.user.id).subscrib","this.studentservice.getstudent(this.userservice.user.id).subscrib","us","user","user.servic","userservic","view","view.component.css","view.component.html","view.component.t","view/stud","viewproblemset","viewproblemset(id","void","web"],"components/StudentClassroomsComponent.html":["2000","8","_snackbar","ac","ac.length","access","access_cod","activ","activatedrout","add","angular/cor","angular/material/snack","angular/rout","app","auth.servic","authent","authservic","backspac","bar","boolean","button","check","checkvalidcod","checkvalidcode(ev","class","classroom","classrooms.component.css","classrooms.component.html","classrooms.component.t","classrooms/stud","classroomservic","code","compon","confirm","confirmjoinclassroom","constructor","constructor(authservic","constructor(priv","correct","current","default","deliv","document.getelementbyid('search","durat","element","element.classlist.add('signup","element.classlist.remove('signup","element.textcontent!.trim","enforc","enforcemaxlength","enforcemaxlength(ev","enter","event","event.key","event.preventdefault","event.target","event.target.innertext","execut","export","fals","file","find","fo","found!','x","handl","htmlelement","implement","import","in_class","info","initi","input","join","joinclassroom","length","manag","manipul","match","matsnackbar","max","maxlength","messag","metadata","method","next","ngoninit","null","number","object","oninit","page","param","paramet","privat","properti","protect","provid","result","return","rout","route:activatedrout","router","selector","servic","service/classroom.servic","service/student.servic","session","setcodeinput","setcodeinput(ev","side","sourc","src/app/stud","string","student","student_id","studentclassroomscompon","studentservic","studentservice:studentservic","styleurl","submitbutton","submitbutton.classlist.add(\"click","submitbutton.classlist.remove(\"click","success/error","successfully!','x","teacher","templateurl","text","text.length","this._snackbar.open('classroom","this._snackbar.open('enrol","this.access_cod","this.classroom","this.classroom.teach","this.classroomservice.addstudenttoclassroom(this.access_cod","this.classroomservice.getclassroombyaccesscode(this.access_code).subscrib","this.router.navig","this.student_id","this.student_id).subscrib","this.teach","this.userservice.user.id","this.userservice.user.rol","this.valid_cod","true","us","user","user.servic","userservic","valid","valid_cod","valu","void"],"components/StudentProblemSetComponent.html":["access","activatedrout","angular/common","angular/cor","angular/material/expans","angular/rout","app","appropri","associ","backend","class","classroom","classroomid","compon","constructor","constructor(priv","constructor(problemsetservic","contain","current","currentd","data","date","datepip","dd","descript","display","each","error","export","file","gener","given","html","id","implement","import","info","initi","list","main","mataccordion","match","metadata","method","mm","navig","next","ngoninit","number","oninit","page","param","paramet","params[\"classroomid","privat","problem","problemid","problemservic","problemset","problemsetservic","properti","result","retriev","return","rout","router","run","selector","selectproblem","selectproblem(problemid","separ","service/problem.servic","service/problemset.servic","set","set.component.css","set.component.html","set.component.t","set.problem","set/stud","sets,a","solut","sourc","src/app/stud","string","student","studentproblemsetcompon","styleurl","templateurl","themto","this.activatedroute.params.subscribe(param","this.classroomid","this.datepipe.transform(d","this.problemservice.getproblembysetid(set.id).subscrib","this.problemsetservice.getproblemsetsbyclassroomid(this.classroomid).subscribe(set","this.router.navigate(['stud","this.set","this.sets.foreach((set:ani","us","visibl","void","well","yyyi"],"components/StudentSolutionComponent.html":["0","1","2000","_snackbar","a.beglin","activatedrout","analyz","angular/cor","angular/material/snack","angular/rout","answer","app","array(problem.complexity.length).fil","b.beglin","b7fff8","b8b7ff","background","bar","be","block","blockcolor","blocklist","boolean","calcul","calculatescor","check","class","classroomid","color","complex","complexityansw","complexityparserservic","compon","const","constructor","constructor(problemservic","correct","d0ffb7","default","deliv","determin","durat","error","etc","execut","export","fals","feffb7","fetch","ffb7bd","ffb7f5","file","for(let","getlinecolor","getlinecolor(linenum","given","handl","implement","import","incorrect","index","individu","info","initi","isload","line","linecomplexitycorrect","linecomplexitycorrect(index","linenum","manipul","match","matsnackbar","messag","metadata","method","nest","new","next","ngoninit","number","obtain","oninit","overal","overallcomplex","overallcomplexitycorrect","page","param","paramet","parammap","params['classroomid","params['problemid","pars","parser.servic","parser/block","parser/complex","present","privat","problem","problem','x","problemid","problemservic","properti","result","return","rout","router","rxj","score","select","selector","servic","service/problem.servic","service/solution.servic","show","showresult","solut","solution','x","solution.component.css","solution.component.html","solution.component.t","solution/stud","solutionservic","sourc","src/app/stud","string","student","studentid","studentsolut","studentsolutioncompon","styleurl","submit","submitsolut","tap","templateurl","this._snackbar.open('could","this.blocklist","this.blocklist[i].beglin","this.calculatescor","this.classroomid","this.complexityansw","this.complexityparserservice.parse(this.problem.sourcecode.join(\"\\n","this.isload","this.overallcomplex","this.problem","this.problemid","this.problemservic","this.problemservice.getproblembyid(this.problemid).subscrib","this.route.params.subscribe(param","this.router.navigate(['problem","this.scor","this.showresult","this.solutionservice.addsolution(studentsolution).subscrib","true","us","user","valu","void"],"components/TeacherProblemComponent.html":["0","2000","_snackbar","abov","accepttext","activatedrout","add","addproblem","addproblemmodalcompon","addproblems(problem","addproblemsmodalopen","addsolutionsinfo","addsolutionsinfo(problemid","analyz","analyzesolut","analyzesolutions(solut","angular/cor","angular/material/dialog","angular/material/snack","angular/rout","app","associ","averag","avg","bar","be","box","class","compon","confirm","confirmationmodalcompon","const","constructor","constructor(problemservic","correct","createproblem","creation","current","currentproblem","data","delet","delete','x","deleted','x","deleteproblem","deleteproblem(problemid","deliv","detail","detailedprobleminfo","detailedprobleminfo.avg","detailedprobleminfo.highscor","detailedprobleminfo.lowscor","detailedprobleminfo.submiss","detailedproblemlist","dialog","dialogconfig","dialogconfig.autofocu","dialogconfig.data","dialogconfig.disableclos","dialogref","dialogref.afterclosed().subscrib","durat","error","event","event.stoppropag","execut","exist","export","fals","fetch","file","frontend","gener","generatedetailedproblemlist","handl","handledelet","handledelete(problemid","high","highscor","id","if(data","if(lowscor","import","info","inform","initi","list","low","lowscor","manipul","map","match","matdialog","matdialogconfig","matsnackbar","menu","messag","metadata","method","modal","modal.compon","modal/add","modal/confirm","more","navig","new","next","ngoninit","ngzone","number","object","open","openoptionmenu","openoptionmenu(ev","openoptionmenu(event:ev","option","page","param","paramet","params['setid","pass","privat","problem","problem.component.css","problem.component.html","problem.component.t","problem.id","problem.setid","problem/teach","problemid","problems','x","problems.foreach(problem","problemservic","problemset","problemsetservic","properti","result","retriev","return","rout","router","score","scoresum","scoresum/solutions.length","selector","servic","service/problem.servic","service/problemset.servic","service/solution.servic","set","setid","side","solut","solution.scor","solutions.foreach((solut","solutions.length","solutions[0].scor","solutionservic","sourc","src/app/teach","styleurl","submit","sure","teacher","teacherproblemcompon","templateurl","this._snackbar.open('could","this._snackbar.open('problem","this.addproblems(data","this.addsolutionsinfo(problem.id","this.analyzesolutions(solut","this.deleteproblem(problemid","this.detailedproblemlist","this.detailedproblemlist.push(detailedprobleminfo","this.dialog.open(addproblemmodalcompon","this.dialog.open(confirmationmodalcompon","this.generatedetailedproblemlist","this.problem","this.problems.foreach((problem","this.problemservice.addproblem(problem).subscrib","this.problemservice.deleteproblem(problemid).subscrib","this.problemservice.getproblembysetid(this.setid).subscrib","this.problemsetservice.getproblemsetbyid(this.setid).subscribe((set","this.route.params.subscribe(param","this.router.navig","this.router.navigate(['problem","this.set","this.setid","this.solutionservice.getsolutionbyproblemid(problemid).subscrib","this.updateproblemlist","this.zone.run","titl","true","undefin","updat","updateproblem","updateproblem(problemid","updateproblemlist","us","user","via","void","want","zone"],"components/TeacherProblemsetPageComponent.html":["0","2000","5cb85c","_snackbar","activatedrout","ad","add","addtoallproblemsetslist","addtoallproblemsetslist(problemset","allproblemset","alreadi","angular/common","angular/cor","angular/material/snack","angular/rout","app","bar","base","bd8c7d","be","blank","border","check","class","classroomid","click","code","color","compon","constructor","constructor(priv","constructor(problemsetservic","correct","correspond","createproblemset","creation","current","currentd","data","date","datepip","dd","delet","deleteproblemset","deliv","differ","due","duedat","durat","empti","end","everyth","execut","export","file","fill","form","front","frontend","getbordercolor","getbordercolor(problemset","getemptyproblemset","handl","hex","id","import","info","initi","list","longer","manipul","match","matsnackbar","messag","metadata","method","mm","name","name.','x","navig","need","ngoninit","none","noth","null","number","out","page","page.component.css","page.component.html","page.component.t","page/teach","param","paramet","params[\"id","pass","practic","privat","problem","problemlist","problemset","problemset.classroomid","problemset.dued","problemset.id","problemset.nam","problemset.problemlist","problemset.showd","problemset.typ","problemset.vis","problemsetform","problemsetservic","problemsettoremov","problemsettoremove.id","properti","reject","remov","removefromallproblemsetslist","removefromallproblemsetslist(problemsettoremov","request","result","return","rout","router","same","select","selected/unselect","selectedproblemset","selector","selectproblemset","selectproblemset(problemset","servic","service/problemset.servic","set","showdat","side","sourc","src/app/teach","statement","string","styleurl","teacher","teacherproblemsetpagecompon","templateurl","there'","this._snackbar.open('set","this.activatedroute.params.subscribe(param","this.addtoallproblemsetslist(data","this.allproblemset","this.allproblemsets.filter((problemset","this.allproblemsets.push","this.classroomid","this.currentd","this.datepipe.transform(d","this.getemptyproblemset","this.problemsetform","this.problemsetform.nam","this.problemsetform.name.length","this.problemsetservice.addproblemset(this.problemsetform).subscribe(data","this.problemsetservice.deleteproblemset(this.selectedproblemset.id).subscrib","this.problemsetservice.getproblemsetsbyclassroomid(this.classroomid).subscribe(data","this.problemsetservice.updateproblemset(this.problemsetform","this.removefromallproblemsetslist(this.selectedproblemset","this.router.navigate(['teach","this.selectedproblemset","this.selectedproblemset.id","this.selectedproblemset.id).subscrib","this.selectedproblemset?.id","this.unselectproblemset","type","undefin","unselect","unselectproblemset","updat","updateproblemset","us","user","viewproblemset","visibl","void","web","yyyi"],"injectables/AuthGuard.html":["activatedroutesnapshot","angular","angular/cor","angular/rout","authent","authguard","boolean","class","const","constructor","constructor(overrid","constructor(protect","export","extend","fals","file","grant","handl","if(!this.authent","if(grant","if(requiredrol","import","info","inject","isaccessallow","isaccessallowed(rout","keycloak","keycloakangular","keycloakauthguard","keycloakservic","match","method","new","overrid","privat","promis","promise(async","protect","providedin","reject","requiredrol","resolv","resolve(fals","resolve(gr","result","return","root","route.data['rol","router","routerstatesnapshot","session","sourc","src/app/auth.t","state","super(rout","this.keycloakangular.login","this.userservice.user.rol","true","urltre","user.servic","userservic"],"injectables/AuthService.html":["4000","_snackbar","angular","angular/cor","angular/material/snack","authent","authservic","bar","catch","class","constructor","constructor(keycloakservic","constructor(priv","durat","e","export","file","getrol","getuserdetail","handl","import","info","inject","keycloak","keycloakservic","logout","match","matsnackbar","method","out","privat","redirecttoprofil","result","return","servic","session","sourc","src/app/auth.service.t","string","this._snackbar.open(`log","this.keycloakservice.getkeycloakinstance().accountmanag","this.keycloakservice.getkeycloakinstance().idtokenpars","this.keycloakservice.getuserrol","this.keycloakservice.logout","tri","undefin","user","userdetail","void","x"],"injectables/ClassroomService.html":["2000","_snackbar","access","access_cod","ad","add","addclassroom","addclassroom(classroom","addstudenttoclassroom","addstudenttoclassroom(access_cod","angular/common/http","angular/cor","angular/material/snack","associ","backend","backennd","bar","class","classroom","classroom','x","classroom).pip","classroom.nam","classroom_id).subscrib","classroomid","classroomservic","client","code","const","constructor","constructor(http","constructor(priv","contain","creat","deleteclassroom","deleteclassroom(classroom_id","durat","duration:2000","email","error","export","file","getallclassroom","getclassroombyaccesscod","getclassroombyaccesscode(access_cod","getclassroombyid","getclassroombyid(classroomid","getclassroomsbyteacheremail","getclassroomsbyteacheremail(teacheremail","http","http://localhost:8080/classroom","http://localhost:8080/classrooms/addstudent/${classroom.id}/${student_id","http://localhost:8080/classrooms/code/${access_cod","http://localhost:8080/classrooms/removestudent/${classroom.id}/${student_id","httpclient","id","import","info","inform","inject","list","match","matsnackbar","messag","method","modul","new","next","null","number","observ","obtain","param","paramet","perform","pipe","post","present","privat","provid","providedin","put","removestud","removestudent(classroom","request","result","return","root","rxj","servic","service/classroom.service.t","snack","sourc","src/app/classroom","string","student","student_id","subscrib","tap","teacher","teacher'","teacheremail","this._snackbar.open('un","this._snackbar.open(`classroom","this.http.delete(\"http://localhost:8080/classroom","this.http.get","this.http.get(\"http://localhost:8080/classrooms\").pip","this.http.get(`http://localhost:8080/classrooms/email/${teacheremail","this.http.get(url","this.http.post(\"http://localhost:8080/classroom","this.http.put","this.http.put(`http://localhost:8080/classrooms/${classroom.id","this.http.put(url","unabl","updat","updateclassroom","updateclassroom(classroom","url","us","user","void","x"],"injectables/ComplexityParserService.html":["0","1].complex","angular/cor","anoth","be","belong","block","blockdepth","blocklist","blocklist.length","blocklist[blockdepth","blocklist[i","blocks'","brace","charact","check","class","close","closecur","closedowhil","code","comment","complex","complexityparserservic","configur","constructor","continu","ctx","ctx.accept(\"closecur","ctx.accept(\"closedowhil","ctx.accept(\"logloop","ctx.accept(\"loop","ctx.accept(\"opencur","ctx.ignor","curli","current","currtoken.lin","currtoken?.typ","decreas","depth","doesn't","don't","endlin","execut","export","file","form","header","identifi","ignor","import","index","info","inform","initialstacklength","inject","insid","java","keep","lexer","lexer.input(sourcecod","lexer.rul","lexer.rule(/\\/\\/[^\\r\\n]*\\r?\\n","lexer.rule(/\\}\\s*whil","lexer.rule(/do\\","lexer.rule(/for\\s*\\(.*\\)\\","lexer.rule(/for\\s*\\(.*\\s*;.*;\\s*.+\\/\\s*\\d+\\s*\\)\\s*{/,(ctx","lexer.rule(/while\\s*\\(.*\\)\\","lexer.token","lexer.tokens().foreach((token","line","list","loop","match","method","multilin","need","nest","new","now","number","open","opencurcount","param","paramet","pars","parse(sourcecod","parser","parser.service.t","parser/complex","parserconfigur","parserconfiguration(lex","previou","privat","providedin","requir","result","return","root","rootblock","rootblock].depth","rootblock].endlin","rule","singl","sourc","sourcecod","space","src/app/complex","stack","stack.length","stack.push(token","stack.revers","statment","string","t\\r\\n","this.parserconfiguration(lex","token","tokenizr","track","uneed","updat","uppermost","us","valu","void","white","whitespac"],"injectables/ProblemService.html":["2000","_snackbar","addproblem","addproblem(problem","angular/common/http","angular/cor","angular/material/snack","backend","bar","belong","class","client","constructor","constructor(http","constructor(priv","creat","delet","deleteproblem","deleteproblem(problemid","deleteproblem(problemid:numb","deliv","durat","error","export","file","getallproblem","getproblembyid","getproblembyid(problemid","getproblembyid(problemid:numb","getproblembysetid","getproblembysetid(setid","getproblembysetid(setid:numb","http","httpclient","id","import","info","inject","list","match","matsnackbar","messag","method","next","number","observ","param","paramet","post","privat","problem","problem','x","problem).pip","problem.nam","problemid","problems','x","problemservic","providedin","receiv","request","result","retriev","return","root","rxj","servic","service/problem.service.t","set","setid","sourc","specifi","src/app/problem","tap","this._snackbar.open('un","this._snackbar.open(`problem","this.http.delete(\"http://localhost:8080/problem","this.http.get(\"http://localhost:8080/problem","this.http.get(\"http://localhost:8080/problems\").pip","this.http.get(\"http://localhost:8080/set/problem","this.http.post(\"http://localhost:8080/problem","this.http.put(\"http://localhost:8080/problem","updat","updateproblem","updateproblem(problemid","updateproblem(problemid:numb","us","user","void","x"],"injectables/ProblemsetService.html":["2000","_snackbar","ad","add","addproblemset","addproblemset(problemset","angular/common/http","angular/cor","angular/material/snack","associ","backend","bar","base","be","class","classroom","classroomid","client","constructor","constructor(http","constructor(priv","creat","data","delet","deleteproblemset","deleteproblemset(problemsetid","deliv","durat","error","export","file","get","getallproblemset","getproblemsetbyid","getproblemsetbyid(problemsetid","getproblemsetsbyclassroomid","getproblemsetsbyclassroomid(classroomid","http","httpclient","id","import","info","inject","match","matsnackbar","messag","method","next","number","object","observ","param","paramet","post","privat","problem","problemset","problemset).pip","problemset.nam","problemsetid","problemsetservic","providedin","put","request","result","return","root","rxj","servic","service/problemset.service.t","set","set','x","sourc","src/app/problemset","tap","this._snackbar.open('un","this._snackbar.open(`problem","this.http.delete(\"http://localhost:8080/problemset","this.http.get(\"http://localhost:8080/problemset","this.http.get(\"http://localhost:8080/problemsets/classroom","this.http.post(\"http://localhost:8080/problemset","this.http.put(\"http://localhost:8080/problemset","updat","updateproblemset","updateproblemset(problemset","us","user","x"],"injectables/SolutionService.html":["addsolut","addsolution(solut","angular/common/http","angular/cor","backend","class","client","constructor","constructor(http","constructor(priv","export","file","getsolutionbyproblemid","getsolutionbyproblemid(problemid","http","httpclient","import","info","inject","match","method","number","observ","param","paramet","post","problem","problemid","providedin","request","result","return","root","rxj","send","servic","service/solution.service.t","solut","solutionservic","sourc","src/app/solut","student","this.http.get(\"http://localhost:8080/solutions/problem","this.http.post(\"http://localhost:8080/solut","void"],"injectables/StudentService.html":["2000","_snackbar","add","angular/common/http","angular/cor","angular/material/snack","backend","bar","class","classroom","client","const","constructor","constructor(http","constructor(priv","creat","createstud","createstudent(stud","data","default","delet","deletestud","deletestudent(id","deliv","durat","error","export","file","getenrol","getenrollment(student_id","getstud","getstudent(id","http","http://localhost:8080/stud","httpclient","id","import","info","inform","inject","make","match","matsnackbar","messag","method","new","number","object","object'","observ","param","paramet","post","privat","problems','x","properti","providedin","put","request","result","retriev","return","root","rxj","servic","service/student.service.t","sourc","src/app/stud","string","student","studentservic","studenturl","tap","this._snackbar.open('un","this.http.delete(url","this.http.get('http://localhost:8080/students').pip","this.http.get(url","this.http.post(this.studenturl","this.http.put(url","this.studenturl}/${id","this.studenturl}/${student.id","this.studenturl}/${student_id}/classroom","updat","updatestud","updatestudent(stud","url","user","valu"],"injectables/UserService.html":["ad","addstud","addstudent(stud","addteach","addteacher(teach","angular/common/http","angular/cor","backend","be","class","client","constructor","constructor(http","constructor(priv","current","detail","email","export","file","get","getstudentbyemail","getstudentbyemail(email","getteacherbyemail","getteacherbyemail(email","hold","http","httpclient","if(this.us","import","info","inform","inject","keycloak","log","match","method","object","observ","param","paramet","post","properti","providedin","request","result","return","role","root","rxj","servic","sourc","specifi","src/app/user.service.t","string","student","tap","teacher","this.http.get(\"http://localhost:8080/students/email","this.http.get(\"http://localhost:8080/teachers/email","this.http.post(\"http://localhost:8080/stud","this.http.post(\"http://localhost:8080/teach","this.us","this.user.rol","updat","updateus","updateuser(userobject","us","user","userdetail","userobject","userservic","void"],"interfaces/Block.html":["beglin","block","code","complex","defin","depth","descript","endlin","export","file","info","interfac","match","number","parser/block.t","properti","result","sourc","src/app/complex","type"],"interfaces/Classroom.html":["accesscod","classroom","descript","enrolled_stud","export","file","id","import","info","interfac","match","name","number","object","properti","result","sourc","src/app/classroom.t","string","student","teacher","type"],"interfaces/Problem.html":["complex","descript","export","file","hint","id","info","interfac","match","name","number","object","overallcomplex","problem","properti","result","setid","sourc","sourcecod","src/app/problem.t","string","totalscor","type"],"interfaces/ProblemSet.html":["classroomid","descript","duedat","export","file","id","info","interfac","match","name","number","object","problemlist","problemset","properti","result","showdat","sourc","src/app/problemset.t","string","type","visibl"],"interfaces/Solution.html":["complexityansw","descript","export","file","id","info","interfac","match","number","object","overallcomplex","problemid","properti","result","score","solut","sourc","src/app/solution.t","string","studentid","type"],"interfaces/Student.html":["classroom","descript","email","enrolled_class","export","file","first_nam","id","import","info","interfac","last_nam","match","number","object","password_hash","properti","result","sourc","src/app/student.t","string","student","type"],"interfaces/Teacher.html":["descript","export","file","first_nam","id","info","interfac","last_nam","match","number","object","password_hash","properti","result","sourc","src/app/teacher.t","string","teacher","teacheremail","type"],"miscellaneous.html":["keycloakconfig","match","miscellan","mockaddproblem","mockdialogref","mockmatdialog","mockmatsnackbar","mockproblem1","mockproblem2","mockproblemarray","mockproblemidmap","mockproblemlist","mockproblemservic","mockrang","mockselect","result","variabl"],"coverage.html":["0","0/1","0/2","0/4","0/5","0/6","0/8","1/5","1/7","10/16","100","11/16","11/21","14","2/2","2/6","20","29","3/7","30","31","33","38","39","4/10","4/9","40","42","44","5/13","5/16","5/17","5/7","5/8","52","6/20","6/6","6/7","6/9","62","64","66","68","71","85","9/14","addproblemmodalcompon","appcompon","authguard","authservic","block","classroom","classroomcreationcompon","classroomdetailcompon","classrooms.component.t","classrooms/stud","classroomservic","complexityparserservic","compon","confirmationmodalcompon","coverag","creation.component.t","creation/classroom","creation/problem","detail.component.t","detail/classroom","document","file","homepagecompon","identifi","inject","interfac","logincompon","match","modal.component.t","modal/add","modal/confirm","modal/select","navbarcompon","page.component.t","page/teach","parser.service.t","parser/block.t","parser/complex","problem","problem.component.t","problem/teach","problemcreationcompon","problemservic","problemset","problemsetservic","project","result","selectsetmodalcompon","service/classroom.service.t","service/problem.service.t","service/problemset.service.t","service/solution.service.t","service/student.service.t","set","set.component.t","set/stud","solut","solution.component.t","solution/stud","solutionservic","src/app/add","src/app/app.component.t","src/app/auth.service.t","src/app/auth.t","src/app/classroom","src/app/classroom.t","src/app/complex","src/app/confirm","src/app/homepage/homepage.component.t","src/app/login/login.component.t","src/app/navbar/navbar.component.t","src/app/problem","src/app/problem.t","src/app/problemset","src/app/problemset.t","src/app/select","src/app/solut","src/app/solution.t","src/app/stud","src/app/student.t","src/app/teach","src/app/teacher.t","src/app/user.service.t","statement","student","studentclassroomscompon","studentclassroomviewcompon","studentproblemsetcompon","studentservic","studentsolutioncompon","teacher","teacherproblemcompon","teacherproblemsetpagecompon","type","userservic","view.component.t","view/stud"]},"length":37},"tokenStore":{"root":{"0":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.01627906976744186},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.007363770250368188},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.02857142857142857},"coverage.html":{"ref":"coverage.html","tf":0.04672897196261682}},"/":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.014018691588785047}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}},"docs":{}}},"1":{"0":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.018691588785046728}}},"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}},"docs":{}}},"1":{"docs":{},"/":{"1":{"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}},"2":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}},"docs":{}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"5":{"docs":{},".":{"1":{"docs":{},".":{"5":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}},"docs":{}}},"docs":{}}},"6":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},"]":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}},"/":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"2":{"0":{"0":{"0":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.010273972602739725},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.012012012012012012},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}},"docs":{}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"7":{"0":{"docs":{},"p":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}},"docs":{}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"/":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"3":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"/":{"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"4":{"0":{"0":{"0":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}},"docs":{}},"4":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}},"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{},"/":{"1":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"5":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{},"c":{"docs":{},"b":{"8":{"5":{"docs":{},"c":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}},"docs":{}},"docs":{}}},"/":{"1":{"3":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"6":{"2":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"8":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{},"/":{"2":{"0":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}},"6":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"9":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}}},"7":{"1":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}},"8":{"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324}}},"9":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}},"/":{"1":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"docs":{}},"docs":{}}},"docs":{},"a":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.020356234096692113},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.012012012012012012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.03768844221105527},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.021367521367521368},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.013254786450662739},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.01444043321299639}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":5.005025125628141},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}},"o":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.01639344262295082}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.023809523809523808},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}},"/":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"/":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}}}}},"y":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"z":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}},"p":{"docs":{},"p":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.048780487804878},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0121580547112462}}}}}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}}}},"e":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"?":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}},"h":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.02867383512544803},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.015037593984962405},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.03260869565217391},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.02120141342756184},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.013986013986013986},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.0246913580246915},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":5.020408163265306},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.01256281407035176}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"i":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.02127659574468085},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}},"c":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.013986013986013986},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.05660377358490566}}}}}}},"p":{"docs":{},"t":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.049689440993788817}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.018633540372670808},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.007518796992481203},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.01060070671378092},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.02735562310030395},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.011666666666666667}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030612244897959183}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}},"g":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}},"b":{"7":{"docs":{},"f":{"docs":{},"f":{"docs":{},"f":{"8":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}},"docs":{}}}}},"8":{"docs":{},"b":{"7":{"docs":{},"f":{"docs":{},"f":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}},"docs":{}}},"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.03968253968253968}}}}},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166}}}}},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714}}}}}},"e":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.01507537688442211},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.02564102564102564},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.01652892561983471}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315}}}}}},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.0625}}}}}}},"o":{"docs":{},"x":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.01507537688442211},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.021505376344086023},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.03260869565217391},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}},"a":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}},"s":{"docs":{},"e":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}},"c":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.04071246819338423},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.04794520547945205},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.042042042042042045},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.03278688524590164},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.036101083032490974},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.04132231404958678}}},"n":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.05714285714285714},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":5.0625},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}},"[":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}}}}}}}},"i":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115}}}}}}},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.017857142857142856}}}}}}},"s":{"docs":{},"'":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}},"u":{"docs":{},"r":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}},"a":{"docs":{},"n":{"docs":{},"k":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}},"d":{"8":{"docs":{},"c":{"7":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}},"docs":{}}},"docs":{}}},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}}},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.037267080745341616}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.018633540372670808}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}},"s":{"docs":{},"e":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.010050251256281407},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.008333333333333333},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}},"l":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.023809523809523808}},"p":{"docs":{},"b":{"docs":{},"o":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.007532956685499058}},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}},"c":{"docs":{},"k":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.01639344262295082},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.030395136778115502},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.01639344262295082},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.064453125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.064030131826742},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.015037593984962405},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.02564102564102564},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.06713780918727916},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.046620046620046623},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0121580547112462},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.11704834605597965},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.012012012012012012},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":5.0754716981132075},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.031746031746031744},"coverage.html":{"ref":"coverage.html","tf":0.014018691588785047}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}}}},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":5.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.013671875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.021367521367521368},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.024734982332155476},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.016317016317016316},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":5.005089058524173},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"e":{"docs":{},":":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}}},"t":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":5.003766478342749},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}},"/":{"1":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}},"docs":{}},"i":{"docs":{},"d":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00911854103343465},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.008333333333333333},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.009009009009009009},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.04054054054054054}}}},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.01256281407035176},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.024844720496894408},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.021367521367521368},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.018648018648018648},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.02857142857142857},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332}},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}}}}}},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}},"p":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872}}}}},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.023809523809523808},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":5.017587939698492},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":5.073170731707317},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":5.01171875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":5.011299435028248},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":5.031055900621118},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":5.025089605734767},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":5.017543859649122},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":5.032608695652174},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":5.009383378016086},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":5.021367521367521},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":5.031802120141343},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":5.020979020979021},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":5.033434650455927},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":5.0162790697674415},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":5.010309278350515},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":5.011666666666667},"coverage.html":{"ref":"coverage.html","tf":0.07476635514018691}}}},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.024128686327077747},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.0625},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.04054054054054054}},"i":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.01627906976744186},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":5.007142857142857},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"w":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.05}}}}}}}}}},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.01171875},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166}}}}},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.01694915254237288},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.007363770250368188},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.01444043321299639}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.007537688442211055},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.01060070671378092},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.015197568389057751},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.017857142857142856},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.010273972602739725},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.009009009009009009},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.02459016393442623},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.010830324909747292},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.012396694214876033}},"(":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"k":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}}}}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166}}}}}},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.024844720496894408}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0121580547112462},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.055900621118012424},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":5.012422360248447},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993}}}}}}}}}}}}}}}}},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.02142857142857143}}}}}}}},"p":{"docs":{},"i":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.009416195856873822}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.013953488372093023},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.01}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":10.004672897196262}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.023809523809523808},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.01256281407035176},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.007537688442211055}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012}}}}}}}}}}}}}}}}},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.009765625},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.006702412868632708},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}},"y":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"j":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"2":{"5":{"6":{"docs":{},"(":{"docs":{},"j":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.013986013986013986},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.010050251256281407},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.007537688442211055}}}}}}}}}}}},"d":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00911854103343465},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},".":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}},"?":{"docs":{},".":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}},"b":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}},"t":{"docs":{},"x":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.03571428571428571}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}},"o":{"docs":{},"p":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.014285714285714285}}}}}}}}}}},"d":{"0":{"docs":{},"f":{"docs":{},"f":{"docs":{},"b":{"7":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}},"docs":{}}}}},"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.016200294550810016},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.02054794520547945},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.018018018018018018},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.021660649819494584}},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}},"d":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.018867924528301886},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.013513513513513514},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.013513513513513514},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.016666666666666666},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.015873015873015872},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332}}}}}}}},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.024844720496894408},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.007518796992481203},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}}},"i":{"docs":{},"n":{"docs":{"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.016200294550810016}},".":{"docs":{},"a":{"docs":{},"v":{"docs":{},"g":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115}}}}}}}},"n":{"docs":{},"i":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.0625}}}}}},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"|":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},"|":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"|":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"|":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"|":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"|":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231}}}}}}},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.032663316582914576},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.043478260869565216},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.021367521367521368},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.007532956685499058},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551}},".":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},".":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}},"v":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.023809523809523808},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},".":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}}},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.04020100502512563},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.031055900621118012},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}},"e":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0121580547112462},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.02735562310030395},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.015}}}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.010273972602739725},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.012012012012012012},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},":":{"2":{"0":{"0":{"0":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"e":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.04054054054054054}}}}}}},"d":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}},"e":{"2":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}},"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805}}}}}}},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.047619047619047616},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.0625}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279}},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.05660377358490566}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.047619047619047616}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.01060070671378092}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.020050125313283207},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.018867924528301886},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.013513513513513514},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.013513513513513514},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.016666666666666666},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.015873015873015872},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.021739130434782608},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.020100502512562814},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.01171875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0160857908847185},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.027972027972027972},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.007363770250368188}},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}},"docs":{}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294}}}}}}},"'":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.015037593984962405},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.01272264631043257},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}}},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.05785123966942149},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.047619047619047616}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.013333333333333334}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"u":{"docs":{},"p":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"!":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"c":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.018867924528301886},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.013513513513513514},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.013513513513513514},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.016666666666666666},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.015873015873015872},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}},":":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"/":{"docs":{},"[":{"docs":{},"\\":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}},"l":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.047619047619047616},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.0625}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956}}}}}}}},"n":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}},"u":{"docs":{},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.013671875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.03804347826086957},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.006702412868632708},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.01282051282051282},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.011627906976744186},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.009765625},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}},"f":{"docs":{},"f":{"docs":{},"b":{"7":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}},"docs":{}}}}},"o":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}},"r":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.01171875},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"!":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667}}}}}}}}},"f":{"docs":{},"b":{"7":{"docs":{},"b":{"docs":{},"d":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}},"f":{"5":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}},"docs":{}}},"docs":{}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.031746031746031744},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.012012012012012012},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.01652892561983471}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.010273972602739725}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.01639344262295082}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.01444043321299639}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"(":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005}}}}}}}}}}}}}}}},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}},"l":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037037037037037035}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037037037037037035}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00911854103343465},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}},"r":{"docs":{},"a":{"docs":{},"b":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}},"n":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030612244897959183}}}}}}},"h":{"docs":{},"e":{"docs":{},"l":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.023809523809523808}}}},"x":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}},"a":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.017811704834605598},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.017123287671232876},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.015015015015015015},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.040983606557377046},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.018050541516245487},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.02066115702479339}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"4":{"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}},"docs":{}},"docs":{}},"docs":{}},"8":{"0":{"8":{"0":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"s":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"2":{"2":{"3":{"7":{"4":{"9":{"7":{"docs":{},"/":{"docs":{},"m":{"docs":{},"a":{"docs":{},"k":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.010273972602739725},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.009009009009009009},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.02459016393442623},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.010830324909747292},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.012396694214876033}}}}}}}}}},"m":{"docs":{},"l":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.010050251256281407}}}},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.012531328320802004},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.01282051282051282},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.016317016317016316},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.018333333333333333},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"b":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}},"r":{"docs":{},"m":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.04054054054054054}}}},"g":{"docs":{},"h":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.007363770250368188}}}}}}}}},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":5.007168458781362},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}},"l":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.01256281407035176},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.021484375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.01694915254237288},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.017921146953405017},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.017543859649122806},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.010723860589812333},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.029914529914529916},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0353356890459364},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.02097902097902098},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.02735562310030395},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.023255813953488372},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.017673048600883652},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.011666666666666667},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.04081632653061224},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037037037037037035},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.015267175572519083},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.017123287671232876},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.015015015015015015},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.040983606557377046},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.021660649819494584},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.02066115702479339},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.018867924528301886},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.015873015873015872}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":5},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}},"n":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":5.030612244897959},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":5.037037037037037},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":5.00763358778626},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":5.010714285714286},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":5.010273972602739},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":5.009009009009009},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":5.024590163934426},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":5.0108303249097474},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.012396694214876},"coverage.html":{"ref":"coverage.html","tf":0.04205607476635514}},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":5.0625},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":5.0754716981132075},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":5.04054054054054},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":5.04054054054054},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":5.05},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":5.063492063492063},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":5.0625},"coverage.html":{"ref":"coverage.html","tf":0.03271028037383177}}}}}}}},"f":{"docs":{},"o":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.007537688442211055},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.018867924528301886},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.013513513513513514},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.013513513513513514},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.016666666666666666},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.015873015873015872},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332}},"r":{"docs":{},"m":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.03508771929824561},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.01652892561983471}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993}}}}}}}}},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.024734982332155476},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.02127659574468085},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.011782032400589101},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.015267175572519083},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.03424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.024024024024024024},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.039711191335740074},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.05660377358490566},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.04054054054054054},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.04054054054054054},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.05},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.047619047619047616},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.0625}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}},"i":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}},"!":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}}},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.014285714285714285}}}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}},"s":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993}}}}}}}}}}}}}},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.024691358024691357},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.04642857142857143},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.01639344262295082},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.041666666666666664},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.03773584905660377},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.02702702702702703},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.02702702702702703},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.03333333333333333},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.031746031746031744},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.041666666666666664},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}}},"_":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.007537688442211055},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}}}}}}}}}}}}}},"h":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"3":{"6":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"2":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.01060070671378092},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037037037037037035},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.010273972602739725},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.009009009009009009},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.010830324909747292}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}},"p":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.02512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}}},"d":{"docs":{},"e":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"u":{"docs":{},"l":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.02120141342756184},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}},"a":{"docs":{},"g":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}},"x":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993}}}}}}}}},"k":{"docs":{},"e":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":10.2},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}},"a":{"docs":{},"l":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.01256281407035176},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.018633540372670808},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.01282051282051282},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548}}}}}},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"coverage.html":{"ref":"coverage.html","tf":0.014018691588785047}}}}}}}}}}}}}},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.007532956685499058}}}}}}},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}}},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"1":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}},"2":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}},"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}},"i":{"docs":{},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.020100502512562814},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.015625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.031055900621118012},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.012531328320802004},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.03804347826086957},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.02546916890080429},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.021367521367521368},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.014134275618374558},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.027972027972027972},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.020930232558139535},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.03829160530191458},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.03666666666666667},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.027989821882951654},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.03903903903903904},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.02527075812274368},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.01694915254237288},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.024844720496894408},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0176678445229682},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.013986013986013986},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}}},"a":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}},"u":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}},"m":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":10.03125}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.025390625},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.01},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.05660377358490566},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.04054054054054054},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.04054054054054054}},".":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":5.010869565217392},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.01444043321299639}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.015037593984962405},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}},"s":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.047619047619047616}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.009416195856873822},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.007363770250368188}}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.03968253968253968}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.013671875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.01742627345844504},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0121580547112462},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.03255813953488372},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.011782032400589101},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.020356234096692113},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.017857142857142856},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.0136986301369863},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.024024024024024024},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.01639344262295082},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.021660649819494584},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.25},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.05660377358490566},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.12162162162162163},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.12162162162162163},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.2},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.047619047619047616},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.0625}}}}}},"l":{"docs":{},"l":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.01},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}},"o":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}},"h":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}},"n":{"docs":{},"e":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}},"w":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"overview.html":{"ref":"overview.html","tf":10.055555555555555}}}}}},"a":{"docs":{},"l":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.04054054054054054},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.05}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030612244897959183}}}}}}}},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.015065913370998116},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.02120141342756184},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.013986013986013986},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.010309278350515464},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.02888086642599278},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.03773584905660377},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.013513513513513514},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.013513513513513514},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.016666666666666666},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.031746031746031744},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332}},"'":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.017811704834605598},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.03767123287671233},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.021021021021021023},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.04918032786885246},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.02527075812274368},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.05371900826446281}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.007537688442211055},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}}}}}}},"r":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}},"g":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0182370820668693},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.008333333333333333}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.017587939698492462},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.015625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.018832391713747645},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.020050125313283207},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.014745308310991957},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.028268551236749116},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.023310023310023312},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0182370820668693},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.013953488372093023},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.025036818851251842},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.015},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.022900763358778626},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.023972602739726026},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.024024024024024024},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.02459016393442623},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.021660649819494584},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.028925619834710745}},"e":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.010050251256281407},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.007532956685499058},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.012531328320802004},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.011782032400589101},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.008333333333333333},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.015267175572519083},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.02054794520547945},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.018018018018018018},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.02459016393442623},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.018050541516245487},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.024793388429752067}}}},"s":{"docs":{},"[":{"docs":{},"'":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}},"\"":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588}}}}},"s":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.017857142857142856}},"e":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.017857142857142856}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},".":{"docs":{},"t":{"docs":{"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"_":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.047619047619047616},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"l":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}}},"c":{"docs":{},"e":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.13316582914572864},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.05361930294906166},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.024734982332155476},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.10638297872340426},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.04883720930232558},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.09425625920471281},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.04},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.14383561643835616},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.07207207207207207},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.01639344262295082},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":5.04054054054054},"coverage.html":{"ref":"coverage.html","tf":0.02336448598130841}},"'":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.007537688442211055}}}}}}},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":5.002680965147453},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.02763819095477387},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.010723860589812333},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.02735562310030395},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.013953488372093023},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":5.006849315068493},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.042735042735042736},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0182370820668693},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.075},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.05105105105105105},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":5.04054054054054},"coverage.html":{"ref":"coverage.html","tf":0.014018691588785047}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.021367521367521368},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0243161094224924},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.010309278350515464},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.01},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":5.006006006006006},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"e":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667}}}}}},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}},"i":{"docs":{},"d":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.03303303303303303}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.007537688442211055}}}}}}},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00911854103343465},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.013254786450662739},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.04452054794520548},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.05}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}}}},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.04054054054054054}}}}}},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}}}}}}},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007}},"t":{"docs":{},"i":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.018867924528301886},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.013513513513513514},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.013513513513513514},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.016666666666666666},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.015873015873015872},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332}}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.009416195856873822},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"y":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.009765625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.009416195856873822},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.01282051282051282},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0176678445229682},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.011655011655011656},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0121580547112462},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.013953488372093023},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.011782032400589101},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.010830324909747292}}}}}},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}},"n":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}},"l":{"docs":{},"l":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}},"t":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}},"l":{"docs":{},"y":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}},"s":{"docs":{},"t":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.03278688524590164},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.01652892561983471}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":5}}},"e":{"docs":{},"r":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},".":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872},"overview.html":{"ref":"overview.html","tf":0.1111111111111111},"modules.html":{"ref":"modules.html","tf":0.4},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.024691358024691357},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.02054794520547945},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.01639344262295082},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.041666666666666664},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.03773584905660377},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.02702702702702703},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.02702702702702703},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.03333333333333333},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.031746031746031744},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.041666666666666664},"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"o":{"docs":{},"l":{"docs":{},"v":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}},"e":{"docs":{},"(":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}},"g":{"docs":{},"r":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.0136986301369863}},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.010050251256281407},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0121580547112462},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.0273972602739726},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.03015075376884422},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.025390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.009416195856873822},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.015037593984962405},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.059782608695652176},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.02546916890080429},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.03418803418803419},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.011655011655011656},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.013953488372093023},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.016200294550810016},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.035},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030612244897959183},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.08641975308641975},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.07633587786259542},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.02142857142857143},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.07534246575342465},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.06606606606606606},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.04918032786885246},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.06859205776173286},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.05371900826446281}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.015065913370998116},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667}},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.030534351145038167},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.0136986301369863},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.036036036036036036},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.04918032786885246},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.04332129963898917},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037037037037037035}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.09523809523809523},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}},"l":{"docs":{},"e":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}},"]":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.013671875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.021505376344086023},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.02506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.010723860589812333},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.04240282685512368},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.016317016317016316},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0182370820668693},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.018604651162790697},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667}},"e":{"docs":{},":":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.013671875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.013182674199623353},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.03225806451612903},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.022556390977443608},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.024734982332155476},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.016317016317016316},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.02735562310030395},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.01627906976744186},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.010309278350515464},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.011666666666666667},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.04081632653061224}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"p":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030612244897959183}}}}}}}}}}}}}}}},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"[":{"docs":{},"'":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.025089605734767026},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.012531328320802004},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.028925619834710745}}}}},"a":{"docs":{},"n":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"a":{"docs":{},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"j":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"f":{"docs":{},"f":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.020930232558139535},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.05}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872}}}},"i":{"docs":{},"c":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.028268551236749116},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.018648018648018648},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.013953488372093023},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.011782032400589101},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.017123287671232876},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.015015015015015015},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.02459016393442623},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.010830324909747292},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.012396694214876033}},"e":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.0641025641025641},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.02}},"o":{"docs":{},"r":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}},"e":{"docs":{},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":5.0085470085470085},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548}}}}}}}}},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.01282051282051282}}}}},"/":{"docs":{},"u":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}}}}}}}},"?":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}},"docs":{}}}}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}}}},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.01876675603217158},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.12393162393162394},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0425531914893617},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.065},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.07207207207207207},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}}}}}}}}}}}}}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},"(":{"docs":{},"e":{"docs":{},"v":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.014745308310991957},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.017123287671232876},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.04054054054054054}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231}}}}}},"t":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}},"s":{"docs":{},",":{"docs":{},"a":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.015037593984962405},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.021739130434782608},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}}}},"n":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.03278688524590164}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936},"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.017857142857142856},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.018867924528301886},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.013513513513513514},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.013513513513513514},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.016666666666666666},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.015873015873015872},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.04054054054054054}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.037209302325581395},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.025036818851251842},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.18032786885245902},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":5.05},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}}}}}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.01627906976744186},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.010309278350515464},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":5.016393442622951},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}},"docs":{}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}},"t":{"docs":{},"e":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}},"c":{"docs":{},"k":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}},"p":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.013671875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.049689440993788817},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.021739130434782608},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.020107238605898123},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.01627906976744186},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.024691358024691357},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.015267175572519083},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.024793388429752067},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.11320754716981132},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.20270270270270271},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.20270270270270271},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.1},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.19047619047619047},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.20833333333333334}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.017578125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.03389830508474576},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.025089605734767026},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.042606516290726815},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.07420494699646643},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.04428904428904429},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.030395136778115502},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.020930232558139535},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.015267175572519083},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.03278688524590164},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.12274368231046931},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.07851239669421488},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.03773584905660377},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":5.063492063492063},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294}}}}}},"i":{"docs":{},"d":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.015267175572519083}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.013671875},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.024734982332155476},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.011655011655011656},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":5.007220216606498},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"e":{"docs":{},":":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":5.004651162790697},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.007518796992481203}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":5.004662004662005},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":5.007067137809187},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":5.006079027355623},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.05}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.010830324909747292}}}}}}}}}},"i":{"docs":{},"l":{"docs":{},"l":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}}},"b":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}}}}}},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"c":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115}}}}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}},"/":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},"!":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}},"v":{"docs":{},"g":{"docs":{"overview.html":{"ref":"overview.html","tf":0.05555555555555555}}}},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.04054054054054054}}}}}},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"/":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}},"p":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"coverage.html":{"ref":"coverage.html","tf":0.014018691588785047}},".":{"docs":{},"t":{"docs":{"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.018867924528301886},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}}}}}}}}},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"/":{"docs":{},"h":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"/":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},".":{"docs":{},"t":{"docs":{"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.013513513513513514},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}},".":{"docs":{},"t":{"docs":{"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.013513513513513514},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976},"coverage.html":{"ref":"coverage.html","tf":0.02336448598130841}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.015873015873015872},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.016666666666666666},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668},"coverage.html":{"ref":"coverage.html","tf":0.009345794392523364}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.020833333333333332},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}},"p":{"docs":{},"a":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}},"c":{"docs":{},"e":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.0273972602739726},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}}}},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.047619047619047616}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.029296875},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.017921146953405017},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.042606516290726815},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.02717391304347826},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.016317016317016316},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.01914580265095729},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.015},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.09504132231404959},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.05660377358490566},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":5.0625},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.0625}}}}}},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.007518796992481203}}}}}}},"'":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":5.002945508100147},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":5.003333333333333},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.04878048780487805},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},"b":{"docs":{},"o":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}},"p":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.010273972602739725},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.009009009009009009},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}},"b":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"e":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"y":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}},"?":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014}}}}},"i":{"docs":{},"d":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}},"l":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}},".":{"docs":{},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"/":{"docs":{},"[":{"docs":{},"\\":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}},"[":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\\":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"\\":{"docs":{},"n":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"w":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},".":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}},"e":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{},"d":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"b":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.008333333333333333}},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}}}}}}}}}},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}},"u":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}},"u":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.007633587786259542},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}},"`":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}}}}}},"o":{"docs":{},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}},"s":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395}},"l":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"}":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}},"_":{"docs":{},"i":{"docs":{},"d":{"docs":{},"}":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.006702412868632708},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551}}}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{},"a":{"docs":{},"n":{"docs":{},"i":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}},"i":{"docs":{},"d":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.013333333333333334}},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}},"?":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"t":{"docs":{},"=":{"docs":{},">":{"docs":{},"t":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}},"?":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"]":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"{":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},":":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}},"i":{"docs":{},"d":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331}}}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}},"?":{"docs":{},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"?":{"docs":{},".":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"?":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"a":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"n":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"g":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.007518796992481203},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"[":{"docs":{},"'":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}}},"/":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.025089605734767026},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}},"w":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"r":{"docs":{},"u":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}},"[":{"docs":{},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},".":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"s":{"docs":{},"\"":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}}}}},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}},"s":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541}}}}}}}}}}}}}}}}}},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"`":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}},"'":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"'":{"docs":{},")":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{},"p":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"\"":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541}}}}}},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"t":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"(":{"docs":{},"`":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{},"/":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"$":{"docs":{},"{":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"i":{"docs":{},"d":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}}}},"\"":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"h":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},":":{"8":{"0":{"8":{"0":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"k":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"a":{"docs":{},"g":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"l":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"'":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274}}}}},"e":{"docs":{},"m":{"docs":{},"t":{"docs":{},"o":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}},"r":{"docs":{},"e":{"docs":{},"'":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.04054054054054054}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714}},"i":{"docs":{},"z":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.025}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.07317073170731707},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.024844720496894408},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.009765625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.007532956685499058},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.017921146953405017},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.03804347826086957},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.004021447721179625},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.01282051282051282},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.011627906976744186},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612}}}},"i":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714}}}}}},"s":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.003766478342749529}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.009416195856873822},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"interfaces/Block.html":{"ref":"interfaces/Block.html","tf":0.08333333333333333},"interfaces/Classroom.html":{"ref":"interfaces/Classroom.html","tf":0.09433962264150944},"interfaces/Problem.html":{"ref":"interfaces/Problem.html","tf":0.10810810810810811},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.14864864864864866},"interfaces/Solution.html":{"ref":"interfaces/Solution.html","tf":0.1},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.09523809523809523},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.08333333333333333},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}},"\\":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872}}},"q":{"docs":{},"u":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.01171875}},"e":{"docs":{},"'":{"docs":{},",":{"docs":{},"'":{"docs":{},"x":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.00390625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678}}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005}}}}}}}}}}}}}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.023809523809523808},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0234375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.013182674199623353},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.02867383512544803},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.013404825737265416},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.014134275618374558},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.02735562310030395},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.0069767441860465115},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.01},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}},"e":{"docs":{},"r":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.015065913370998116},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.006211180124223602},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.03225806451612903},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.017543859649122806},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.06521739130434782},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.02120141342756184},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.018648018648018648},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.013333333333333334},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.049586776859504134}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.0035842293906810036},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.004273504273504274},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.015625},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.03225806451612903},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.02756892230576441},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.059782608695652176},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.021367521367521368},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.024734982332155476},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.016317016317016316},"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.05102040816326531},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":5.008264462809917},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}},"'":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007}}},"d":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.022556390977443608},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.024691358024691357},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.02066115702479339}},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}}}}}}}}}}}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}},"f":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"l":{"docs":{},"y":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.018018018018018018},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.01444043321299639},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}},"e":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.002512562814070352}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.005025125628140704}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.002544529262086514}},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.002506265664160401}},"(":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}},":":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575}}}}}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.003003003003003003}},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.007220216606498195}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"u":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00938337801608579}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}},"r":{"docs":{},"l":{"docs":{"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.01444043321299639}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.01020408163265306}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.007936507936507936}}}}}}}},"i":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.015873015873015872},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}}},"e":{"docs":{},"w":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.01060070671378092}},"_":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.005649717514124294},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.005}},"(":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279}}}}}}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279}}}}}},"t":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}}}}}},"/":{"docs":{},"s":{"docs":{},"t":{"docs":{},"u":{"docs":{},"d":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.0035335689045936395},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0182370820668693},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667},"interfaces/ProblemSet.html":{"ref":"interfaces/ProblemSet.html","tf":0.04054054054054054}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.01507537688442211},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.015625},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.013182674199623353},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.012422360248447204},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.007168458781362007},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.017543859649122806},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.005434782608695652},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.013404825737265416},"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.021367521367521368},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.013986013986013986},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.0060790273556231},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.016200294550810016},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.013333333333333334},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037037037037037035},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315},"injectables/SolutionService.html":{"ref":"injectables/SolutionService.html","tf":0.00819672131147541},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.004132231404958678}}}}},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"components/AppComponent.html":{"ref":"components/AppComponent.html","tf":0.024390243902439025},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.005859375},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/ConfirmationModalComponent.html":{"ref":"components/ConfirmationModalComponent.html","tf":0.024844720496894408},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.007518796992481203},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.002331002331002331},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.0036101083032490976}}},"i":{"docs":{},"d":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.006993006993006993}}}}}}}}},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.03125}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.1111111111111111}}}},"n":{"docs":{},"e":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.007532956685499058},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"components/AddProblemModalComponent.html":{"ref":"components/AddProblemModalComponent.html","tf":0.017587939698492462},"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645},"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.015197568389057751},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.008836524300441826},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.005089058524173028},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.00684931506849315}}}},"n":{"docs":{},"e":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.00804289544235925},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.013953488372093023},"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}},"a":{"docs":{},"r":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"x":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.002325581395348837}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.004651162790697674}}}}}}}},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802},"interfaces/Student.html":{"ref":"interfaces/Student.html","tf":0.047619047619047616},"interfaces/Teacher.html":{"ref":"interfaces/Teacher.html","tf":0.0625}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.013671875},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.004662004662004662}},")":{"docs":{},".":{"docs":{},"t":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125}}}}}}}}}}}}}}}}}},"x":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.02142857142857143}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.017857142857142856}},"e":{"docs":{},"(":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"[":{"docs":{},"^":{"docs":{},"\\":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"n":{"docs":{},"]":{"docs":{},"*":{"docs":{},"\\":{"docs":{},"r":{"docs":{},"?":{"docs":{},"\\":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}},"}":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"*":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"\\":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"*":{"docs":{},"\\":{"docs":{},"(":{"docs":{},".":{"docs":{},"*":{"docs":{},"\\":{"docs":{},")":{"docs":{},"\\":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}},"s":{"docs":{},"*":{"docs":{},";":{"docs":{},".":{"docs":{},"*":{"docs":{},";":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"*":{"docs":{},".":{"docs":{},"+":{"docs":{},"\\":{"docs":{},"/":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"*":{"docs":{},"\\":{"docs":{},"d":{"docs":{},"+":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"*":{"docs":{},"\\":{"docs":{},")":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"*":{"docs":{},"{":{"docs":{},"/":{"docs":{},",":{"docs":{},"(":{"docs":{},"c":{"docs":{},"t":{"docs":{},"x":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"*":{"docs":{},"\\":{"docs":{},"(":{"docs":{},".":{"docs":{},"*":{"docs":{},"\\":{"docs":{},")":{"docs":{},"\\":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"t":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"n":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.010025062656641603},"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.010869565217391304},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}},"g":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.010752688172043012}}}}}}},"i":{"docs":{},"n":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.007518796992481203}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":0.005012531328320802}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"components/LoginComponent.html":{"ref":"components/LoginComponent.html","tf":5.005012531328321},"coverage.html":{"ref":"coverage.html","tf":0.004672897196261682}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"components/NavbarComponent.html":{"ref":"components/NavbarComponent.html","tf":0.016304347826086956},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.037037037037037035}}}}}},"o":{"docs":{},"k":{"docs":{"components/SelectSetModalComponent.html":{"ref":"components/SelectSetModalComponent.html","tf":0.008547008547008548}}},"p":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.007142857142857143}}}},"w":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0029455081001472753}},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.004418262150220913}}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}}}}}}},"_":{"docs":{},"s":{"docs":{},"n":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.0078125},"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.007532956685499058},"components/HomepageComponent.html":{"ref":"components/HomepageComponent.html","tf":0.014336917562724014},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.005361930294906166},"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.014134275618374558},"components/StudentClassroomsComponent.html":{"ref":"components/StudentClassroomsComponent.html","tf":0.009324009324009324},"components/StudentSolutionComponent.html":{"ref":"components/StudentSolutionComponent.html","tf":0.009302325581395349},"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.005891016200294551},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.006666666666666667},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.024691358024691357},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.0136986301369863},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.012012012012012012},"injectables/StudentService.html":{"ref":"injectables/StudentService.html","tf":0.01444043321299639}}}}}}}}}}},"x":{"docs":{"components/ClassroomCreationComponent.html":{"ref":"components/ClassroomCreationComponent.html","tf":0.001953125},"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/ClassroomService.html":{"ref":"injectables/ClassroomService.html","tf":0.010178117048346057},"injectables/ProblemService.html":{"ref":"injectables/ProblemService.html","tf":0.003424657534246575},"injectables/ProblemsetService.html":{"ref":"injectables/ProblemsetService.html","tf":0.006006006006006006}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.0018832391713747645}}}},"n":{"docs":{},"t":{"docs":{"components/TeacherProblemComponent.html":{"ref":"components/TeacherProblemComponent.html","tf":0.0014727540500736377}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{"components/ClassroomDetailComponent.html":{"ref":"components/ClassroomDetailComponent.html","tf":0.011299435028248588}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.002680965147453083}}}}}}},"e":{"docs":{},"b":{"docs":{"components/StudentClassroomViewComponent.html":{"ref":"components/StudentClassroomViewComponent.html","tf":0.007067137809187279},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0033333333333333335}}},"l":{"docs":{},"l":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155}}}}},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}},"s":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.0035714285714285713}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"k":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.012345679012345678},"injectables/UserService.html":{"ref":"injectables/UserService.html","tf":0.008264462809917356}},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612}}}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"g":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.02040816326530612}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/AuthGuard.html":{"ref":"injectables/AuthGuard.html","tf":0.030612244897959183},"injectables/AuthService.html":{"ref":"injectables/AuthService.html","tf":0.04938271604938271}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"miscellaneous.html":{"ref":"miscellaneous.html","tf":0.0625}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{"injectables/ComplexityParserService.html":{"ref":"injectables/ComplexityParserService.html","tf":0.010714285714285714}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"d":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{"components/ProblemCreationComponent.html":{"ref":"components/ProblemCreationComponent.html","tf":0.0013404825737265416}}}}}}}}},"y":{"docs":{},"y":{"docs":{},"y":{"docs":{},"i":{"docs":{"components/StudentProblemSetComponent.html":{"ref":"components/StudentProblemSetComponent.html","tf":0.00303951367781155},"components/TeacherProblemsetPageComponent.html":{"ref":"components/TeacherProblemsetPageComponent.html","tf":0.0016666666666666668}}}}}}},"length":3319},"corpusTokens":["0","0/1","0/2","0/4","0/5","0/6","0/8","1","1/5","1/7","10","10/16","100","11/16","11/21","14","15.1.5","16","1].complex","2","2/2","2/6","20","2000","270px","29","3","3/7","30","31","33","38","39","4/10","4/9","40","4000","404","42","44","5/13","5/16","5/17","5/7","5/8","52","5cb85c","6/20","6/6","6/7","6/9","62","64","66","68","7","71","8","85","9","9/14","_snackbar","a.beglin","abov","ac","ac.length","accept","accepttext","access","access_cod","accesscod","account","activ","activatedrout","activatedroutesnapshot","ad","add","addclassroom","addclassroom(classroom","addproblem","addproblem(problem","addproblemmodalcompon","addproblems(problem","addproblemset","addproblemset(problemset","addproblemsmodalopen","addproblemtoset","addproblemtosets(problem","addsolut","addsolution(solut","addsolutionsinfo","addsolutionsinfo(problemid","addstud","addstudent(stud","addstudent(userdetail","addstudenttest","addstudenttoclassroom","addstudenttoclassroom(access_cod","addteach","addteacher(teach","addteacher(userdetail","addtoallproblemsetslist","addtoallproblemsetslist(problemset","algorithm","allow","allproblem","allproblems.foreach((problem","allproblemset","alreadi","analyz","analyzesolut","analyzesolutions(solut","angular","angular/common","angular/common/http","angular/cor","angular/material/dialog","angular/material/expans","angular/material/snack","angular/rout","anoth","answer","any).subscrib","app","app.component.css","app.component.html","appcompon","applic","appropri","aren't","array(problem.complexity.length).fil","array(this.teacherclassrooms?.length).fill(tru","artifact","associ","auth.servic","authent","authguard","authservic","autofil","automat","averag","avg","b.beglin","b7fff8","b8b7ff","backend","backennd","background","backspac","bar","base","bd8c7d","be","beglin","behaviorsubject","behaviorsubject(tru","belong","blank","block","block.complex","blockcolor","blockdepth","blocklist","blocklist.foreach((block","blocklist.length","blocklist[blockdepth","blocklist[i","blocks'","blur","boolean","border","box","brace","break","browser","build","button","calcul","calculatescor","call","cancel","canceltext","candid","capabl","case","catch","chang","charact","check","checkingisstud","checkingisteach","checkuniqueclassroomnam","checkvalidcod","checkvalidcode(ev","choic","class","classroom","classroom','x","classroom).pip","classroom.nam","classroom/1","classroom_id","classroom_id).subscrib","classroom_nam","classroom_servic","classroomcod","classroomcreationcompon","classroomdetailcompon","classroomid","classrooms.compon","classrooms.component.css","classrooms.component.html","classrooms.component.t","classrooms.foreach((classroom","classrooms/stud","classroomservic","classroomservice:classroomservic","cli","click","client","clipboard","clipboard','x","close","closecur","closedowhil","code","code','x","codeinput","color","command","comment","complet","complex","complexi","complexityansw","complexityparserservic","compnent","compodoc","compon","configur","confirm","confirmationmodalcompon","confirmjoinclassroom","consequ","consid","console.log('error","console.log(chang","console.log(classroom","console.log(this.classroom","console.log(this.classroom_id","const","constant","constructor","constructor(authservic","constructor(classroomservic","constructor(dialog","constructor(http","constructor(keycloakservic","constructor(overrid","constructor(priv","constructor(problemservic","constructor(problemsetservic","constructor(protect","constructor(publ","constructor(userservic","contain","content","contentedit","continu","copi","correct","correspond","coverag","creat","createaccountredirect","createdproblem","createdproblem).subscrib","createdproblem.nam","createproblem","createproblemmap","createproblemset","createstud","createstudent(stud","creation","creation.compon","creation.component.css","creation.component.html","creation.component.t","creation/classroom","creation/problem","crypto","cryptoj","cryptojs.sha256(json.stringify(problemcontent)).tostr","ctx","ctx.accept(\"closecur","ctx.accept(\"closedowhil","ctx.accept(\"logloop","ctx.accept(\"loop","ctx.accept(\"opencur","ctx.ignor","cubic","curli","current","currentd","currentproblem","currentproblemmap","currtoken.lin","currtoken?.typ","d0ffb7","data","date","datepip","dd","decreas","default","defin","delet","delete','x","deleteclassroom","deleteclassroom(classroom","deleteclassroom(classroom_id","deleted','x","deleteproblem","deleteproblem(problemid","deleteproblem(problemid:numb","deleteproblemset","deleteproblemset(problemsetid","deletestud","deletestudent(id","deliv","deni","depth","descript","detail","detail.component.css","detail.component.html","detail.component.t","detail/classroom","detailedprobleminfo","detailedprobleminfo.avg","detailedprobleminfo.highscor","detailedprobleminfo.lowscor","detailedprobleminfo.submiss","detailedproblemlist","determin","dev","develop","dialog","dialogconfig","dialogconfig.autofocu","dialogconfig.data","dialogconfig.disableclos","dialogconfig.width","dialogref","dialogref.afterclosed().subscrib","differ","digit","directive|pipe|service|class|guard|interface|enum|modul","directori","dispatch","display","dist","div","document","document.createrang","document.createtextnode(tabnodevalu","document.execcommand('copi","document.getelementbyid('search","document.getselect","doesn't","don't","due","duedat","durat","duration:2000","e","e2","each","element","element.classlist.add('signup","element.classlist.remove('signup","element.textcontent!.trim","email","empti","encount","end","endlin","enforc","enforcemaxlength","enforcemaxlength(ev","enrol","enrolled_class","enrolled_stud","enrolledclassroom","enter","equival","error","etc","event","event'","event.key","event.preventdefault","event.stoppropag","event.target","event.target.files[0","event.target.innertext","eventemitt","everyth","execut","exist","export","extend","fals","feffb7","fetch","ffb7bd","ffb7f5","file","file','x","file:fil","filecont","filecontent.split(/[\\r\\n","fileread","fill","find","first","first_nam","firstnam","fo","for(let","form","formatcomplex","formatcomplexity(complex","formcomplet","found!','x","front","frontend","function","further","gener","generateaccesscod","generatedetailedproblemlist","get","getallclassroom","getallproblem","getallproblemset","getallstud","getbordercolor","getbordercolor(problemset","getclassroombyaccesscod","getclassroombyaccesscode(access_cod","getclassroombyid","getclassroombyid(classroomid","getclassroomsbyteacheremail","getclassroomsbyteacheremail(teacheremail","getemptyproblemset","getenrol","getenrollment(student_id","getlinecolor","getlinecolor(linenum","getproblembyid","getproblembyid(problemid","getproblembyid(problemid:numb","getproblembysetid","getproblembysetid(setid","getproblembysetid(setid:numb","getproblemcandid","getproblemcandidates(allproblem","getproblemhash","getproblemhash(problem","getproblemsetbyid","getproblemsetbyid(problemsetid","getproblemsetsbyclassroomid","getproblemsetsbyclassroomid(classroomid","getrol","getsolutionbyproblemid","getsolutionbyproblemid(problemid","getsourcecodefromtextinput","getstud","getstudent(id","getstudentbyemail","getstudentbyemail(email","getteacherbyemail","getteacherbyemail(email","gettotalscor","getuserdetail","given","go","grab","grant","handl","handledelet","handledelete(problemid","handlestudentlogin","handlestudentlogin(userdetail","handletab","handletab(ev","handleteacherlogin","handleteacherlogin(userdetail","hanl","harm","hash","header","help","hex","high","highscor","hint","hold","homepag","homepage.component.css","homepage.component.html","homepagecompon","html","htmlelement","htmlspanel","http","http://localhost:4200","http://localhost:8080/classroom","http://localhost:8080/classrooms/addstudent/${classroom.id}/${student_id","http://localhost:8080/classrooms/code/${access_cod","http://localhost:8080/classrooms/removestudent/${classroom.id}/${student_id","http://localhost:8080/stud","httpclient","https://stackoverflow.com/questions/2237497/mak","id","identifi","if(!receivedstud","if(!receivedteach","if(!stud","if(!teach","if(!this.authent","if(!this.checkuniqueclassroomnam","if(!this.formcomplet","if(data","if(grant","if(lin","if(lowscor","if(problem.id","if(problemidparam","if(rang","if(requiredrol","if(set.id","if(setid","if(setidparam","if(stud","if(teach","if(this.authservice.getuserdetail","if(this.codeinput.length","if(this.data.accepttext","if(this.data.canceltext","if(this.data.messag","if(this.data.titl","if(this.nam","if(this.problemid","if(this.rol","if(this.setid","if(this.us","if(this.userservice.us","ignor","implement","import","in_class","incomplete','x","incorrect","indent","index","individu","info","inform","initi","initialstacklength","inject","inject(mat_dialog_data","input","insert","insid","interfac","irrevers","isaccessallow","isaccessallowed(rout","isload","isselect","isselected(set","isstud","isteach","java","jest","join","joinclassroom","js","keep","key","keycloak","keycloakangular","keycloakauthguard","keycloakconfig","keycloakservic","last_nam","lastnam","later","length","length).touppercas","lexer","lexer.input(sourcecod","lexer.rul","lexer.rule(/\\/\\/[^\\r\\n]*\\r?\\n","lexer.rule(/\\}\\s*whil","lexer.rule(/do\\","lexer.rule(/for\\s*\\(.*\\)\\","lexer.rule(/for\\s*\\(.*\\s*;.*;\\s*.+\\/\\s*\\d+\\s*\\)\\s*{/,(ctx","lexer.rule(/while\\s*\\(.*\\)\\","lexer.token","lexer.tokens().foreach((token","line","linear","linecomplexitycorrect","linecomplexitycorrect(index","linenum","list","log","loggedin","login","login.component.css","login.component.html","logincompon","logout","longer","look","loop","low","lowscor","made","main","make","manag","manipul","map","mat_dialog","mat_dialog_data","mataccordion","match","matdialog","matdialogconfig","matdialogref","math.random().tostring(36).substring(2","matsnackbar","max","maxlength","maxn","mean","mention","menu","messag","metadata","method","miscellan","mm","mockaddproblem","mockdialogref","mockmatdialog","mockmatsnackbar","mockproblem1","mockproblem2","mockproblemarray","mockproblemidmap","mockproblemlist","mockproblemservic","mockrang","mockselect","modal","modal.compon","modal.component.css","modal.component.html","modal.component.t","modal/add","modal/confirm","modal/select","modul","more","mouseev","multilin","name","name.','x","navbar","navbar.component.css","navbar.component.html","navbarcompon","navig","need","nest","new","new_cod","newaccesscod","newclassroom","next","ng","ngonchang","ngonchanges(chang","ngoninit","ngzone","none","noth","notifi","now","npm","null","number","object","object'","observ","obtain","onchang","onchildremov","onchildremove(index","onfileselect","onfileselected(ev","oninit","open","opencurcount","openoptionmenu","openoptionmenu(ev","openoptionmenu(event:ev","option","orm","otherwis","out","output","overal","overallcomplex","overallcomplexitycorrect","overrid","overview","packag","page","page.component.css","page.component.html","page.component.t","page/teach","panel","param","paramet","parammap","params[\"classroomid","params[\"id","params['classroomid","params['problemid","params['rol","params['setid","parent","pars","parse(sourcecod","parser","parser.servic","parser.service.t","parser/block","parser/block.t","parser/complex","parserconfigur","parserconfiguration(lex","pass","password_hash","perform","pipe","placehold","platform","polynomi","post","postedproblem","postedproblem.setid","potenti","practic","present","preserv","previou","privat","probem","problem","problem'","problem','x","problem).pip","problem.complex","problem.component.css","problem.component.html","problem.component.t","problem.hint","problem.id","problem.nam","problem.overallcomplex","problem.setid","problem.sourcecod","problem.totalscor","problem/teach","problemcandid","problemcont","problemcontenthash","problemcreationcompon","problemid","problemidparam","problemlist","problemmap","problems','x","problems.foreach(problem","problemservic","problemset","problemset).pip","problemset.classroomid","problemset.dued","problemset.id","problemset.nam","problemset.problemlist","problemset.showd","problemset.typ","problemset.vis","problemsetform","problemsetid","problemsetservic","problemsettoremov","problemsettoremove.id","problemstoadd","project","promis","promise(async","proper","properti","protect","provid","providedin","public","pull","put","quadrat","ran","random","rang","range.insertnode(tabnod","range.selectnodecontents(span","range.setendafter(tabnod","range.setstartafter(tabnod","reader","reader.onload","reader.readastext(fil","reader.result","readm","receiv","receivedproblem","receivedstud","receivedteach","recievedproblem","redirecttoprofil","refer","refreshclassroom","regener","regist","reject","rejoin","reload","remov","removechild","removefromallproblemsetslist","removefromallproblemsetslist(problemsettoremov","removestud","removestudent(classroom","removestudent(stud","request","requir","requiredrol","reset","resolv","resolve(fals","resolve(gr","result","retriev","return","right","role","root","rootblock","rootblock].depth","rootblock].endlin","rout","route.data['rol","route:activatedrout","router","routerstatesnapshot","rule","run","rxj","same","scaffold","score","scoresum","scoresum/solutions.length","secur","sel","sel?.getrangeat(0","select","selectaccesscod","selectaccesscode(ev","selected/unselect","selectedproblemset","selectedset","selector","selectproblem","selectproblem(problemid","selectproblemset","selectproblemset(problemset","selectset","selectset(set","selectsetmodalcompon","send","separ","serv","server","servic","service/classroom.servic","service/classroom.service.t","service/problem.servic","service/problem.service.t","service/problemset.servic","service/problemset.service.t","service/solution.servic","service/solution.service.t","service/student.servic","service/student.service.t","session","set","set','x","set(this.classroom.enrolled_stud","set.component.css","set.component.html","set.component.t","set.id","set.problem","set/stud","setalltoconst","setcodeinput","setcodeinput(ev","setid","setidparam","setids.foreach((setid","sets,a","settitleinput","settitleinput(ev","shorten","show","showchild","showdat","showresult","side","simplechang","singl","snack","snackbar","solut","solution','x","solution.component.css","solution.component.html","solution.component.t","solution.scor","solution/stud","solutions.foreach((solut","solutions.length","solutions[0].scor","solutionservic","sourc","sourcecod","space","span","specifi","src/app/add","src/app/app.component.t","src/app/auth.service.t","src/app/auth.t","src/app/classroom","src/app/classroom.t","src/app/complex","src/app/confirm","src/app/homepage/homepage.component.t","src/app/login/login.component.t","src/app/navbar/navbar.component.t","src/app/problem","src/app/problem.t","src/app/problemset","src/app/problemset.t","src/app/select","src/app/solut","src/app/solution.t","src/app/stud","src/app/student.t","src/app/teach","src/app/teacher.t","src/app/user.service.t","stack","stack.length","stack.push(token","stack.revers","start","state","statement","statment","still","stop","store","string","student","student.first_nam","student.id","student.last_nam","student_id","student_list","studentclassroomscompon","studentclassroomviewcompon","studentexist","studentid","studentproblemsetcompon","studentservic","studentservice:studentservic","studentsolut","studentsolutioncompon","studenturl","styleurl","submit","submitbutton","submitbutton.classlist.add(\"click","submitbutton.classlist.remove(\"click","submitclassroom","submitproblem","submitsolut","subscrib","subscribe(stud","success","success/error","successfully!','x","super(rout","support","sure","svg","switch","switchmap","t","t\\r\\n","tab","tabnod","tabnodevalu","take","tap","teacher","teacher'","teacherclassroom","teacheremail","teacherexist","teacherproblemcompon","teacherproblemsetpagecompon","templateurl","test","text","text.length","textbox","that'","themto","there'","this._snackbar.open('cannot","this._snackbar.open('classroom","this._snackbar.open('copi","this._snackbar.open('could","this._snackbar.open('enrol","this._snackbar.open('ent","this._snackbar.open('form","this._snackbar.open('problem","this._snackbar.open('set","this._snackbar.open('un","this._snackbar.open(`classroom","this._snackbar.open(`log","this._snackbar.open(`problem","this.accepttext","this.access_cod","this.activatedroute.params.subscribe(param","this.addproblems(data","this.addproblemtosets(createdproblem","this.addsolutionsinfo(problem.id","this.addstudent(userdetail","this.addteacher(userdetail","this.addtoallproblemsetslist(data","this.allproblem","this.allproblemset","this.allproblemsets.filter((problemset","this.allproblemsets.push","this.analyzesolutions(solut","this.authservice.getuserdetail","this.authservice.logout","this.blocklist","this.blocklist[i].beglin","this.calculatescor","this.canceltext","this.classroom","this.classroom.id","this.classroom.nam","this.classroom.teach","this.classroom?.id","this.classroom_id","this.classroom_service.getclassroombyid(this.classroom_id).subscrib","this.classroom_service.updateclassroom(updated_classroom","this.classroomcod","this.classroomid","this.classroomservice.addclassroom(newclassroom).subscrib","this.classroomservice.addstudenttoclassroom","this.classroomservice.addstudenttoclassroom(this.access_cod","this.classroomservice.deleteclassroom(this.classroom_id","this.classroomservice.getclassroombyaccesscode(this.access_code).subscrib","this.classroomservice.getclassroomsbyteacheremail(this.teacheremail).subscrib","this.classroomservice.getclassroomsbyteacheremail(this.userservice.user.teacheremail).subscrib","this.classroomservice.removestudent(this.classroom","this.codeinput","this.codeinput.split(/[\\r\\n","this.complex","this.complexity.foreach(lin","this.complexity.length","this.complexity.push","this.complexity[block.beglin","this.complexityansw","this.complexityparserservice.parse(this.problem.sourcecode.join(\"\\n","this.complexityparserservice.parse(this.sourcecode.join(\"\\n","this.createproblemmap","this.currentd","this.currentproblem","this.currentproblemmap.has(problemcontenthash","this.currentproblemmap.set(problemcontenthash","this.currentproblems.foreach","this.data.accepttext","this.data.canceltext","this.data.currentproblem","this.data.messag","this.data.titl","this.datepipe.transform(d","this.deleteproblem(problemid","this.detailedproblemlist","this.detailedproblemlist.push(detailedprobleminfo","this.dialog.clos","this.dialog.close(fals","this.dialog.close(this.problemstoadd","this.dialog.close(this.selectedset","this.dialog.close(tru","this.dialog.open(addproblemmodalcompon","this.dialog.open(confirmationmodalcompon","this.dialog.open(selectsetmodalcompon","this.enrolledclassroom","this.enrolledclassrooms.length","this.firstnam","this.formatcomplexity(block.complex","this.formatcomplexity(maxn","this.formcomplet","this.generateaccesscod","this.generatedetailedproblemlist","this.getemptyproblemset","this.getproblemcandidates(this.allproblem","this.getproblemhash(problem","this.gettotalscor","this.handlestudentlogin(userdetail","this.handleteacherlogin(userdetail","this.hint","this.hints.push","this.hints[block.beglin","this.http.delete(\"http://localhost:8080/classroom","this.http.delete(\"http://localhost:8080/problem","this.http.delete(\"http://localhost:8080/problemset","this.http.delete(url","this.http.get","this.http.get(\"http://localhost:8080/classrooms\").pip","this.http.get(\"http://localhost:8080/problem","this.http.get(\"http://localhost:8080/problems\").pip","this.http.get(\"http://localhost:8080/problemset","this.http.get(\"http://localhost:8080/problemsets/classroom","this.http.get(\"http://localhost:8080/set/problem","this.http.get(\"http://localhost:8080/solutions/problem","this.http.get(\"http://localhost:8080/students/email","this.http.get(\"http://localhost:8080/teachers/email","this.http.get('http://localhost:8080/students').pip","this.http.get(`http://localhost:8080/classrooms/email/${teacheremail","this.http.get(url","this.http.post(\"http://localhost:8080/classroom","this.http.post(\"http://localhost:8080/problem","this.http.post(\"http://localhost:8080/problemset","this.http.post(\"http://localhost:8080/solut","this.http.post(\"http://localhost:8080/stud","this.http.post(\"http://localhost:8080/teach","this.http.post(this.studenturl","this.http.put","this.http.put(\"http://localhost:8080/problem","this.http.put(\"http://localhost:8080/problemset","this.http.put(`http://localhost:8080/classrooms/${classroom.id","this.http.put(url","this.isload","this.keycloakangular.login","this.keycloakservice.getkeycloakinstance().accountmanag","this.keycloakservice.getkeycloakinstance().idtokenpars","this.keycloakservice.getuserrol","this.keycloakservice.logout","this.lastnam","this.length","this.loggedin","this.messag","this.nam","this.name.length","this.overallcomplex","this.parent.generateaccesscod","this.parserconfiguration(lex","this.problem","this.problemcandid","this.problemcandidates.push(problem","this.problemid","this.problems.foreach((problem","this.problemservic","this.problemservice.addproblem(createdproblem).subscrib","this.problemservice.addproblem(postedproblem).subscrib","this.problemservice.addproblem(problem).subscrib","this.problemservice.deleteproblem(problemid).subscrib","this.problemservice.getallproblems().subscribe(recievedproblem","this.problemservice.getproblembyid(this.problemid).subscrib","this.problemservice.getproblembysetid(set.id).subscrib","this.problemservice.getproblembysetid(this.setid).subscrib","this.problemservice.updateproblem(this.problemid","this.problemsetform","this.problemsetform.nam","this.problemsetform.name.length","this.problemsetservice.addproblemset(this.problemsetform).subscribe(data","this.problemsetservice.deleteproblemset(this.selectedproblemset.id).subscrib","this.problemsetservice.getproblemsetbyid(this.setid).subscribe((set","this.problemsetservice.getproblemsetsbyclassroomid(classroom.id","this.problemsetservice.getproblemsetsbyclassroomid(this.classroomid).subscribe(data","this.problemsetservice.getproblemsetsbyclassroomid(this.classroomid).subscribe(set","this.problemsetservice.updateproblemset(this.problemsetform","this.problemstoadd.delete(problem.id","this.problemstoadd.has(problem.id","this.problemstoadd.set(problem.id","this.removechild.emit(this.index","this.removefromallproblemsetslist(this.selectedproblemset","this.rol","this.route.params.subscribe(param","this.router.navig","this.router.navigate(['/teach","this.router.navigate(['classroom","this.router.navigate(['login","this.router.navigate(['problem","this.router.navigate(['stud","this.router.navigate(['teach","this.scor","this.selectedproblemset","this.selectedproblemset.id","this.selectedproblemset.id).subscrib","this.selectedproblemset?.id","this.selectedsets.delete(setid","this.selectedsets.has(set.id","this.selectedsets.has(setid","this.selectedsets.set(setid","this.set","this.setalltoconst","this.setid","this.sets.concat(set","this.sets.foreach((set:ani","this.showchild","this.showchild.push(tru","this.showchild[index","this.showresult","this.solutionservice.addsolution(studentsolution).subscrib","this.solutionservice.getsolutionbyproblemid(problemid).subscrib","this.sourcecod","this.sourcecode.length","this.sourcecode.push(lin","this.stud","this.student_id","this.student_id).subscrib","this.student_list","this.student_list.delete(stud","this.student_list.s","this.studentservice.getenrol","this.studentservice.getenrollment(this.userservice.user.id).subscrib","this.studentservice.getstud","this.studentservice.getstudent(this.userservice.user.id).subscrib","this.studenturl}/${id","this.studenturl}/${student.id","this.studenturl}/${student_id}/classroom","this.teach","this.teacherclassroom","this.teacherclassrooms.map(t=>t.nam","this.teacherclassrooms?.push(classroom","this.teacherclassrooms[0","this.teacherclassrooms[0].access_cod","this.teacheremail","this.titl","this.totalscor","this.unselectproblemset","this.updatefrontendstudentandredirect(stud","this.updatefrontendteacherandredirect(teach","this.updateproblemlist","this.us","this.user.rol","this.userservice.addstudent(student).subscrib","this.userservice.addteacher(teacher).subscrib","this.userservice.getstudentbyemail(student.email).subscrib","this.userservice.getstudentbyemail(userdetails.email).subscrib","this.userservice.getteacherbyemail(teacher.teacheremail).subscrib","this.userservice.getteacherbyemail(this.userservice.user.teacheremail).subscribe({next:teach","this.userservice.getteacherbyemail(userdetails.email).subscrib","this.userservice.updateuser(receivedstud","this.userservice.updateuser(receivedteach","this.userservice.updateuser(stud","this.userservice.updateuser(teach","this.userservice.us","this.userservice.user.first_nam","this.userservice.user.id","this.userservice.user.last_nam","this.userservice.user.rol","this.userservice.user.teacheremail","this.userservice.user?.rol","this.userservice.userdetail","this.userservice.userdetails.classroomcod","this.userservice?.user?.first_nam","this.userservice?.user?.last_nam","this.userservice?.user?.rol","this.valid_cod","this.view_stud","this.window","this.window.getselect","this.window.getselection().addrange(rang","this.window.getselection().removeallrang","this.zone.run","titl","token","tokenizr","total","totalscor","track","tri","true","ts","type","unabl","undefin","uneed","uniqu","unique','x","unit","unselect","unselectproblemset","updat","updatecandidateproblem","updatecandidateproblem(problem","updateclassroom","updateclassroom(classroom","updated_classroom","updated_classroom.accesscod","updatefrontendstudentandredirect","updatefrontendstudentandredirect(stud","updatefrontendteacherandredirect","updatefrontendteacherandredirect(teach","updateproblem","updateproblem(problemid","updateproblem(problemid:numb","updateproblemlist","updateproblemset","updateproblemset(problemset","updatestud","updatestudent(stud","updateus","updateuser(userobject","upload","uppermost","url","urltre","us","user","user'","user.servic","userdetail","userdetails.classroomcod","userdetails.email","userdetails.family_nam","userdetails.given_nam","userexist","userobject","userservic","valid","valid_cod","valu","var","variabl","version","via","view","view.component.css","view.component.html","view.component.t","view/stud","view_stud","viewchild","viewproblemset","viewproblemset(id","visibl","void","want","warn","web","well","white","whitespac","window","within","x","yyyi","zone","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"readme - index","body":"\n                   \nEncounter\nThis project was generated with Angular CLI version 15.1.5.\nDevelopment server\nRun ng serve or npm start for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build or npm run build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun npm test to execute the unit tests via Jest.\nCreate documentation\nRun npm run compodoc to create the documentation.\nRun npm run compodocs to create the documentation and serve it.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \nOverview\n\n    \n            Your browser does not support SVG\n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n    \n            \n                \n                    \n                        \n                        16 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\nModules\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddProblemModalComponent.html":{"url":"components/AddProblemModalComponent.html","title":"component - AddProblemModalComponent","body":"\n                   \n\n\n\n  Components\n  AddProblemModalComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/add-problem-modal/add-problem-modal.component.ts\n\n\n    \n        Description\n    \n    \n        This is a modal for the teacher to add Problems. \n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-problem-modal\n            \n\n            \n                styleUrls\n                add-problem-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                add-problem-modal.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: any, problemService: ProblemService, data: any)\n                        \n                    \n    \n                    \n                        \n                                This is the constructor for the component. It contains info for a dialog box, a problemService, and data pulled from MAT_DIALOG\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        dialog\n                                                    \n                                                    \n                                                        \n    the dialog box\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        problemService\n                                                    \n                                                    \n                                                        \n    the problemService for retrieving Problems\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        data\n                                                    \n                                                    \n                                                        \n    the data being returned from MAT_DIALOG_DATA\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             createProblemMap\n                        \n                    \n    \n                    \n                        \n    createProblemMap()\n                        \n                    \n    \n                    \n                        \n                                Creates a hash map for Problems.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getProblemCandidates\n                        \n                    \n    \n                    \n                        \n    getProblemCandidates(allProblems: Problem[])\n                        \n                    \n    \n                    \n                        \n                                This method takes a list of Problems and if it doesn't have a hash associated with it, adds it to the list.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        allProblems\n                                                    \n                                                    \n                                                        \n    the list of problems to be checked.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateCandidateProblem\n                        \n                    \n    \n                    \n                        \n    updateCandidateProblem(problem: Problem, event: Event)\n                        \n                    \n    \n                    \n                        \n                                This method updates a candidate problem. If its id has been passed, delete it. Otherwise, add it to the map.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problem\n                                                    \n                                                    \n                                                        \n    the problem being checked\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the event to be stopped so other objects aren't changed.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getProblemHash\n                        \n                    \n    \n                    \n                        \n    getProblemHash(problem: Problem)\n                        \n                    \n    \n                    \n                        \n                                This method returns the data from a given problem in the map.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problem\n                                                    \n                                                    \n                                                        \n    the problem data being retrieved\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        a string of the problem's content\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             add\n                        \n                    \n    \n                    \n                        \n    add()\n                        \n                    \n    \n                    \n                        \n                                Creates a dialog that shows the problem has been added\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                Closes the dialog box.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             allProblems\n                        \n                    \n                    \n                        \n                            allProblems:     Problem[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentProblemMap\n                        \n                    \n                    \n                        \n                            currentProblemMap:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentProblems\n                        \n                    \n                    \n                        \n                            currentProblems:     Problem[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             data\n                        \n                    \n                    \n                        \n                            data:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dialog\n                        \n                    \n                    \n                        \n                            dialog:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             problemCandidates\n                        \n                    \n                    \n                        \n                            problemCandidates:     Problem[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             problemsToAdd\n                        \n                    \n                    \n                        \n                            problemsToAdd:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Problem } from '../problem';\r\nimport { ProblemService } from '../problem-service/problem.service';\r\nimport CryptoJS from 'crypto-js';\r\n\r\n/**\r\n * This is a modal for the teacher to add Problems. \r\n */\r\n@Component({\r\n  selector: 'app-add-problem-modal',\r\n  templateUrl: './add-problem-modal.component.html',\r\n  styleUrls: ['./add-problem-modal.component.css']\r\n})\r\n\r\n/**\r\n * The main problem modal component.\r\n */\r\nexport class AddProblemModalComponent implements OnInit {\r\n  currentProblems: Problem[] = [];\r\n  currentProblemMap: Map = new Map();\r\n  allProblems: Problem[] = [];\r\n  problemCandidates: Problem[] = [];\r\n  problemsToAdd: Map = new Map();\r\n\r\n  /**\r\n   * This is the constructor for the component. It contains info for a dialog box, a problemService, and data pulled from MAT_DIALOG\r\n   * @param dialog - the dialog box\r\n   * @param problemService - the problemService for retrieving Problems\r\n   * @param data - the data being returned from MAT_DIALOG_DATA\r\n   */\r\n  constructor(public dialog: MatDialogRef, private problemService: ProblemService, @Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n  /**\r\n   * This is the onInit method for this component. It grabs the data for the currentProblems list, creates a ProblemMap,\r\n   * and grabs data for receivedProblems.\r\n   */\r\n  ngOnInit() {\r\n    this.currentProblems = this.data.currentProblems;\r\n    this.createProblemMap();\r\n    this.problemService.getAllProblems().subscribe(recievedProblems => {\r\n      this.allProblems = recievedProblems;\r\n      this.getProblemCandidates(this.allProblems);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates a hash map for Problems.\r\n   */\r\n  createProblemMap(){\r\n    this.currentProblems.forEach( (problem: Problem) => {\r\n      const problemContentHash = this.getProblemHash(problem);  \r\n      this.currentProblemMap.set(problemContentHash, problem);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * This method takes a list of Problems and if it doesn't have a hash associated with it, adds it to the list.\r\n   * @param allProblems - the list of problems to be checked.\r\n   */\r\n  getProblemCandidates(allProblems: Problem[]){\r\n    this.problemCandidates = [];\r\n    allProblems.forEach((problem: Problem) => {\r\n      const problemContentHash = this.getProblemHash(problem);\r\n      if (!this.currentProblemMap.has(problemContentHash)){\r\n        this.problemCandidates.push(problem);\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * This method updates a candidate problem. If its id has been passed, delete it. Otherwise, add it to the map.\r\n   * @param problem - the problem being checked\r\n   * @param event - the event to be stopped so other objects aren't changed.\r\n   */\r\n  updateCandidateProblem(problem: Problem, event: Event){\r\n    event.stopPropagation();\r\n    if(problem.id){\r\n      if (this.problemsToAdd.has(problem.id)){\r\n        this.problemsToAdd.delete(problem.id);\r\n      }\r\n      else {\r\n        this.problemsToAdd.set(problem.id, problem)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method returns the data from a given problem in the map.\r\n   * @param problem - the problem data being retrieved\r\n   * @returns a string of the problem's content\r\n   */\r\n  getProblemHash(problem: Problem){\r\n    let problemContent = {\r\n      sourceCode: problem.sourceCode,\r\n      complexity: problem.complexity,\r\n      hints: problem.hints,\r\n      overallComplexity: problem.overallComplexity,\r\n      totalScore: problem.totalScore\r\n    }\r\n    return CryptoJS.SHA256(JSON.stringify(problemContent)).toString();\r\n  }\r\n\r\n  /**\r\n   * Creates a dialog that shows the problem has been added\r\n   */\r\n  add(){\r\n    this.dialog.close(this.problemsToAdd)\r\n  }\r\n\r\n  /**\r\n   * Closes the dialog box.\r\n   */\r\n  close(){\r\n    this.dialog.close()\r\n  }\r\n\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n  Components\n  AppComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n    \n        Properties\n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: encounter\n                            \n                        \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'encounter';\n}\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassroomCreationComponent.html":{"url":"components/ClassroomCreationComponent.html","title":"component - ClassroomCreationComponent","body":"\n                   \n\n\n\n  Components\n  ClassroomCreationComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/classroom-creation/classroom-creation.component.ts\n\n\n    \n        Description\n    \n    \n        This is the compnent for teacher Classroom creation.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classroom-creation\n            \n\n            \n                styleUrls\n                classroom-creation.component.css\n            \n\n\n\n            \n                templateUrl\n                classroom-creation.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(userService: UserService, classroomService: ClassroomService, studentService: StudentService, router: Router, route: ActivatedRoute, _snackBar: MatSnackBar)\n                        \n                    \n    \n                    \n                        \n                                This is the constructor for the component. \n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userService\n                                                    \n                                                    \n                                                        \n    userService object to be used for retrieving teacher data\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        classroomService\n                                                    \n                                                    \n                                                        \n    used to fetch classrooms\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        studentService\n                                                    \n                                                    \n                                                        \n    used to fetch students\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    used to route to the proper classroom\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        route\n                                                    \n                                                    \n                                                        \n    the route being used\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    used for message dispatching\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             setTitleInput\n                        \n                    \n    \n                    \n                        \n    setTitleInput(event: any)\n                        \n                    \n    \n                    \n                        \n                                Sets the input for an event\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the event to grab text from\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             formComplete\n                        \n                    \n    \n                    \n                        \n    formComplete()\n                        \n                    \n    \n                    \n                        \n                                A boolean method: if this form has input, it is complete\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        If the form is complete\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             checkUniqueClassroomName\n                        \n                    \n    \n                    \n                        \n    checkUniqueClassroomName()\n                        \n                    \n    \n                    \n                        \n                                This method checks if a classroom name is unique.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        true if the classroom name is unique, false if not\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             submitClassroom\n                        \n                    \n    \n                    \n                        \n    submitClassroom()\n                        \n                    \n    \n                    \n                        \n                                This method creates the classroom if the form has been completed and the classroom name is unique.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onChildRemove\n                        \n                    \n    \n                    \n                        \n    onChildRemove(index: number)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             access_code\n                        \n                    \n                    \n                        \n                            access_code:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dialog\n                        \n                    \n                    \n                        \n                            dialog:     MatDialog\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             enrolled_students\n                        \n                    \n                    \n                        \n                            enrolled_students:     any\n    \n                        \n                    \n                        \n                            \n                                Default value: undefined\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             generateAccessCode\n                        \n                    \n                    \n                        \n                            generateAccessCode:     (length?: number) => string\n    \n                        \n                    \n                    \n                        \n                            Generates a random 8 digit code for classroom enrollment. Not secure.\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             id\n                        \n                    \n                    \n                        \n                            id:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 1\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             length\n                        \n                    \n                    \n                        \n                            length:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             name\n                        \n                    \n                    \n                        \n                            name:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             refreshClassrooms$\n                        \n                    \n                    \n                        \n                            refreshClassrooms$:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             showChild\n                        \n                    \n                    \n                        \n                            showChild:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             student_list\n                        \n                    \n                    \n                        \n                            student_list:     Student[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             teacher\n                        \n                    \n                    \n                        \n                            teacher:     Teacher\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             teacherClassrooms\n                        \n                    \n                    \n                        \n                            teacherClassrooms:     Classroom[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             teacherEmail\n                        \n                    \n                    \n                        \n                            teacherEmail:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             view_student\n                        \n                    \n                    \n                        \n                            view_student:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n    \n\n        \n            import {Component, Injectable} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {Classroom} from \"../classroom\";\r\nimport {Teacher} from \"../teacher\";\r\nimport {ClassroomService} from \"../classroom-service/classroom.service\";\r\nimport {UserService} from \"../user.service\";\r\nimport {Student} from \"../student\";\r\nimport {BehaviorSubject, Observable, switchMap, tap} from \"rxjs\";\r\nimport {StudentService} from \"../student-service/student.service\";\r\nimport {MatDialog} from \"@angular/material/dialog\";\r\n\r\n/**\r\n * This is the compnent for teacher Classroom creation.\r\n */\r\n@Component({\r\n  selector: 'app-classroom-creation',\r\n  templateUrl: './classroom-creation.component.html',\r\n  styleUrls: ['./classroom-creation.component.css']\r\n})\r\n\r\n/**\r\n * The main class for classroom creation.\r\n */\r\nexport class ClassroomCreationComponent {\r\n  refreshClassrooms$ = new BehaviorSubject(true)\r\n  id?: number = 1\r\n  name: string = ''\r\n  length: number\r\n  access_code: string = ''\r\n  teacher: Teacher\r\n  teacherEmail: string\r\n  teacherClassrooms?: Classroom[]\r\n  enrolled_students: any = undefined\r\n  student_list?: Student[]\r\n  view_student: boolean = false;\r\n  dialog: MatDialog\r\n  showChild: any\r\n\r\n\r\n  /**\r\n   * This is the constructor for the component. \r\n   * @param userService - userService object to be used for retrieving teacher data\r\n   * @param classroomService - used to fetch classrooms\r\n   * @param studentService - used to fetch students\r\n   * @param router - used to route to the proper classroom\r\n   * @param route - the route being used\r\n   * @param _snackBar - used for message dispatching\r\n   */\r\n  constructor(private userService: UserService, private classroomService: ClassroomService,\r\n              private studentService: StudentService, private router: Router,\r\n              private route:ActivatedRoute, private _snackBar: MatSnackBar) {\r\n  }\r\n\r\n  /**\r\n   * The method being called when the component is initialized. Retrieves the list of students, the teacher for the classroom,\r\n   * and each classroom associated with the teacher.\r\n   */\r\n  ngOnInit(): void {\r\n\r\n    this.studentService.getStudents()\r\n      .subscribe(students => {\r\n        this.student_list = students;\r\n      });\r\n    this.userService.getTeacherByEmail(this.userService.user.teacherEmail).subscribe({next:teacher =>\r\n      this.teacher = teacher})\r\n    this.teacher = {\r\n      first_name: this.userService.user.first_name,\r\n      last_name: this.userService.user.last_name,\r\n      teacherEmail: this.userService.user.teacherEmail,\r\n    }\r\n    this.teacherEmail = this.userService.user.teacherEmail\r\n\r\n    this.classroomService.getClassroomsByTeacherEmail(this.teacherEmail).subscribe({\r\n      next: data=>{\r\n      this.teacherClassrooms = data\r\n      this.showChild = Array(this.teacherClassrooms?.length).fill(true)\r\n      },\r\n      error: () => {\r\n        this._snackBar.open('Cannot Fetch Classrooms', 'X', {duration: 2000});\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Generates a random 8 digit code for classroom enrollment. Not secure.\r\n   * @param length - the length of the code, shortened to 8 later on\r\n   * @returns a random 8 digit access code.\r\n   */\r\n  generateAccessCode = function (length = 10) {\r\n    return Math.random().toString(36).substring(2, length).toUpperCase();\r\n  }\r\n\r\n  /**\r\n   * Sets the input for an event\r\n   * @param event - the event to grab text from\r\n   */\r\n  setTitleInput(event: any){\r\n    this.name = event.target.innerText;\r\n    this.length = this.name.length;\r\n  }\r\n  /**\r\n   * A boolean method: if this form has input, it is complete\r\n   * @returns If the form is complete\r\n   */\r\n  formComplete() {\r\n    if (this.length > 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * This method checks if a classroom name is unique.\r\n   * @returns true if the classroom name is unique, false if not\r\n   */\r\n  checkUniqueClassroomName(){\r\n    // @ts-ignore\r\n    var classroom_names = this.teacherClassrooms.map(t=>t.name)\r\n    for (let name of classroom_names){\r\n      if (this.name == name){\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  // getAllStudents(): void {\r\n  //   this.view_student = true;\r\n  // }\r\n\r\n  // addStudentTest(): void {\r\n    // @ts-ignore\r\n    // @ts-ignore\r\n // this.classroomService.addStudentToClassroom(\r\n //    @ts-ignore\r\n      // this.teacherClassrooms[0].access_code, this.teacherClassrooms[0], 1\r\n    // ).subscribe()\r\n  // }\r\n\r\n  /**\r\n   * This method creates the classroom if the form has been completed and the classroom name is unique.\r\n   */\r\n  submitClassroom() {\r\n    if (!this.formComplete()) {\r\n      this._snackBar.open('Form Incomplete','X', {duration: 2000})\r\n    }\r\n    else if(!this.checkUniqueClassroomName()){\r\n      this._snackBar.open('Classroom name not unique','X', {duration: 2000})\r\n    }\r\n    else {\r\n      const newClassroom: Classroom = {\r\n        name: this.name,\r\n        accessCode: this.generateAccessCode(),\r\n        teacher: this.teacher,\r\n        enrolled_students: [],\r\n\r\n      }\r\n      this.classroomService.addClassroom(newClassroom).subscribe(\r\nclassroom => this.teacherClassrooms?.push(classroom),\r\n        this.showChild.push(true)\r\n      );\r\n    }\r\n\r\n  }\r\n  onChildRemove(index: number) {\r\n    this.showChild[index] = false;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClassroomDetailComponent.html":{"url":"components/ClassroomDetailComponent.html","title":"component - ClassroomDetailComponent","body":"\n                   \n\n\n\n  Components\n  ClassroomDetailComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/classroom-detail/classroom-detail.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-classroom-detail\n            \n\n            \n                styleUrls\n                classroom-detail.component.css\n            \n\n\n\n            \n                templateUrl\n                classroom-detail.component.html\n            \n\n\n        \n    \n\n\n    \n        Inputs\n            \n                \n                    \n                        \n                            access_code\n                        \n                        \n                              \n                                Type:    string\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            classroom\n                        \n                        \n                              \n                                Type:    Classroom\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            classroom_service\n                        \n                        \n                              \n                                Type:    ClassroomService\n\n                              \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            index\n                        \n                        \n                              \n                                Type:    any\n\n                              \n                        \n                    \n                \n            \n    \n\n    \n        Outputs\n            \n                \n                    \n                        \n                            removeChild\n                        \n                        \n                            $event type:    EventEmitter\n\n                        \n                    \n                \n            \n    \n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(classroomService: ClassroomService, _snackBar: MatSnackBar, router: Router, zone: NgZone, dialog: MatDialog, parent: ClassroomCreationComponent)\n                        \n                    \n    \n                    \n                        \n                                The constructor for this component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        classroomService\n                                                    \n                                                    \n                                                        \n    the service to be used for manipulating classroom objects\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    used for delivering messages to the user\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    used for routing to the correct page \n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        zone\n                                                    \n                                                    \n                                                        \n    NGZone object\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        dialog\n                                                    \n                                                    \n                                                        \n    the dialog box\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        parent\n                                                    \n                                                    \n                                                        \n    the parent class \n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             viewProblemSet\n                        \n                    \n    \n                    \n                        \n    viewProblemSet()\n                        \n                    \n    \n                    \n                        \n                                Navigates to the teacher's problemsets for a classroom\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectAccessCode\n                        \n                    \n    \n                    \n                        \n    selectAccessCode(event: MouseEvent)\n                        \n                    \n    \n                    \n                        \n                                This method selects the access code and allows the user to copy it to their clipboard.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the current MouseEvent \n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removeStudent\n                        \n                    \n    \n                    \n                        \n    removeStudent(student: Student)\n                        \n                    \n    \n                    \n                        \n                                This method provides the frontend support for removing a student from a classroom.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        student\n                                                    \n                                                    \n                                                        \n    the Student object to be removed.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             newAccessCode\n                        \n                    \n    \n                    \n                        \n    newAccessCode()\n                        \n                    \n    \n                    \n                        \n                                This method generates a new access code for the classroom.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteClassroom\n                        \n                    \n    \n                    \n                        \n    deleteClassroom(classroom: any)\n                        \n                    \n    \n                    \n                        \n                                This method provides a means for teacher users to delete classrooms associated with their account.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        classroom\n                                                    \n                                                    \n                                                        \n    the Classroom object to be deleted.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             classroom_id\n                        \n                    \n                    \n                        \n                            classroom_id:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             message\n                        \n                    \n                    \n                        \n                            message:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             student_list\n                        \n                    \n                    \n                        \n                            student_list:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             students\n                        \n                    \n                    \n                        \n                            students:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             window\n                        \n                    \n                    \n                        \n                            window:     Window\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {Component, EventEmitter, Input, NgZone, OnChanges, Output, SimpleChange, SimpleChanges, ViewChild} from '@angular/core';\r\nimport {ClassroomCreationComponent} from \"../classroom-creation/classroom-creation.component\";\r\nimport {Classroom} from \"../classroom\";\r\nimport {ClassroomService} from \"../classroom-service/classroom.service\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {Student} from \"../student\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ConfirmationModalComponent} from \"../confirmation-modal/confirmation-modal.component\";\r\nimport {MatDialog, MatDialogConfig} from \"@angular/material/dialog\";\r\n\r\n@Component({\r\n  selector: 'app-classroom-detail',\r\n  templateUrl: './classroom-detail.component.html',\r\n  styleUrls: ['./classroom-detail.component.css']\r\n})\r\n\r\n/**\r\n * This component is for handling changes to Classrooms and provides messages to the user.\r\n */\r\nexport class ClassroomDetailComponent implements OnChanges{\r\n  @Input() classroom: Classroom;\r\n  @Input() classroom_service: ClassroomService;\r\n  @Input() access_code: string;\r\n  @Input() index: any\r\n\r\n  @Output() removeChild = new EventEmitter();\r\n\r\n  message = '';\r\n  students = true;\r\n  student_list: Set\r\n  classroom_id: number\r\n  window: Window\r\n\r\n  /**\r\n   * The constructor for this component.\r\n   * @param classroomService - the service to be used for manipulating classroom objects\r\n   * @param _snackBar - used for delivering messages to the user\r\n   * @param router - used for routing to the correct page \r\n   * @param zone - NGZone object\r\n   * @param dialog - the dialog box\r\n   * @param parent - the parent class \r\n   */\r\n  constructor(private classroomService:ClassroomService, private _snackBar: MatSnackBar, private router: Router,\r\n              private zone: NgZone, private dialog: MatDialog, private parent: ClassroomCreationComponent ) {\r\n  }\r\n\r\n  /**\r\n   * When changes are made to the classroom, notify the user if there are or aren't students in the classroom still.\r\n   * @param changes - required for ngOnChanges method\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    console.log(changes);\r\n    console.log(this.classroom)\r\n    this.student_list = new Set(this.classroom.enrolled_students)\r\n    if (this.student_list.size === 0){\r\n      this.students = false;\r\n      this.message = 'No Students Currently Enrolled'\r\n    } else {\r\n      this.message = 'Student List'\r\n    }\r\n    this.classroom_id = this.classroom.id !== undefined ? this.classroom.id: 404;\r\n    this.window = window || {}\r\n    this.window.getSelection = this.window.getSelection || (() => null)\r\n  }\r\n\r\n  /**\r\n   * Navigates to the teacher's problemsets for a classroom\r\n   */\r\n  viewProblemSet(): void {\r\n    this.router.navigate(['teacher-problemset-classroom/' + this.classroom?.id] )\r\n  }\r\n\r\n  /**\r\n   * This method selects the access code and allows the user to copy it to their clipboard.\r\n   * @param event - the current MouseEvent \r\n   */\r\n  selectAccessCode(event: MouseEvent){\r\n    const span = event.target as HTMLSpanElement;\r\n    const range = document.createRange();\r\n    range.selectNodeContents(span);\r\n    // @ts-ignore\r\n    this.window.getSelection().removeAllRanges();\r\n    // @ts-ignore\r\n    this.window.getSelection().addRange(range);\r\n\r\n    try {\r\n      const successful = document.execCommand('copy');\r\n      const message = successful ? 'Copied to clipboard' : 'Unable to copy';\r\n      this._snackBar.open('Copied to Clipboard','X', {duration: 2000})\r\n    } catch (error) {\r\n      console.log('Error copying to clipboard: ', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method provides the frontend support for removing a student from a classroom.\r\n   * @param student - the Student object to be removed.\r\n   */\r\n  removeStudent(student: Student): void {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = false;\r\n    dialogConfig.data = {\r\n      title: \"Remove Student\",\r\n      message: `Remove ${student.first_name} ${student.last_name}? They can still rejoin using the access code.`,\r\n      acceptText: \"Remove\"\r\n    }\r\n    this.zone.run(() => {\r\n      const dialogRef = this.dialog.open(ConfirmationModalComponent, dialogConfig);\r\n      dialogRef.afterClosed().subscribe(\r\n        data => {\r\n          if(data) {\r\n            console.log(this.classroom_id)\r\n            if (student.id != null) {\r\n              this.classroomService.removeStudent(this.classroom, student.id)\r\n              this.student_list.delete(student);\r\n            }\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method generates a new access code for the classroom.\r\n   */\r\n  newAccessCode(){\r\n    this.classroom_service.getClassroomById(this.classroom_id).subscribe(\r\n      classroom => {\r\n        let updated_classroom = classroom\r\n        const new_code = this.parent.generateAccessCode()\r\n        updated_classroom.accessCode = new_code\r\n        this.classroom_service.updateClassroom(updated_classroom)\r\n      }\r\n    )\r\n  }\r\n\r\n  /**\r\n   * This method provides a means for teacher users to delete classrooms associated with their account.\r\n   * @param classroom - the Classroom object to be deleted.\r\n   */\r\n  deleteClassroom(classroom: any) {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = false;\r\n    dialogConfig.data = {\r\n      title: \"Delete \" + this.classroom.name,\r\n      message: \"WARNING: This is irreversible. Consider removing all students and regenerating access code to preserve your problem sets.\",\r\n      acceptText: \"Delete\"\r\n    }\r\n    this.zone.run(() => {\r\n      const dialogRef = this.dialog.open(ConfirmationModalComponent, dialogConfig);\r\n      dialogRef.afterClosed().subscribe(\r\n        data => {\r\n          if(data) {\r\n            console.log(this.classroom_id)\r\n            this.classroomService.deleteClassroom(this.classroom_id)\r\n            this.removeChild.emit(this.index);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationModalComponent.html":{"url":"components/ConfirmationModalComponent.html","title":"component - ConfirmationModalComponent","body":"\n                   \n\n\n\n  Components\n  ConfirmationModalComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/confirmation-modal/confirmation-modal.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirmation-modal\n            \n\n            \n                styleUrls\n                confirmation-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                confirmation-modal.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: any, data: any)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             accept\n                        \n                    \n    \n                    \n                        \n    accept()\n                        \n                    \n    \n                    \n                        \n                                This method accepts the consequences and closes the dialog.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             cancel\n                        \n                    \n    \n                    \n                        \n    cancel()\n                        \n                    \n    \n                    \n                        \n                                This method denies the consequences and closes the dialog.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             acceptText\n                        \n                    \n                    \n                        \n                            acceptText:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: Accept\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             cancelText\n                        \n                    \n                    \n                        \n                            cancelText:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: Cancel\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             data\n                        \n                    \n                    \n                        \n                            data:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             dialog\n                        \n                    \n                    \n                        \n                            dialog:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             message\n                        \n                    \n                    \n                        \n                            message:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: Are you sure?\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             title\n                        \n                    \n                    \n                        \n                            title:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: Confirmation\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-modal',\r\n  templateUrl: './confirmation-modal.component.html',\r\n  styleUrls: ['./confirmation-modal.component.css']\r\n})\r\n\r\n/**\r\n * This component provides a confirmation modal when the user is potentially harming their own data.\r\n */\r\nexport class ConfirmationModalComponent implements OnInit {\r\n  constructor(public dialog: MatDialogRef, @Inject(MAT_DIALOG_DATA) public data: any) {}\r\n  title: string = \"Confirmation\";\r\n  message: string = \"Are you sure?\";\r\n  acceptText: string = \"Accept\";\r\n  cancelText: string = \"Cancel\";\r\n\r\n  /**\r\n   * When the component is initialized, the title, message, accept text, and cancel text are set.\r\n   */\r\n  ngOnInit() {\r\n    if(this.data.title){\r\n      this.title = this.data.title;\r\n    }\r\n    if(this.data.message){\r\n      this.message = this.data.message;\r\n    }\r\n    if(this.data.acceptText){\r\n      this.acceptText = this.data.acceptText;\r\n    }\r\n    if(this.data.cancelText){\r\n      this.cancelText = this.data.cancelText;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method accepts the consequences and closes the dialog.\r\n   */\r\n accept() {\r\n  this.dialog.close(true);\r\n } \r\n\r\n /**\r\n  * This method denies the consequences and closes the dialog.\r\n  */\r\n  cancel() {\r\n    this.dialog.close(false);\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomepageComponent.html":{"url":"components/HomepageComponent.html","title":"component - HomepageComponent","body":"\n                   \n\n\n\n  Components\n  HomepageComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/homepage/homepage.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-homepage\n            \n\n            \n                styleUrls\n                homepage.component.css\n            \n\n\n\n            \n                templateUrl\n                homepage.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(authService: AuthService, userService: UserService, router: Router, _snackBar: MatSnackBar)\n                        \n                    \n    \n                    \n                        \n                                The constructor for this component, contains data for the authservice, userservice, router, and snackbar.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        authService\n                                                    \n                                                    \n                                                        \n    used for authenticating a user session\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        userService\n                                                    \n                                                    \n                                                        \n    used to determine a user's role and route them to the correct side of the app.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    used to route the correct page\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    used to provide messages to the user\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             createAccountRedirect\n                        \n                    \n    \n                    \n                        \n    createAccountRedirect()\n                        \n                    \n    \n                    \n                        \n                                When the user creates their account, this method routes the user to the proper side based on their role.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             checkingIsStudent\n                        \n                    \n                    \n                        \n                            checkingIsStudent:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             checkingIsTeacher\n                        \n                    \n                    \n                        \n                            checkingIsTeacher:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             classroomCode\n                        \n                    \n                    \n                        \n                            classroomCode:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             loggedIn\n                        \n                    \n                    \n                        \n                            loggedIn:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             role\n                        \n                    \n                    \n                        \n                            role:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: student\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { UserService } from '../user.service';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-homepage',\r\n  templateUrl: './homepage.component.html',\r\n  styleUrls: ['./homepage.component.css']\r\n})\r\n\r\n/**\r\n * This component provides a homepage for the user.\r\n */\r\nexport class HomepageComponent implements OnInit {\r\n\r\n  /**\r\n   * The constructor for this component, contains data for the authservice, userservice, router, and snackbar.\r\n   * @param authService - used for authenticating a user session\r\n   * @param userService  - used to determine a user's role and route them to the correct side of the app.\r\n   * @param router - used to route the correct page\r\n   * @param _snackBar - used to provide messages to the user\r\n   */\r\n  constructor(private authService: AuthService, protected userService: UserService, private router: Router, private _snackBar: MatSnackBar){}\r\n  checkingIsTeacher: boolean = true;\r\n  checkingIsStudent: boolean = true;\r\n  loggedIn: boolean = false;\r\n  role: string = \"student\";\r\n  classroomCode: string;\r\n\r\n  /**\r\n   * This code is ran when the component is initialized\r\n   */\r\n  ngOnInit(): void {\r\n    if(this.authService.getUserDetails()){\r\n      this.loggedIn = true;\r\n      if(this.userService.user){\r\n        this.userService.user.role == 'teacher' ? this.router.navigate(['classroom-creation']) : this.router.navigate(['student-classroom-view']);\r\n      }\r\n      const userDetails: any = this.authService.getUserDetails();\r\n      this.userService.userDetails = userDetails;\r\n      this.userService.getStudentByEmail(userDetails.email).subscribe({\r\n        next: student => {\r\n          if(student){\r\n            this.userService.updateUser(student, 'student');\r\n            this.router.navigate(['student-classroom-view']);\r\n          }\r\n        }\r\n      });\r\n      this.userService.getTeacherByEmail(userDetails.email).subscribe({\r\n        next: teacher => {\r\n          if(teacher){\r\n            this.userService.updateUser(teacher, 'teacher');\r\n            this.router.navigate(['classroom-creation']);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When the user creates their account, this method routes the user to the proper side based on their role.\r\n   */\r\n  createAccountRedirect(){\r\n    // if (this.role == 'teacher' || this.role == 'student' && this.classroomCode){\r\n    //   this.userService.userDetails.classroomCode = this.classroomCode;\r\n    //   this.router.navigate(['login/' + this.role])\r\n    // }\r\n    // else {\r\n    //   this._snackBar.open('Enter a classroom code','X', {duration: 2000})\r\n    // }\r\n    if (this.role == 'teacher' || this.role == 'student' && this.classroomCode){\r\n      this.userService.userDetails.classroomCode = this.classroomCode;\r\n      if (this.role =='student'){\r\n\r\n      }\r\n      this.router.navigate(['login/' + this.role])\r\n    }\r\n    else {\r\n      this._snackBar.open('Enter a classroom code','X', {duration: 2000})\r\n    }\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n  Components\n  LoginComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(authService: AuthService, userService: UserService, router: Router, route: ActivatedRoute)\n                        \n                    \n    \n                    \n                        \n                                The constructor for the component, contains information for the authentication service, userservice, router, and routes.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        authService\n                                                    \n                                                    \n                                                        \n    The authentication service for the session\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        userService\n                                                    \n                                                    \n                                                        \n    the userService for handling roles\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    routes the user to the correct page\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        route\n                                                    \n                                                    \n                                                        \n    the route being used\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             handleStudentLogin\n                        \n                    \n    \n                    \n                        \n    handleStudentLogin(userDetails: any)\n                        \n                    \n    \n                    \n                        \n                                This method handles the student side of logging in.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userDetails\n                                                    \n                                                    \n                                                        \n    information about the user currently in the session\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             handleTeacherLogin\n                        \n                    \n    \n                    \n                        \n    handleTeacherLogin(userDetails: any)\n                        \n                    \n    \n                    \n                        \n                                This method hanles the teacher side of logging in.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userDetails\n                                                    \n                                                    \n                                                        \n    information about the user currently in the session.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addTeacher\n                        \n                    \n    \n                    \n                        \n    addTeacher(userDetails: any)\n                        \n                    \n    \n                    \n                        \n                                Registers a teacher based on the information they enter\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userDetails\n                                                    \n                                                    \n                                                        \n    the entered information\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addStudent\n                        \n                    \n    \n                    \n                        \n    addStudent(userDetails: any)\n                        \n                    \n    \n                    \n                        \n                                Registers a student based on the information they enter\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        userDetails\n                                                    \n                                                    \n                                                        \n    the entered information\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateFrontendStudentAndRedirect\n                        \n                    \n    \n                    \n                        \n    updateFrontendStudentAndRedirect(student: Student)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateFrontendTeacherAndRedirect\n                        \n                    \n    \n                    \n                        \n    updateFrontendTeacherAndRedirect(teacher: Teacher)\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             role\n                        \n                    \n                    \n                        \n                            role:     string\n    \n                        \n                    \n                        \n                            \n                                Default value: student\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             studentExists\n                        \n                    \n                    \n                        \n                            studentExists:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             teacherExists\n                        \n                    \n                    \n                        \n                            teacherExists:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { UserService } from '../user.service';\r\nimport { Teacher } from '../teacher';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Student } from '../student';\r\nimport {Classroom} from \"../classroom\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\n/**\r\n * This component handles user login.\r\n */\r\nexport class LoginComponent implements OnInit {\r\n\r\n  /**\r\n   * The constructor for the component, contains information for the authentication service, userservice, router, and routes.\r\n   * @param authService - The authentication service for the session\r\n   * @param userService - the userService for handling roles\r\n   * @param router - routes the user to the correct page\r\n   * @param route - the route being used\r\n   */\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {}\r\n  teacherExists: boolean = false;\r\n  studentExists: boolean = false;\r\n  role: string = 'student';\r\n\r\n  /**\r\n   * This code is ran when the component is initialized. \r\n   */\r\n  ngOnInit(): void {\r\n    if(this.userService.user){\r\n      this.userService.user.role == 'teacher' ? this.router.navigate(['classroom-creation']) : this.router.navigate(['student-classroom-view']);\r\n    }\r\n    this.route.params.subscribe(params => {\r\n      this.role = params['role'];\r\n      if(this.role !== 'student' && this.role !== 'teacher'){\r\n        this.router.navigate(['']);\r\n      }\r\n    });\r\n\r\n    if(this.authService.getUserDetails()){\r\n      const userDetails: any = this.authService.getUserDetails();\r\n      if(this.role == 'teacher'){\r\n        this.handleTeacherLogin(userDetails);\r\n      }\r\n      else\r\n      {\r\n        this.handleStudentLogin(userDetails)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method handles the student side of logging in.\r\n   * @param userDetails - information about the user currently in the session\r\n   */\r\n  handleStudentLogin(userDetails: any){\r\n    userDetails.classroomCode = this.userService.userDetails.classroomCode\r\n    this.userService.getStudentByEmail(userDetails.email).subscribe({\r\n      next: student => {\r\n        if(!student){\r\n          this.addStudent(userDetails);\r\n        }\r\n        else{\r\n          this.userService.updateUser(student, 'student')\r\n          this.router.navigate(['student-classroom-view']);\r\n        }\r\n      },\r\n      error: () => {\r\n        this.addStudent(userDetails);\r\n        this.router.navigate(['student-classroom-view']);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method hanles the teacher side of logging in.\r\n   * @param userDetails - information about the user currently in the session.\r\n   */\r\n  handleTeacherLogin(userDetails: any){\r\n    this.userService.getTeacherByEmail(userDetails.email).subscribe({\r\n      next: teacher => {\r\n        if(!teacher){\r\n          this.addTeacher(userDetails);\r\n        }\r\n        else{\r\n          this.userService.updateUser(teacher, 'teacher')\r\n          this.router.navigate(['classroom-creation']);\r\n        }\r\n      },\r\n      error: () => {\r\n        this.addTeacher(userDetails);\r\n        this.router.navigate(['classroom-creation']);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  /**\r\n   * Registers a teacher based on the information they enter\r\n   * @param userDetails - the entered information\r\n   */\r\n  addTeacher(userDetails: any){\r\n    let teacher: Teacher = {\r\n      first_name: userDetails.given_name,\r\n      last_name: userDetails.family_name,\r\n      teacherEmail: userDetails.email,\r\n      // password_hash: \"placeholder\"\r\n    }\r\n    this.userService.addTeacher(teacher).subscribe({\r\n      next: () => {\r\n        this.updateFrontendTeacherAndRedirect(teacher);\r\n      },\r\n      error: () => {\r\n        this.router.navigate(['']);\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Registers a student based on the information they enter\r\n   * @param userDetails - the entered information\r\n   */\r\n  addStudent(userDetails: any){\r\n    let student: Student = {\r\n      first_name: userDetails.given_name,\r\n      last_name: userDetails.family_name,\r\n      email: userDetails.email,\r\n      enrolled_classes: new Set(),\r\n      // enrolled_classes: [],\r\n      password_hash: \"placeholder\"\r\n    }\r\n    this.userService.addStudent(student).subscribe({\r\n      next: () => {\r\n        this.updateFrontendStudentAndRedirect(student);\r\n      },\r\n      error: () => {\r\n        this.router.navigate(['']);\r\n      }\r\n    })\r\n  }\r\n\r\n  updateFrontendStudentAndRedirect(student: Student){\r\n    this.userService.getStudentByEmail(student.email).subscribe({\r\n      next: (receivedStudent: Student) => {\r\n        if(!receivedStudent){\r\n          this.authService.logout();\r\n        }\r\n        this.userService.updateUser(receivedStudent, 'student')\r\n        this.router.navigate(['student-classroom-view']);\r\n      },\r\n      error: () => {\r\n        this.authService.logout();\r\n      }\r\n    })\r\n  }\r\n\r\n  updateFrontendTeacherAndRedirect(teacher: Teacher){\r\n    this.userService.getTeacherByEmail(teacher.teacherEmail).subscribe({\r\n      next: (receivedTeacher: Teacher) => {\r\n        if(!receivedTeacher){\r\n          this.authService.logout();\r\n        }\r\n        this.userService.updateUser(receivedTeacher, 'teacher')\r\n        this.router.navigate(['classroom-creation']);\r\n      },\r\n      error: () => {\r\n        this.authService.logout();\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n  Components\n  NavbarComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                navbar.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(authService: AuthService, userService: UserService)\n                        \n                    \n    \n                    \n                        \n                                The constructor for the component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        authService\n                                                    \n                                                    \n                                                        \n    the authentication service for this session\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        userService\n                                                    \n                                                    \n                                                        \n    the userService for this user\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             logout\n                        \n                    \n    \n                    \n                        \n    logout()\n                        \n                    \n    \n                    \n                        \n                                This method logs the user out of the session.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isTeacher\n                        \n                    \n    \n                    \n                        \n    isTeacher()\n                        \n                    \n    \n                    \n                        \n                                This method returns if the user is a teacher based on their role.\n    \n                                \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        true if the user is a teacher, false if not\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             userExists\n                        \n                    \n    \n                    \n                        \n    userExists()\n                        \n                    \n    \n                    \n                        \n                                This method checks if a user exists via userService\n    \n                                \n                                \n                                \n                                    Returns:     boolean\n    \n                                \n                                    \n                                        true if the user exists, false if not.\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isStudent\n                        \n                    \n    \n                    \n                        \n    isStudent()\n                        \n                    \n    \n                    \n                        \n                                \n                                    Returns:     boolean\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             firstName\n                        \n                    \n                    \n                        \n                            firstName:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             lastName\n                        \n                    \n                    \n                        \n                            lastName:     string\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\n\r\n/**\r\n * This component handles the navbar for the app.\r\n */\r\nexport class NavbarComponent {\r\n  /**\r\n   * The constructor for the component.\r\n   * @param authService - the authentication service for this session\r\n   * @param userService - the userService for this user\r\n   */\r\n  constructor(private authService: AuthService, private userService: UserService) {}\r\n  firstName: string = '';\r\n  lastName: string = '';\r\n\r\n  /**\r\n   * This method logs the user out of the session.\r\n   */\r\n  logout() {\r\n    this.userService.user = undefined;\r\n    this.userService.userDetails = undefined;\r\n    this.authService.logout();\r\n  }\r\n\r\n  /**\r\n   * This method returns if the user is a teacher based on their role.\r\n   * @returns true if the user is a teacher, false if not\r\n   */\r\n  isTeacher(): boolean{\r\n    return this.userService.user?.role == 'teacher' ? true : false;\r\n  }\r\n  \r\n  /**\r\n   * This method checks if a user exists via userService\r\n   * @returns true if the user exists, false if not.\r\n   */\r\n  userExists(): boolean{\r\n    this.firstName = this.userService?.user?.first_name;\r\n    this.lastName = this.userService?.user?.last_name;\r\n    return this.userService.user ? true : false;\r\n  }\r\n\r\n  isStudent(): boolean{\r\n    return this.userService?.user?.role == 'student'? true : false;\r\n  }\r\n\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProblemCreationComponent.html":{"url":"components/ProblemCreationComponent.html","title":"component - ProblemCreationComponent","body":"\n                   \n\n\n\n  Components\n  ProblemCreationComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/problem-creation/problem-creation.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-problem-creation\n            \n\n            \n                styleUrls\n                problem-creation.component.css\n            \n\n\n\n            \n                templateUrl\n                problem-creation.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(problemService: ProblemService, router: Router, _snackBar: MatSnackBar, complexityParserService: ComplexityParserService, route: ActivatedRoute, dialog: MatDialog)\n                        \n                    \n    \n                    \n                        \n                                The constructor for the component\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemService\n                                                    \n                                                    \n                                                        \n    the problemService used to access problem methods \n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    used for routing to the correct page\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    used to send the user messages\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        complexityParserService\n                                                    \n                                                    \n                                                        \n    used for parsing algorithmic complexity\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        route\n                                                    \n                                                    \n                                                        \n    the route being used\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        dialog\n                                                    \n                                                    \n                                                        \n    the dialog box to deliver messages\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             getSourceCodeFromTextInput\n                        \n                    \n    \n                    \n                        \n    getSourceCodeFromTextInput()\n                        \n                    \n    \n                    \n                        \n                                Obtains a problem (in the form of code) via a text box\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             onFileSelected\n                        \n                    \n    \n                    \n                        \n    onFileSelected(event: any)\n                        \n                    \n    \n                    \n                        \n                                Allows the user to upload code via a file upload box.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the current event\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             formComplete\n                        \n                    \n    \n                    \n                        \n    formComplete()\n                        \n                    \n    \n                    \n                        \n                                This method checks if a form is complete\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        true if the orm is complete, false if not\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setCodeInput\n                        \n                    \n    \n                    \n                        \n    setCodeInput(event: any)\n                        \n                    \n    \n                    \n                        \n                                This method sets the code input to the text inside the event's textbox\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the current event\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             handleTab\n                        \n                    \n    \n                    \n                        \n    handleTab(event: any)\n                        \n                    \n    \n                    \n                        \n                                This method handles indentation in a text-uploaded problem\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the current event\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             submitProblem\n                        \n                    \n    \n                    \n                        \n    submitProblem()\n                        \n                    \n    \n                    \n                        \n                                This method submits a problem to the backend if its information is valid.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addProblemToSets\n                        \n                    \n    \n                    \n                        \n    addProblemToSets(problem: Problem, setId: number)\n                        \n                    \n    \n                    \n                        \n                                This method adds a probem to a set.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problem\n                                                    \n                                                    \n                                                        \n    the problem being added\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        setId\n                                                    \n                                                    \n                                                        \n    the set the problem is being added to\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getTotalScore\n                        \n                    \n    \n                    \n                        \n    getTotalScore()\n                        \n                    \n    \n                    \n                        \n                                This method returns the total score for a problem based on the number of lines.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        the total score for a problem.\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             parse\n                        \n                    \n    \n                    \n                        \n    parse()\n                        \n                    \n    \n                    \n                        \n                                This method parses the source code to autofill the complexity within the problem creation panel and find the total complexity.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setAllToConstant\n                        \n                    \n    \n                    \n                        \n    setAllToConstant()\n                        \n                    \n    \n                    \n                        \n                                This method sets all line to constant. Hints will mention constant complexiity.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                            Private formatComplexity\n                        \n                    \n    \n                    \n                        \n                                \n                                    \n                                \n                            formatComplexity(complexity: number)\n                        \n                    \n    \n                    \n                        \n                                Returns the string equivalent of a complexity\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        complexity\n                                                    \n                                                    \n                                                        a problem.\n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     string\n    \n                                \n                                    \n                                        The complexity.\n    \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             codeInput\n                        \n                    \n                    \n                        \n                            codeInput:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             complexity\n                        \n                    \n                    \n                        \n                            complexity:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             hints\n                        \n                    \n                    \n                        \n                            hints:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             name\n                        \n                    \n                    \n                        \n                            name:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             overallComplexity\n                        \n                    \n                    \n                        \n                            overallComplexity:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             problemId\n                        \n                    \n                    \n                        \n                            problemId:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setId\n                        \n                    \n                    \n                        \n                            setId:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             sourceCode\n                        \n                    \n                    \n                        \n                            sourceCode:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             totalScore\n                        \n                    \n                    \n                        \n                            totalScore:     Number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n    \n\n        \n            import { Component, NgZone } from '@angular/core';\r\nimport { Problem } from '../problem';\r\nimport { ProblemService } from '../problem-service/problem.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ComplexityParserService } from '../complexity-parser/complexity-parser.service';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { SelectSetModalComponent } from '../select-set-modal/select-set-modal.component';\r\n\r\n@Component({\r\n  selector: 'app-problem-creation',\r\n  templateUrl: './problem-creation.component.html',\r\n  styleUrls: ['./problem-creation.component.css']\r\n})\r\n\r\n/**\r\n * This component handles problem creation by teachers.\r\n */\r\nexport class ProblemCreationComponent {\r\n  setId: number;\r\n  sourceCode: string[] = [];\r\n  name: string = '';\r\n  complexity: string[] = [];\r\n  hints: string[] = [];\r\n  overallComplexity: string = '';\r\n  totalScore: Number = 0;\r\n  codeInput: string = '';\r\n  problemId: number;\r\n\r\n  /**\r\n   * The constructor for the component\r\n   * @param problemService - the problemService used to access problem methods \r\n   * @param router - used for routing to the correct page\r\n   * @param _snackBar - used to send the user messages\r\n   * @param complexityParserService - used for parsing algorithmic complexity\r\n   * @param route - the route being used\r\n   * @param dialog - the dialog box to deliver messages\r\n   */\r\n  constructor(private problemService: ProblemService,\r\n    private router: Router, private _snackBar: MatSnackBar,\r\n    private complexityParserService: ComplexityParserService,\r\n    private route: ActivatedRoute,\r\n    private dialog: MatDialog\r\n    ){ }\r\n\r\n  /**\r\n   * This code is ran when the component is initialized. \r\n   */\r\n  ngOnInit(){\r\n    this.route.params.subscribe(params => {\r\n      const setIdParam = params['setId'];\r\n      if(setIdParam) {this.setId = setIdParam;}\r\n      const problemIdParam = params['problemId'];\r\n      if(problemIdParam) {this.problemId = problemIdParam;}\r\n   });\r\n\r\n   if(this.problemId){\r\n    this.problemService.getProblemById(this.problemId).subscribe({\r\n      next: (problem: Problem) => {\r\n        this.name = problem.name;\r\n        this.sourceCode = problem.sourceCode;\r\n        this.complexity = problem.complexity;\r\n        this.overallComplexity = problem.overallComplexity;\r\n        this.totalScore = problem.totalScore;\r\n        this.hints = problem.hints\r\n      },\r\n      error: () => {\r\n        this.router.navigate(['/teacher-set-problems/' + this.setId])\r\n      }\r\n    })\r\n   }\r\n  }\r\n\r\n  /**\r\n   * Obtains a problem (in the form of code) via a text box\r\n   */\r\n  getSourceCodeFromTextInput(){\r\n    if(this.codeInput.length > 0){\r\n      for (let line of this.codeInput.split(/[\\r\\n]+/)){\r\n        this.sourceCode.push(line);\r\n        this.complexity.push('');\r\n        this.hints.push('');\r\n      }\r\n    }\r\n    else{\r\n      this._snackBar.open('Enter Source Code or Upload a File','X', {duration: 2000})\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Allows the user to upload code via a file upload box.\r\n   * @param event - the current event\r\n   */\r\n  onFileSelected(event: any){\r\n    const file:File = event.target.files[0];\r\n    let reader = new FileReader();\r\n    reader.onload = () =>{\r\n      let fileContent = reader.result as string;\r\n      for (const line of fileContent.split(/[\\r\\n]+/)){\r\n        this.sourceCode.push(line);\r\n        this.complexity.push('');\r\n        this.hints.push('');\r\n      }\r\n    }\r\n    reader.readAsText(file);\r\n  }\r\n\r\n\r\n  /**\r\n   * This method checks if a form is complete\r\n   * @returns true if the orm is complete, false if not\r\n   */\r\n  formComplete(){\r\n    if(this.name && this.overallComplexity && this.sourceCode.length > 0\r\n      && this.complexity.length > 0){\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * This method sets the code input to the text inside the event's textbox\r\n   * @param event - the current event\r\n   */\r\n  setCodeInput(event: any){\r\n    this.codeInput = event.target.innerText;\r\n  }\r\n\r\n  /*https://stackoverflow.com/questions/2237497/make-the-tab-key-insert-a-tab-character\r\n  -in-a-contenteditable-div-and-not-blur */\r\n  /**\r\n   * This method handles indentation in a text-uploaded problem\r\n   * @param event - the current event\r\n   */\r\n  handleTab(event: any){\r\n    this.codeInput = event.target.innerText;\r\n\r\n    event.preventDefault();\r\n\r\n    let sel          = document.getSelection(),\r\n        range        = sel?.getRangeAt(0),\r\n        tabNodeValue = '\\t',\r\n        tabNode      = document.createTextNode(tabNodeValue);\r\n      if(range){\r\n        range.insertNode(tabNode)\r\n        range.setStartAfter(tabNode)\r\n        range.setEndAfter(tabNode)\r\n      }\r\n  }\r\n\r\n  /**\r\n   * This method submits a problem to the backend if its information is valid.\r\n   */\r\n  submitProblem(){\r\n    if(!this.formComplete()){\r\n      this._snackBar.open('Form Incomplete','X', {duration: 2000})\r\n    }\r\n    else{\r\n      const createdProblem: Problem = {\r\n        setId: this.setId,\r\n        name: this.name,\r\n        sourceCode: this.sourceCode,\r\n        complexity: this.complexity,\r\n        hints: this.hints,\r\n        overallComplexity: this.overallComplexity,\r\n        totalScore: this.getTotalScore(),\r\n      }\r\n\r\n      if(this.problemId){\r\n        this.problemService.updateProblem(this.problemId, createdProblem).subscribe({\r\n          next: () => {\r\n            this._snackBar.open(`Problem ${createdProblem.name} Updated`, 'X', {duration: 2000});\r\n            this.router.navigate(['/teacher-set-problems/' + this.setId]);\r\n          },\r\n          error: () => this._snackBar.open('Unable to Update Problem','X', {duration: 2000})\r\n        });\r\n      }\r\n      else if(this.setId) {\r\n        this.problemService.addProblem(createdProblem).subscribe({\r\n          next: () => this.router.navigate(['/teacher-set-problems/' + this.setId])\r\n        });\r\n      }\r\n      else {\r\n        const dialogConfig = new MatDialogConfig();\r\n        dialogConfig.disableClose = false;\r\n        dialogConfig.autoFocus = false;\r\n        dialogConfig.width = '270px';\r\n\r\n        const dialogRef = this.dialog.open(SelectSetModalComponent, dialogConfig);\r\n        dialogRef.afterClosed().subscribe(\r\n          (setIds: Map) => {\r\n            if(setIds){\r\n              setIds.forEach((setId: number) => {\r\n                this.addProblemToSets(createdProblem, setId);\r\n                this.router.navigate(['teacher-problemset-classroom/1'])\r\n              })\r\n            }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method adds a probem to a set.\r\n   * @param problem - the problem being added\r\n   * @param setId - the set the problem is being added to\r\n   */\r\n  addProblemToSets(problem: Problem, setId: number){\r\n    let postedProblem = {...problem};\r\n    postedProblem.setId = setId;\r\n    this.problemService.addProblem(postedProblem).subscribe();\r\n  }\r\n\r\n  /**\r\n   * This method returns the total score for a problem based on the number of lines.\r\n   * @returns the total score for a problem.\r\n   */\r\n  getTotalScore(){\r\n    let totalScore: number = 1;\r\n    this.complexity.forEach(line => {\r\n      if(line){\r\n        totalScore++;\r\n      }\r\n    });\r\n    return totalScore;\r\n  }\r\n\r\n\r\n/**\r\n*   This method parses the source code to autofill the complexity within the problem creation panel and find the total complexity.\r\n**/\r\nparse() {\r\n\r\n  this.setAllToConstant();\r\n  let blockList = this.complexityParserService.parse(this.sourceCode.join(\"\\n\"))\r\n  let maxN = 0;\r\n\r\n  blockList.forEach((block) => {\r\n\r\n    this.complexity[block.begLine - 1] = this.formatComplexity(block.complexity)\r\n\r\n    // Set the hint\r\n    switch (block.complexity) {\r\n      case 1: {\r\n        this.hints[block.begLine - 1] = \"The complexity is linear\"\r\n        break;\r\n      }\r\n      case 2: {\r\n        this.hints[block.begLine - 1] = \"The complexity is quadratic\"\r\n        break;\r\n      }\r\n      case 3: {\r\n        this.hints[block.begLine - 1] = \"The complexity is cubic\"\r\n        break;\r\n      }\r\n      default: {\r\n        this.hints[block.begLine - 1] = \"The complexity is polynomial\"\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (block.complexity > maxN)\r\n      maxN = block.complexity\r\n\r\n  })\r\n\r\n  this.overallComplexity = this.formatComplexity(maxN)\r\n}\r\n\r\n/**\r\n*   This method sets all line to constant. Hints will mention constant complexiity.\r\n**/\r\nsetAllToConstant() {\r\n  for (let i = 0; i \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectSetModalComponent.html":{"url":"components/SelectSetModalComponent.html","title":"component - SelectSetModalComponent","body":"\n                   \n\n\n\n  Components\n  SelectSetModalComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/select-set-modal/select-set-modal.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-select-set-modal\n            \n\n            \n                styleUrls\n                select-set-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                select-set-modal.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(dialog: any, problemsetService: ProblemsetService, userService: UserService, classroomService: ClassroomService)\n                        \n                    \n    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             selectSet\n                        \n                    \n    \n                    \n                        \n    selectSet(set: ProblemSet)\n                        \n                    \n    \n                    \n                        \n                                This method handles set selection.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        set\n                                                    \n                                                    \n                                                        \n    the problem set being selected.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isSelected\n                        \n                    \n    \n                    \n                        \n    isSelected(set: ProblemSet)\n                        \n                    \n    \n                    \n                        \n                                This method returns a boolean if the set is selected or not.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        set\n                                                    \n                                                    \n                                                        \n    the set being looked at\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        true if the set is being selected, false if not.\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             add\n                        \n                    \n    \n                    \n                        \n    add()\n                        \n                    \n    \n                    \n                        \n                                Adds a set.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             close\n                        \n                    \n    \n                    \n                        \n    close()\n                        \n                    \n    \n                    \n                        \n                                Closes the dialog box.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             dialog\n                        \n                    \n                    \n                        \n                            dialog:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectedSets\n                        \n                    \n                    \n                        \n                            selectedSets:     any\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             sets\n                        \n                    \n                    \n                        \n                            sets:     ProblemSet[]\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { ProblemsetService } from '../problemset-service/problemset.service';\r\nimport { ProblemSet } from '../problemset';\r\nimport { UserService } from '../user.service';\r\nimport { Classroom } from '../classroom';\r\nimport { ClassroomService } from '../classroom-service/classroom.service';\r\n\r\n@Component({\r\n  selector: 'app-select-set-modal',\r\n  templateUrl: './select-set-modal.component.html',\r\n  styleUrls: ['./select-set-modal.component.css']\r\n})\r\n\r\n/**\r\n * This component handles the set selection modal.\r\n */\r\nexport class SelectSetModalComponent implements OnInit {\r\n  constructor(\r\n    public dialog: MatDialogRef, \r\n    private problemsetService: ProblemsetService, \r\n    private userService: UserService, \r\n    private classroomService: ClassroomService\r\n  ) {}\r\n\r\n  sets: ProblemSet[] = [];\r\n  selectedSets: Map = new Map();\r\n\r\n  /**\r\n   * This is the code that's ran when the component is initialized.\r\n   */\r\n  ngOnInit(): void {\r\n    this.classroomService.getClassroomsByTeacherEmail(this.userService.user.teacherEmail).subscribe({\r\n      next: (classrooms: Classroom[]) => {\r\n        classrooms.forEach((classroom: Classroom) => {\r\n          this.problemsetService.getProblemSetsByClassroomId(classroom.id as any).subscribe({\r\n            next: (sets: ProblemSet[]) => {\r\n              this.sets = this.sets.concat(sets);\r\n            }\r\n          });\r\n        });\r\n      },\r\n      error: () => {\r\n        this.sets = []\r\n      }\r\n    })\r\n\r\n\r\n   \r\n  }\r\n\r\n  /**\r\n   * This method handles set selection.\r\n   * @param set - the problem set being selected.\r\n   */\r\n  selectSet(set: ProblemSet){\r\n    if(set.id){\r\n      const setId = set.id;\r\n      this.selectedSets.has(setId) ? this.selectedSets.delete(setId) : this.selectedSets.set(setId, setId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method returns a boolean if the set is selected or not.\r\n   * @param set - the set being looked at\r\n   * @returns true if the set is being selected, false if not.\r\n   */\r\n  isSelected(set: ProblemSet){\r\n    return set.id && this.selectedSets.has(set.id) ? true : false;\r\n  }\r\n\r\n  /**\r\n   * Adds a set.\r\n   */\r\n  add(){\r\n    this.dialog.close(this.selectedSets);\r\n  }\r\n\r\n  /**\r\n   * Closes the dialog box.\r\n   */\r\n  close(){\r\n    this.dialog.close();\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentClassroomViewComponent.html":{"url":"components/StudentClassroomViewComponent.html","title":"component - StudentClassroomViewComponent","body":"\n                   \n\n\n\n  Components\n  StudentClassroomViewComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/student-classroom-view/student-classroom-view.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-student-classroom-view\n            \n\n            \n                styleUrls\n                student-classroom-view.component.css\n            \n\n\n\n            \n                templateUrl\n                student-classroom-view.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(authService: AuthService, userservice: UserService, router: Router, _snackBar: MatSnackBar, studentservice: StudentService, classroomservice: ClassroomService, route: ActivatedRoute)\n                        \n                    \n    \n                    \n                        \n                                The constructor for this component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        authService\n                                                    \n                                                    \n                                                        \n    the authentication service for the session\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        userservice\n                                                    \n                                                    \n                                                        \n    the service for manipulating User objects\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    used to route the user to the right web page\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    used to deliver messages to the user \n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        studentservice\n                                                    \n                                                    \n                                                        \n    the service for manipulating Student objects\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        classroomservice\n                                                    \n                                                    \n                                                        \n    the service for manipulating Classroom objects\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        route\n                                                    \n                                                    \n                                                        \n    the Activated Route for this component\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             viewProblemSet\n                        \n                    \n    \n                    \n                        \n    viewProblemSet(id: any)\n                        \n                    \n    \n                    \n                        \n                                This method routes the student to the problem based on the problem id passed.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        id\n                                                    \n                                                    \n                                                        \n    the id of the problem to be routed to\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             enrolledClassrooms\n                        \n                    \n                    \n                        \n                            enrolledClassrooms:     Classroom[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             message\n                        \n                    \n                    \n                        \n                            message:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             student\n                        \n                    \n                    \n                        \n                            student:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {Component, OnInit} from '@angular/core';\r\nimport {StudentService} from \"../student-service/student.service\";\r\nimport {StudentClassroomsComponent} from \"../student-classrooms/student-classrooms.component\";\r\nimport {AuthService} from \"../auth.service\";\r\nimport {UserService} from \"../user.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {ClassroomService} from \"../classroom-service/classroom.service\";\r\nimport {Classroom} from \"../classroom\";\r\nimport {Student} from \"../student\";\r\n\r\n@Component({\r\n  selector: 'app-student-classroom-view',\r\n  templateUrl: './student-classroom-view.component.html',\r\n  styleUrls: ['./student-classroom-view.component.css']\r\n})\r\n\r\n/**\r\n * This component handles the student view for Classrooms.\r\n */\r\nexport class StudentClassroomViewComponent implements OnInit{\r\n  student: any\r\n  enrolledClassrooms : Classroom[]\r\n  message: string\r\n  \r\n  /**\r\n   * The constructor for this component.\r\n   * @param authService - the authentication service for the session\r\n   * @param userservice - the service for manipulating User objects\r\n   * @param router - used to route the user to the right web page\r\n   * @param _snackBar - used to deliver messages to the user \r\n   * @param studentservice - the service for manipulating Student objects\r\n   * @param classroomservice - the service for manipulating Classroom objects\r\n   * @param route - the Activated Route for this component\r\n   */\r\n  constructor(private authService: AuthService, protected userservice: UserService,\r\n              private router: Router, private _snackBar: MatSnackBar, private studentservice: StudentService,\r\n              private classroomservice: ClassroomService, private route: ActivatedRoute) {}\r\n\r\n  /**\r\n   * This method executes when the component is initialized.\r\n   */\r\n  ngOnInit() {\r\n    this.studentservice.getStudent(this.userservice.user.id).subscribe(\r\n      student => {\r\n        this.student = student as Student\r\n      }\r\n    )\r\n\r\n      this.studentservice.getEnrollment(this.userservice.user.id).subscribe(\r\n        classrooms => {\r\n          this.enrolledClassrooms = classrooms\r\n          // console.log(classrooms)\r\n          if (this.enrolledClassrooms.length === 0){\r\n            this.message = \"You are not currently enrolled in any classrooms.\"\r\n          } else {\r\n            this.message = \"You are currently enrolled in: \"\r\n          }\r\n        }\r\n      )\r\n    // this.studentservice.getEnrollment()\r\n  }\r\n\r\n  /**\r\n   * This method routes the student to the problem based on the problem id passed.\r\n   * @param id - the id of the problem to be routed to\r\n   */\r\n  viewProblemSet(id: any): void {\r\n    this.router.navigate(['student-problem-set/' + id] )\r\n  }\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentClassroomsComponent.html":{"url":"components/StudentClassroomsComponent.html","title":"component - StudentClassroomsComponent","body":"\n                   \n\n\n\n  Components\n  StudentClassroomsComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/student-classrooms/student-classrooms.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-student-classrooms\n            \n\n            \n                styleUrls\n                student-classrooms.component.css\n            \n\n\n\n            \n                templateUrl\n                student-classrooms.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(authService: AuthService, userservice: UserService, router: Router, _snackBar: MatSnackBar, studentservice: StudentService, classroomservice: ClassroomService, route: ActivatedRoute)\n                        \n                    \n    \n                    \n                        \n                                The constructor for this component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        authService\n                                                    \n                                                    \n                                                        \n    the authentication service that handles the session.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        userservice\n                                                    \n                                                    \n                                                        \n    the service for handling User objects\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    used for routing the user to the correct page\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    used for delivering messages to the user\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        studentservice\n                                                    \n                                                    \n                                                        \n    the service for for manipulating Student objects\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        classroomservice\n                                                    \n                                                    \n                                                        \n    the service for manipulating Classroom objects\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        route\n                                                    \n                                                    \n                                                        \n    the activated route for this component\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             setCodeInput\n                        \n                    \n    \n                    \n                        \n    setCodeInput(event: any)\n                        \n                    \n    \n                    \n                        \n                                This method handles the access code input by the student.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the current event\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             enforceMaxLength\n                        \n                    \n    \n                    \n                        \n    enforceMaxLength(event: any)\n                        \n                    \n    \n                    \n                        \n                                This method enforces the max length fo an access code entered.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the current event\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             checkValidCode\n                        \n                    \n    \n                    \n                        \n    checkValidCode(event: any)\n                        \n                    \n    \n                    \n                        \n                                This method checks if the access code entered by the student is valid.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the current event\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             joinClassroom\n                        \n                    \n    \n                    \n                        \n    joinClassroom()\n                        \n                    \n    \n                    \n                        \n                                This method finds the classroom to be joined by the student and provides a success/error message.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             confirmJoinClassroom\n                        \n                    \n    \n                    \n                        \n    confirmJoinClassroom()\n                        \n                    \n    \n                    \n                        \n                                This method adds the student to the classroom and provides the user with a confirmation message.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             access_code\n                        \n                    \n                    \n                        \n                            access_code:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             classroom\n                        \n                    \n                    \n                        \n                            classroom:     Classroom\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             in_class\n                        \n                    \n                    \n                        \n                            in_class:     boolean\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             maxlength\n                        \n                    \n                    \n                        \n                            maxlength:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 8\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             student_id\n                        \n                    \n                    \n                        \n                            student_id:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             teacher\n                        \n                    \n                    \n                        \n                            teacher:     Teacher\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             valid_code\n                        \n                    \n                    \n                        \n                            valid_code:     boolean\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../auth.service\";\r\nimport {UserService} from \"../user.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {StudentService} from \"../student-service/student.service\";\r\nimport {ClassroomService} from \"../classroom-service/classroom.service\";\r\nimport {Teacher} from \"../teacher\";\r\nimport {Classroom} from \"../classroom\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-student-classrooms',\r\n  templateUrl: './student-classrooms.component.html',\r\n  styleUrls: ['./student-classrooms.component.css']\r\n})\r\n\r\n/**\r\n * This component handles the student side of Classroom management.\r\n */\r\nexport class StudentClassroomsComponent implements OnInit {\r\n  classroom: Classroom\r\n  access_code: string\r\n  maxlength = 8\r\n  teacher: Teacher\r\n  student_id: number\r\n  valid_code: boolean\r\n  in_class: boolean\r\n\r\n  /**\r\n   * The constructor for this component.\r\n   * @param authService - the authentication service that handles the session.\r\n   * @param userservice - the service for handling User objects\r\n   * @param router - used for routing the user to the correct page\r\n   * @param _snackBar - used for delivering messages to the user\r\n   * @param studentservice - the service for for manipulating Student objects\r\n   * @param classroomservice - the service for manipulating Classroom objects\r\n   * @param route - the activated route for this component\r\n   */\r\n  constructor(private authService: AuthService, protected userservice: UserService,\r\n              private router: Router, private _snackBar: MatSnackBar, private studentservice:StudentService,\r\n              private classroomservice: ClassroomService, private route:ActivatedRoute){}\r\n\r\n  /**\r\n   * This method executes when the component is initialized.\r\n   */\r\n  ngOnInit() {\r\n      if (!(this.userservice.user.role = 'student')) {\r\n        this.router.navigate([''])\r\n      }\r\n      else {\r\n        this.student_id = this.userservice.user.id\r\n      }\r\n  }\r\n\r\n  /**\r\n   * This method handles the access code input by the student.\r\n   * @param event - the current event\r\n   */\r\n  setCodeInput(event: any){\r\n    this.access_code = event.target.innerText;\r\n  }\r\n\r\n  /**\r\n   * This method enforces the max length fo an access code entered.\r\n   * @param event - the current event\r\n   */\r\n  enforceMaxLength(event: any) {\r\n    let element = event.target as HTMLElement\r\n    let text = element.textContent!.trim()\r\n    if (text.length >= 8 && event.key !=='Backspace') {\r\n      event.preventDefault()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method checks if the access code entered by the student is valid.\r\n   * @param event - the current event\r\n   */\r\n  checkValidCode(event: any) {\r\n    let element = event.target as HTMLElement\r\n    let ac = element.textContent!.trim()\r\n    let submitButton = document.getElementById('search-for-classroom-button') as HTMLElement\r\n    if (ac.length === 8) {\r\n      element.classList.add('signup-code-valid')\r\n      submitButton.classList.add(\"clickable\")\r\n      this.valid_code = true\r\n    } else {\r\n      element.classList.remove('signup-code-valid')\r\n      submitButton.classList.remove(\"clickable\")\r\n      this.valid_code = false\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method finds the classroom to be joined by the student and provides a success/error message.\r\n   */\r\n  joinClassroom() {\r\n    if (this.valid_code) {\r\n      this.classroomservice.getClassroomByAccessCode(this.access_code).subscribe({\r\n          next: classroom => {\r\n            this.classroom = classroom;\r\n            if (this.classroom == null) {\r\n              this._snackBar.open('Classroom Not Found!','X', {duration: 2000})\r\n            } else {\r\n              this.teacher = this.classroom.teacher;\r\n              this._snackBar.open('Classroom Found!','X', {duration: 2000})\r\n            }\r\n          }\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method adds the student to the classroom and provides the user with a confirmation message.\r\n   */\r\n  confirmJoinClassroom(): void {\r\n    this.classroomservice.addStudentToClassroom(this.access_code, this.classroom, this.student_id).subscribe()\r\n    this._snackBar.open('Enrolled Successfully!','X', {duration: 2000})\r\n    this.router.navigate([''])\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentProblemSetComponent.html":{"url":"components/StudentProblemSetComponent.html","title":"component - StudentProblemSetComponent","body":"\n                   \n\n\n\n  Components\n  StudentProblemSetComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/student-problem-set/student-problem-set.component.ts\n\n\n    \n        Description\n    \n    \n        This component contains the Student problemset page. It displays sets of problems visible to a given student and routes themto the appropriate problem page when accessed.\n\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-student-problem-set-component\n            \n\n            \n                styleUrls\n                student-problem-set.component.css\n            \n\n\n\n            \n                templateUrl\n                student-problem-set.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(problemsetService: ProblemsetService, problemService: ProblemService, activatedRoute: ActivatedRoute, router: Router, datePipe: DatePipe)\n                        \n                    \n    \n                    \n                        \n                                The constructor for the component. Contains data for the constructor, which generates a list for problems, a list for sets,a classroom id, and the date for use with visibility settings.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemsetService\n                                                    \n                                                    \n                                                        \n    the problemsetservice associated with this class\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        problemService\n                                                    \n                                                    \n                                                        \n    the problemService associated with this class\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        activatedRoute\n                                                    \n                                                    \n                                                        \n    the activatedRoute associated with this class\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    the router used with this class to navigate to Problems\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        datePipe\n                                                    \n                                                    \n                                                        \n    the DatePipe used to retrieve the current date, used for set visibility \n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             selectProblem\n                        \n                    \n    \n                    \n                        \n    selectProblem(problemId: number)\n                        \n                    \n    \n                    \n                        \n                                Routes to the appropriate problem page by problem id.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemId\n                                                    \n                                                    \n                                                        \n    the id of the problem to be routed to.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             classroomId\n                        \n                    \n                    \n                        \n                            classroomId:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentDate\n                        \n                    \n                    \n                        \n                            currentDate:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             problems\n                        \n                    \n                    \n                        \n                            problems:     Problem[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             sets\n                        \n                    \n                    \n                        \n                            sets:     any\n    \n                        \n                    \n                \n            \n    \n\n        \n            import {Component, OnInit} from '@angular/core';\r\nimport {MatAccordion} from '@angular/material/expansion';\r\nimport { Problem } from '../problem';\r\nimport {ProblemSet} from '../problemset'\r\nimport { ProblemService } from '../problem-service/problem.service';\r\nimport { ProblemsetService } from '../problemset-service/problemset.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { DatePipe } from '@angular/common';\r\n\r\n/**\r\n * This component contains the Student problemset page. It displays sets of problems visible to a given student and routes them\r\n * to the appropriate problem page when accessed.\r\n */\r\n@Component({\r\n  selector: 'app-student-problem-set-component',\r\n  templateUrl: './student-problem-set.component.html',\r\n  styleUrls: ['./student-problem-set.component.css'],\r\n})\r\n\r\n/**\r\n * The main component class.\r\n */\r\nexport class StudentProblemSetComponent implements OnInit {\r\n  \r\n  /**\r\n    * The constructor for the component. Contains data for the constructor, which generates a list for problems, a list for sets,\r\n    * a classroom id, and the date for use with visibility settings.\r\n    * @param problemsetService - the problemsetservice associated with this class\r\n    * @param problemService - the problemService associated with this class\r\n    * @param activatedRoute - the activatedRoute associated with this class\r\n    * @param router - the router used with this class to navigate to Problems\r\n    * @param datePipe - the DatePipe used to retrieve the current date, used for set visibility \r\n    */\r\n  constructor(private problemsetService: ProblemsetService, private problemService: ProblemService, private activatedRoute: ActivatedRoute,\r\n    private router : Router, private datePipe: DatePipe) {\r\n  }\r\n  problems: Problem[] = [];\r\n  sets: any = [];\r\n  classroomId: number;\r\n  currentDate = this.datePipe.transform(Date(), 'yyyy-MM-dd');\r\n\r\n  /**\r\n   * This method runs when the component is initialized. It retrieves the classroom id from the backend as well as all of the \r\n   * problem sets associated with a classroom. Then it retrieves all of the problems in a separate list for each given problemset\r\n   * for use in the html.\r\n   */\r\n  ngOnInit(): void {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.classroomId = params[\"classroomId\"];\r\n    });\r\n\r\n    this.problemsetService.getProblemSetsByClassroomId(this.classroomId).subscribe(sets => {\r\n      this.sets = sets;\r\n      this.sets.forEach((set:any) => {\r\n        this.problemService.getProblemBySetId(set.id).subscribe({\r\n          next : (problems: Problem[]) => {set.problems = problems},\r\n          error : () => {set.problems = []}\r\n      });\r\n    });\r\n   });\r\n  }\r\n\r\n  /**\r\n   * Routes to the appropriate problem page by problem id.\r\n   * @param problemId - the id of the problem to be routed to.\r\n   */\r\n  selectProblem(problemId: number)\r\n  {\r\n    this.router.navigate(['student-solution/'+ this.classroomId + '/' + problemId])\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentSolutionComponent.html":{"url":"components/StudentSolutionComponent.html","title":"component - StudentSolutionComponent","body":"\n                   \n\n\n\n  Components\n  StudentSolutionComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/student-solution/student-solution.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-student-solution\n            \n\n            \n                styleUrls\n                student-solution.component.css\n            \n\n\n\n            \n                templateUrl\n                student-solution.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(problemService: ProblemService, router: Router, route: ActivatedRoute, _snackBar: MatSnackBar, solutionService: SolutionService, complexityParserService: ComplexityParserService)\n                        \n                    \n    \n                    \n                        \n                                The constructor for the component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemService\n                                                    \n                                                    \n                                                        \n    the problem service for manipulating problems\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    for routing to the correct page\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        route\n                                                    \n                                                    \n                                                        \n    the route\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    for delivering messages to users\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        solutionService\n                                                    \n                                                    \n                                                        \n    the solution service for manipulating solutions\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        complexityParserService\n                                                    \n                                                    \n                                                        \n    used for problem parsing\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             submitSolution\n                        \n                    \n    \n                    \n                        \n    submitSolution()\n                        \n                    \n    \n                    \n                        \n                                This method submits a solution to the solution service and either shows the results or presents the user with an error message.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             calculateScore\n                        \n                    \n    \n                    \n                        \n    calculateScore()\n                        \n                    \n    \n                    \n                        \n                                This method calculates the score for a given problem\n    \n                                \n                                \n                                \n                                    Returns:     number\n    \n                                \n                                    \n                                        the score obtained on the problem\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             overallComplexityCorrect\n                        \n                    \n    \n                    \n                        \n    overallComplexityCorrect()\n                        \n                    \n    \n                    \n                        \n                                This method determines if the Student got the correct answer for overall complexity.\n    \n                                \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        true if the answer is correct, false if not\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             lineComplexityCorrect\n                        \n                    \n    \n                    \n                        \n    lineComplexityCorrect(index: number)\n                        \n                    \n    \n                    \n                        \n                                This method determines if a student got the complexity for an individual line correct.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        index\n                                                    \n                                                    \n                                                        \n    the index of the line being analyzed\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        true if correct, false if incorrect \n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getLineColor\n                        \n                    \n    \n                    \n                        \n    getLineColor(lineNum: number)\n                        \n                    \n    \n                    \n                        \n                                This method determines the background color for a line in a solution - useful for nesting problems, etc.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        lineNum\n                                                    \n                                                    \n                                                        \n    the line number to be analyzed\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     string\n    \n                                \n                                    \n                                        the color the line should be\n    \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             blockColors\n                        \n                    \n                    \n                        \n                            blockColors:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             blockList\n                        \n                    \n                    \n                        \n                            blockList:     Block[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             classroomId\n                        \n                    \n                    \n                        \n                            classroomId:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             complexityAnswer\n                        \n                    \n                    \n                        \n                            complexityAnswer:     string[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             isLoading\n                        \n                    \n                    \n                        \n                            isLoading:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: true\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             overallComplexity\n                        \n                    \n                    \n                        \n                            overallComplexity:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             problem\n                        \n                    \n                    \n                        \n                            problem:     Problem\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             problemId\n                        \n                    \n                    \n                        \n                            problemId:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             score\n                        \n                    \n                    \n                        \n                            score:     number\n    \n                        \n                    \n                        \n                            \n                                Default value: 0\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             showResults\n                        \n                    \n                    \n                        \n                            showResults:     boolean\n    \n                        \n                    \n                        \n                            \n                                Default value: false\n                            \n                        \n                \n            \n            \n                \n                    \n                        \n                             studentId\n                        \n                    \n                    \n                        \n                            studentId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { tap } from 'rxjs';\r\nimport { Problem } from '../problem';\r\nimport { ProblemService } from '../problem-service/problem.service';\r\nimport { Solution } from '../solution';\r\nimport { SolutionService } from '../solution-service/solution.service';\r\nimport { ComplexityParserService } from '../complexity-parser/complexity-parser.service';\r\nimport { Block } from '../complexity-parser/block';\r\n\r\n@Component({\r\n  selector: 'app-student-solution',\r\n  templateUrl: './student-solution.component.html',\r\n  styleUrls: ['./student-solution.component.css']\r\n})\r\n\r\n/**\r\n * This component handles student solutions.\r\n */\r\nexport class StudentSolutionComponent implements OnInit{\r\n\r\n  /**\r\n   * The constructor for the component.\r\n   * @param problemService - the problem service for manipulating problems\r\n   * @param router - for routing to the correct page\r\n   * @param route - the route\r\n   * @param _snackBar - for delivering messages to users\r\n   * @param solutionService - the solution service for manipulating solutions\r\n   * @param complexityParserService - used for problem parsing\r\n   */\r\n  constructor(\r\n    private problemService: ProblemService,\r\n    private router: Router, \r\n    private route: ActivatedRoute,\r\n    private _snackBar: MatSnackBar,\r\n    private solutionService: SolutionService,\r\n    private complexityParserService: ComplexityParserService\r\n  ) {}\r\n  classroomId: number;\r\n  showResults: boolean = false;\r\n  problem: Problem;\r\n  studentId: number;\r\n  problemId: number = 0;\r\n  complexityAnswer: string[];\r\n  overallComplexity: string = \"\";\r\n  score: number = 0;\r\n  blockList: Block[];\r\n  blockColors: string[] = [\"#feffb7\", \"#d0ffb7\", \"#b7fff8\", \"#b8b7ff\", \"#ffb7f5\", \"#ffb7bd\"]\r\n\r\n  isLoading = true;\r\n\r\n  /**\r\n   * This method executes when the component is initialized.\r\n   */\r\n  ngOnInit(): void {\r\n    this.problemService\r\n\r\n    this.route.params.subscribe(params => {\r\n      this.problemId = params['problemId'];\r\n      this.classroomId = params['classroomId'];\r\n      this.problemService.getProblemById(this.problemId).subscribe({\r\n        next: (problem) => {\r\n          this.problem = problem;\r\n          this.complexityAnswer = new Array(problem.complexity.length).fill('');\r\n          this.isLoading = false;\r\n          this.blockList = this.complexityParserService.parse(this.problem.sourceCode.join(\"\\n\"))\r\n        },\r\n        error: () => {\r\n          this._snackBar.open('Could not fetch problem','X', {duration: 2000});\r\n          this.router.navigate(['problem-selection']);\r\n        }\r\n      });\r\n   });\r\n\r\n  }\r\n\r\n  /**\r\n   * This method submits a solution to the solution service and either shows the results or presents the user with an error message.\r\n   */\r\n  submitSolution(){\r\n    this.score = this.calculateScore();\r\n    const studentSolution: Solution = {\r\n      studentId: 1,\r\n      problemId: this.problemId,\r\n      complexityAnswer: this.complexityAnswer,\r\n      overallComplexity: this.overallComplexity,\r\n      score: this.score,\r\n    }\r\n    this.solutionService.addSolution(studentSolution).subscribe({\r\n      next: () =>{\r\n        this.showResults = true;\r\n      },\r\n      error: () => {\r\n        this._snackBar.open('Could not submit solution','X', {duration: 2000});\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method calculates the score for a given problem\r\n   * @returns the score obtained on the problem\r\n   */\r\n  calculateScore(): number{\r\n    let score = 0;\r\n    for(let i = 0; i  b.begLine - a.begLine)\r\n\r\n    // Check if the line number is in a block\r\n    for (let i = 0; i = this.blockList[i].begLine && lineNum \n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeacherProblemComponent.html":{"url":"components/TeacherProblemComponent.html","title":"component - TeacherProblemComponent","body":"\n                   \n\n\n\n  Components\n  TeacherProblemComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/teacher-problem/teacher-problem.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teacher-problem\n            \n\n            \n                styleUrls\n                teacher-problem.component.css\n            \n\n\n\n            \n                templateUrl\n                teacher-problem.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(problemService: ProblemService, solutionService: SolutionService, problemsetService: ProblemsetService, router: Router, route: ActivatedRoute, _snackBar: MatSnackBar, dialog: MatDialog, zone: NgZone)\n                        \n                    \n    \n                    \n                        \n                                This is the constructor for the component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemService\n                                                    \n                                                    \n                                                        \n    the service for manipulating problems\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        solutionService\n                                                    \n                                                    \n                                                        \n    the service for manipulating solutions\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        problemsetService\n                                                    \n                                                    \n                                                        \n    the service for manipulating problem sets\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    used for routing to the correct page\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        route\n                                                    \n                                                    \n                                                        \n    the current route\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    used to deliver messages to the user\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        dialog\n                                                    \n                                                    \n                                                        \n    a dialog box\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        zone\n                                                    \n                                                    \n                                                        \n    an NGZone object \n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             handleDelete\n                        \n                    \n    \n                    \n                        \n    handleDelete(problemId: any)\n                        \n                    \n    \n                    \n                        \n                                This method handles the frontend for a Teacher deleting a Problem\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemId\n                                                    \n                                                    \n                                                        \n    the id of the problem to be deleted\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteProblem\n                        \n                    \n    \n                    \n                        \n    deleteProblem(problemId: number)\n                        \n                    \n    \n                    \n                        \n                                This method deletes a problem from a problem list\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemId\n                                                    \n                                                    \n                                                        \n    the id of the problem to be deleted\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             openOptionMenu\n                        \n                    \n    \n                    \n                        \n    openOptionMenu(event: Event)\n                        \n                    \n    \n                    \n                        \n                                This method opens the option menu.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        event\n                                                    \n                                                    \n                                                        \n    the current event\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateProblemList\n                        \n                    \n    \n                    \n                        \n    updateProblemList()\n                        \n                    \n    \n                    \n                        \n                                This method updates the problem list.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             generateDetailedProblemList\n                        \n                    \n    \n                    \n                        \n    generateDetailedProblemList()\n                        \n                    \n    \n                    \n                        \n                                This method generates the existing problem list but with more details.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addSolutionsInfo\n                        \n                    \n    \n                    \n                        \n    addSolutionsInfo(problemId: number, detailedProblemInfo: any)\n                        \n                    \n    \n                    \n                        \n                                This method adds solution information to a problem.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemId\n                                                    \n                                                    \n                                                        \n    the id of the problem object to add information to.\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        detailedProblemInfo\n                                                    \n                                                    \n                                                        \n    the detailed data retrieved from the method above.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     any\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             analyzeSolutions\n                        \n                    \n    \n                    \n                        \n    analyzeSolutions(solutions: Solution[], detailedProblemInfo: any)\n                        \n                    \n    \n                    \n                        \n                                This method analyzes the solutions to a problem and generates high, low, and average scores for a problem.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        solutions\n                                                    \n                                                    \n                                                        \n    the solutions being submitted\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        detailedProblemInfo\n                                                    \n                                                    \n                                                        \n    the detailed information for a problem \n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addProblemsModalOpen\n                        \n                    \n    \n                    \n                        \n    addProblemsModalOpen()\n                        \n                    \n    \n                    \n                        \n                                This method adds problems to the Problem modal.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createProblem\n                        \n                    \n    \n                    \n                        \n    createProblem()\n                        \n                    \n    \n                    \n                        \n                                This method routes a teacher to the problem creation page.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateProblem\n                        \n                    \n    \n                    \n                        \n    updateProblem(problemId: any)\n                        \n                    \n    \n                    \n                        \n                                This method navigates the teacher to the page to update a problem.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemId\n                                                    \n                                                    \n                                                        \n    the id of the problem object to be updated\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addProblems\n                        \n                    \n    \n                    \n                        \n    addProblems(problems: any)\n                        \n                    \n    \n                    \n                        \n                                This method adds the passed problems via the problem service\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problems\n                                                    \n                                                    \n                                                        \n    the map associated with a number and a Problem\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             detailedProblemList\n                        \n                    \n                    \n                        \n                            detailedProblemList:     any[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             problems\n                        \n                    \n                    \n                        \n                            problems:     Problem[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             set\n                        \n                    \n                    \n                        \n                            set:     ProblemSet\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             setId\n                        \n                    \n                    \n                        \n                            setId:     number\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component, NgZone } from '@angular/core';\r\nimport { ProblemService } from '../problem-service/problem.service';\r\nimport { Problem } from '../problem';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ConfirmationModalComponent } from '../confirmation-modal/confirmation-modal.component';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { AddProblemModalComponent } from '../add-problem-modal/add-problem-modal.component';\r\nimport { SolutionService } from '../solution-service/solution.service';\r\nimport { Solution } from '../solution';\r\nimport { ProblemSet } from '../problemset';\r\nimport { ProblemsetService } from '../problemset-service/problemset.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-teacher-problem',\r\n  templateUrl: './teacher-problem.component.html',\r\n  styleUrls: ['./teacher-problem.component.css']\r\n})\r\n\r\n/**\r\n * This is the component that handles Problem objects from the Teacher side.\r\n */\r\nexport class TeacherProblemComponent {\r\n  setId: number;\r\n  set: ProblemSet;\r\n  problems: Problem[] = [];\r\n  detailedProblemList: any[] = []\r\n\r\n  /**\r\n   * This is the constructor for the component.\r\n   * @param problemService - the service for manipulating problems\r\n   * @param solutionService - the service for manipulating solutions\r\n   * @param problemsetService - the service for manipulating problem sets\r\n   * @param router - used for routing to the correct page\r\n   * @param route - the current route\r\n   * @param _snackBar - used to deliver messages to the user\r\n   * @param dialog - a dialog box\r\n   * @param zone - an NGZone object \r\n   */\r\n  constructor(\r\n    private problemService: ProblemService,\r\n    private solutionService: SolutionService,\r\n    private problemsetService: ProblemsetService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private _snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private zone: NgZone\r\n    ) {\r\n  }\r\n\r\n  /**\r\n   * This method executes when the component is initialized.\r\n   */\r\n  ngOnInit(): void {\r\n    this.route.params.subscribe(params => {\r\n      this.setId = +params['setId'];\r\n      this.problemsetService.getProblemSetById(this.setId).subscribe((set: ProblemSet) => {\r\n        this.set = set;\r\n      })\r\n      this.updateProblemList();\r\n   });\r\n\r\n  }\r\n\r\n  /**\r\n   * This method handles the frontend for a Teacher deleting a Problem\r\n   * @param problemId - the id of the problem to be deleted\r\n   */\r\n  handleDelete(problemId: any){\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = false;\r\n    dialogConfig.data = {\r\n      title: \"Delete Confirmation\",\r\n      message: \"Are you sure you want to delete the problem?\",\r\n      acceptText: \"Delete\"\r\n    }\r\n\r\n    this.zone.run(() => {\r\n      const dialogRef = this.dialog.open(ConfirmationModalComponent, dialogConfig);\r\n      dialogRef.afterClosed().subscribe(\r\n        data => {\r\n          if(data) {\r\n            this.deleteProblem(problemId);\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method deletes a problem from a problem list\r\n   * @param problemId - the id of the problem to be deleted\r\n   */\r\n  deleteProblem(problemId: number){\r\n    this.problemService.deleteProblem(problemId).subscribe({\r\n      next: () => {\r\n        this._snackBar.open('Problem deleted','X', {duration: 2000});\r\n        this.updateProblemList();\r\n      },\r\n      error: () => {\r\n        this._snackBar.open('Could not delete','X', {duration: 2000});\r\n        this.updateProblemList();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method opens the option menu.\r\n   * @param event - the current event\r\n   */\r\n  openOptionMenu(event:Event){\r\n    event.stopPropagation();\r\n  }\r\n\r\n  /**\r\n   * This method updates the problem list.\r\n   */\r\n  updateProblemList(){\r\n    this.problemService.getProblemBySetId(this.setId).subscribe({\r\n      next: (problems) => {\r\n        this.problems = problems;\r\n        this.generateDetailedProblemList();\r\n      },\r\n      error: () => {\r\n        this._snackBar.open('Could not fetch problems','X', {duration: 2000});\r\n        this.router.navigate(['']);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method generates the existing problem list but with more details.\r\n   */\r\n  generateDetailedProblemList(){\r\n    this.detailedProblemList = [];\r\n    this.problems.forEach((problem: Problem) => {\r\n      let detailedProblemInfo: any = problem;\r\n      if (problem.id){\r\n        this.addSolutionsInfo(problem.id, detailedProblemInfo);\r\n      }\r\n      this.detailedProblemList.push(detailedProblemInfo)\r\n    })\r\n  }\r\n\r\n  /**\r\n   * This method adds solution information to a problem.\r\n   * @param problemId - the id of the problem object to add information to.\r\n   * @param detailedProblemInfo - the detailed data retrieved from the method above.\r\n   */\r\n  addSolutionsInfo(problemId: number, detailedProblemInfo: any): any{\r\n    this.solutionService.getSolutionByProblemId(problemId).subscribe({\r\n      next: (solutions) => {\r\n        this.analyzeSolutions(solutions, detailedProblemInfo);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method analyzes the solutions to a problem and generates high, low, and average scores for a problem.\r\n   * @param solutions - the solutions being submitted\r\n   * @param detailedProblemInfo - the detailed information for a problem \r\n   */\r\n  analyzeSolutions(solutions: Solution[], detailedProblemInfo: any){\r\n    let scoreSum = 0;\r\n    let highScore: any;\r\n    let lowScore: any;\r\n    solutions.length > 0 ? lowScore = solutions[0].score : undefined;\r\n    solutions.length > 0 ? highScore = solutions[0].score : undefined;\r\n\r\n    solutions.forEach((solution: Solution) => {\r\n      scoreSum += solution.score;\r\n      if(lowScore && solution.score  highScore){\r\n        highScore = solution.score\r\n      }\r\n    });\r\n\r\n    const avg = solutions.length > 0 ? scoreSum/solutions.length : 0;\r\n\r\n    detailedProblemInfo.avg = avg;\r\n    detailedProblemInfo.highScore = highScore;\r\n    detailedProblemInfo.lowScore = lowScore;\r\n    detailedProblemInfo.submissions = solutions.length;\r\n  }\r\n\r\n  /**\r\n   * This method adds problems to the Problem modal.\r\n   */\r\n  addProblemsModalOpen(){\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = false;\r\n    dialogConfig.autoFocus = false;\r\n    dialogConfig.data = {\r\n      currentProblems: this.problems\r\n    }\r\n    this.zone.run(() => {\r\n      const dialogRef = this.dialog.open(AddProblemModalComponent, dialogConfig);\r\n      dialogRef.afterClosed().subscribe(\r\n        data => {\r\n          if(data) {\r\n            this.addProblems(data)\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method routes a teacher to the problem creation page.\r\n   */\r\n  createProblem(){\r\n    this.router.navigate(['problem-creation/' + this.setId]);\r\n  }\r\n\r\n  /**\r\n   * This method navigates the teacher to the page to update a problem.\r\n   * @param problemId - the id of the problem object to be updated\r\n   */\r\n  updateProblem(problemId: any){\r\n    this.router.navigate(['problem-creation/' + this.setId + '/' + problemId]);\r\n  }\r\n\r\n  /**\r\n   * This method adds the passed problems via the problem service\r\n   * @param problems - the map associated with a number and a Problem\r\n   */\r\n  addProblems(problems: Map){\r\n    problems.forEach(problem => {\r\n      problem.id = undefined;\r\n      problem.setId = this.setId;\r\n      this.problemService.addProblem(problem).subscribe(() => {\r\n        this.updateProblemList();\r\n      });\r\n    })\r\n  }\r\n}\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TeacherProblemsetPageComponent.html":{"url":"components/TeacherProblemsetPageComponent.html","title":"component - TeacherProblemsetPageComponent","body":"\n                   \n\n\n\n  Components\n  TeacherProblemsetPageComponent\n\n\n\n    \n        \n            Infos\n        \n        \n            Source\n        \n    \n\n    \n        \n    File\n\n\n    src/app/teacher-problemset-page/teacher-problemset-page.component.ts\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-teacher-problemset-page\n            \n\n            \n                styleUrls\n                teacher-problemset-page.component.css\n            \n\n\n\n            \n                templateUrl\n                teacher-problemset-page.component.html\n            \n\n\n        \n    \n\n\n\n\n    \n        Constructor\n            \n                \n                    \n                        \n                            constructor(problemSetService: ProblemsetService, activatedRoute: ActivatedRoute, datePipe: DatePipe, _snackBar: MatSnackBar, router: Router)\n                        \n                    \n    \n                    \n                        \n                                The constructor for the component.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemSetService\n                                                    \n                                                    \n                                                        \n    the service for manipulating problem sets\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        activatedRoute\n                                                    \n                                                    \n                                                        \n    the current route\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        datePipe\n                                                    \n                                                    \n                                                        \n    the DatePipe for visibility settings\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        _snackBar\n                                                    \n                                                    \n                                                        \n    used for delivering messages to the user\n    \n    \n                                                    \n                                                \n                                                \n                                                    \n                                                        router\n                                                    \n                                                    \n                                                        \n    used for routing to the correct web page\n    \n    \n                                                    \n                                                \n                                        \n                                \n                        \n                    \n                \n            \n    \n\n    \n        Methods\n            \n                \n                    \n                        \n                             selectProblemSet\n                        \n                    \n    \n                    \n                        \n    selectProblemSet(problemset: ProblemSet)\n                        \n                    \n    \n                    \n                        \n                                This method is used when a user is clicking on a set to select it\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemset\n                                                    \n                                                    \n                                                        \n    the problemSet being selected\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        Nothing, there's just a return statement\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             unSelectProblemSet\n                        \n                    \n    \n                    \n                        \n    unSelectProblemSet()\n                        \n                    \n    \n                    \n                        \n                                This method handles unselecting a problem set. If a user clicks a selected set, it is no longer the selected set.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             createProblemSet\n                        \n                    \n    \n                    \n                        \n    createProblemSet()\n                        \n                    \n    \n                    \n                        \n                                This method handles problem set creation for teachers in the frontend.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             deleteProblemSet\n                        \n                    \n    \n                    \n                        \n    deleteProblemSet()\n                        \n                    \n    \n                    \n                        \n                                This method handles problem set deletion from the frontend.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             updateProblemSet\n                        \n                    \n    \n                    \n                        \n    updateProblemSet()\n                        \n                    \n    \n                    \n                        \n                                This method handles problem set updating from the front end. \n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             viewProblemSet\n                        \n                    \n    \n                    \n                        \n    viewProblemSet()\n                        \n                    \n    \n                    \n                        \n                                This method navigates the user to the selected problemset.\n    \n                                \n                                    Returns:     void\n    \n                                \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             addToAllProblemSetsList\n                        \n                    \n    \n                    \n                        \n    addToAllProblemSetsList(problemSet: ProblemSet)\n                        \n                    \n    \n                    \n                        \n                                This method adds the problemset to the list of all problem sets.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemSet\n                                                    \n                                                    \n                                                        \n    the problem set to be added.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             removefromAllProblemSetsList\n                        \n                    \n    \n                    \n                        \n    removefromAllProblemSetsList(problemSetToRemove: ProblemSet)\n                        \n                    \n    \n                    \n                        \n                                This method removes the passed set from the list of all problem sets.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemSetToRemove\n                                                    \n                                                    \n                                                        \n    the set to be removed.\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     void\n    \n                                \n                                    \n                                        \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getBorderColor\n                        \n                    \n    \n                    \n                        \n    getBorderColor(problemset: ProblemSet)\n                        \n                    \n    \n                    \n                        \n                                This method handles what the color of the border should be for the set. They are different when selected/unselected.\n    \n                                \n                                        Parameters :\n                                        \n                                                \n                                                    \n                                                        problemset\n                                                    \n                                                    \n                                                        \n    the problem set to check the color of\n    \n    \n                                                    \n                                                \n                                        \n                                \n                                \n                                    Returns:     String\n    \n                                \n                                    \n                                        a hex code for the corresponding color.\n    \n                                    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             getEmptyProblemSet\n                        \n                    \n    \n                    \n                        \n    getEmptyProblemSet()\n                        \n                    \n    \n                    \n                        \n                                This method returns an empty problem set.\n    \n                                \n                                \n                                \n                                    Returns:     ProblemSet\n    \n                                \n                                    \n                                        an empty problem set.\n    \n                                    \n                        \n                    \n                \n            \n    \n\n    \n        Properties\n            \n                \n                    \n                        \n                             allProblemSets\n                        \n                    \n                    \n                        \n                            allProblemSets:     ProblemSet[]\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             classroomId\n                        \n                    \n                    \n                        \n                            classroomId:     number\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             currentDate\n                        \n                    \n                    \n                        \n                            currentDate:     string\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             problemsetForm\n                        \n                    \n                    \n                        \n                            problemsetForm:     ProblemSet\n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             selectedProblemset\n                        \n                    \n                    \n                        \n                            selectedProblemset:     ProblemSet\n    \n                        \n                    \n                \n            \n    \n\n        \n            import { Component } from '@angular/core';\r\nimport { ProblemsetService } from '../problemset-service/problemset.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProblemSet } from '../problemset';\r\nimport { DatePipe } from '@angular/common';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-teacher-problemset-page',\r\n  templateUrl: './teacher-problemset-page.component.html',\r\n  styleUrls: ['./teacher-problemset-page.component.css']\r\n})\r\n\r\n/**\r\n * This component handles the Teacher-side problem set page.\r\n */\r\nexport class TeacherProblemsetPageComponent {\r\n\r\n  /**\r\n   * The constructor for the component.\r\n   * @param problemSetService - the service for manipulating problem sets\r\n   * @param activatedRoute - the current route\r\n   * @param datePipe - the DatePipe for visibility settings\r\n   * @param _snackBar - used for delivering messages to the user\r\n   * @param router - used for routing to the correct web page\r\n   */\r\n  constructor(private problemSetService: ProblemsetService, private activatedRoute: ActivatedRoute, \r\n    private datePipe: DatePipe, private _snackBar: MatSnackBar, private router: Router) {}\r\n\r\n  allProblemSets: ProblemSet[] = [];\r\n  classroomId: number;\r\n  selectedProblemset: ProblemSet | null = null;      // The problemSet that is currently selected\r\n  problemsetForm: ProblemSet;                        // The problemSet in the form\r\n  currentDate = this.datePipe.transform(Date(), 'yyyy-MM-dd');\r\n  \r\n  /**\r\n   * This method executes when the component is initialized.\r\n   */\r\n  ngOnInit(){\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.classroomId = params[\"id\"]\r\n    });\r\n\r\n    this.problemSetService.getProblemSetsByClassroomId(this.classroomId).subscribe(data => {\r\n      this.allProblemSets = data;\r\n    });\r\n\r\n    this.problemsetForm = this.getEmptyProblemSet();\r\n  }  \r\n\r\n  /**\r\n   * This method is used when a user is clicking on a set to select it\r\n   * @param problemset - the problemSet being selected\r\n   * @returns Nothing, there's just a return statement\r\n   */\r\n  selectProblemSet(problemset: ProblemSet) {\r\n\r\n    // Check if the same problemset is being selected, if so, unselect it.\r\n    if (problemset === this.selectedProblemset) {\r\n      this.unSelectProblemSet();\r\n      return;\r\n    }\r\n\r\n    this.selectedProblemset = problemset;\r\n    this.problemsetForm = this.selectedProblemset;\r\n  }\r\n\r\n  /**\r\n   * This method handles unselecting a problem set. If a user clicks a selected set, it is no longer the selected set.\r\n   */\r\n  unSelectProblemSet() {\r\n    this.selectedProblemset = null;\r\n    this.problemsetForm = this.getEmptyProblemSet();\r\n  }\r\n\r\n  /**\r\n   * This method handles problem set creation for teachers in the frontend.\r\n   */\r\n  createProblemSet() {\r\n    // If name is empty and blank, reject the request. We only need to check for name\r\n    // as everything else in the form is already filled out\r\n    if (this.problemsetForm.name.length > 0 && this.problemsetForm.name !== \"\") {\r\n      this.problemSetService.addProblemSet(this.problemsetForm).subscribe(data => {\r\n        this.addToAllProblemSetsList(data);\r\n      });\r\n      \r\n      this.problemsetForm = this.getEmptyProblemSet();\r\n    }\r\n\r\n    else {\r\n      this._snackBar.open('Set cannot have empty name.','X', {duration: 2000})\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method handles problem set deletion from the frontend.\r\n   */\r\n  deleteProblemSet() {\r\n    if (this.selectedProblemset && this.selectedProblemset.id !== undefined) {\r\n      this.removefromAllProblemSetsList(this.selectedProblemset);\r\n      this.problemSetService.deleteProblemSet(this.selectedProblemset.id).subscribe();\r\n\r\n      // Set the selectProblemset and problemsetForm to none\r\n      this.selectedProblemset = null;\r\n      this.problemsetForm = this.getEmptyProblemSet();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * This method handles problem set updating from the front end. \r\n   */\r\n  updateProblemSet() {\r\n    // If name is empty and blank, reject the request. We only need to check for name\r\n    // as everything else in the form is already filled out\r\n    if (this.problemsetForm.name.length > 0 && this.problemsetForm.name !== \"\") {\r\n      if (this.selectedProblemset && this.selectedProblemset.id !== undefined) {\r\n        this.problemSetService.updateProblemSet(this.problemsetForm, this.selectedProblemset.id).subscribe();\r\n      }\r\n    }\r\n    else {\r\n      this._snackBar.open('Set cannot have empty name.','X', {duration: 2000})\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * This method navigates the user to the selected problemset.\r\n   */\r\n  viewProblemSet() {\r\n    this.router.navigate(['teacher-set-problems/' + this.selectedProblemset?.id])\r\n  }\r\n\r\n  /**\r\n   * This method adds the problemset to the list of all problem sets.\r\n   * @param problemSet - the problem set to be added.\r\n   */\r\n  addToAllProblemSetsList(problemSet: ProblemSet) {\r\n    this.allProblemSets.push({\r\n      id: problemSet.id,\r\n      name: problemSet.name,\r\n      classroomId: problemSet.classroomId,\r\n      problemList: problemSet.problemList,\r\n      type: problemSet.type,\r\n      showDate: problemSet.showDate,\r\n      dueDate: problemSet.dueDate,\r\n      visibility: problemSet.visibility\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method removes the passed set from the list of all problem sets.\r\n   * @param problemSetToRemove - the set to be removed.\r\n   */\r\n  removefromAllProblemSetsList(problemSetToRemove: ProblemSet) {\r\n    this.allProblemSets = this.allProblemSets.filter((problemset) => problemset.id != problemSetToRemove.id);\r\n  }\r\n\r\n  /**\r\n   * This method handles what the color of the border should be for the set. They are different when selected/unselected.\r\n   * @param problemset - the problem set to check the color of\r\n   * @returns a hex code for the corresponding color.\r\n   */\r\n  getBorderColor(problemset: ProblemSet): String {\r\n    if (problemset === this.selectedProblemset) {\r\n      return \"#5cb85c\";\r\n    }\r\n    return \"#bd8c7d\";\r\n  }\r\n\r\n  /**\r\n   * This method returns an empty problem set.\r\n   * @returns an empty problem set.\r\n   */\r\n  getEmptyProblemSet(): ProblemSet {\r\n    return {\r\n      name: \"\",\r\n      classroomId: this.classroomId,\r\n      problemList: [],\r\n      type: \"Practice\",\r\n      showDate: this.currentDate === null ? \"\" : this.currentDate,\r\n      dueDate: this.currentDate === null ? \"\" : this.currentDate,\r\n      visibility: \"Based on due date\"\r\n    }\r\n  }\r\n}\r\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(override: any, Router: any, override: any, KeycloakService: any, userService: UserService)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     isAccessAllowed\n                                \n                            \n            \n                            \n                                \n            isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\n/**\r\n * This class handles the Keycloak session authentication.\r\n */\r\nexport class AuthGuard extends KeycloakAuthGuard{\r\n    constructor(protected override router: Router, protected override keycloakAngular: KeycloakService, private userService: UserService){\r\n        super(router, keycloakAngular);\r\n    }\r\n\r\n    isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise {\r\n        return new Promise(async (resolve, reject) =>{\r\n            if(!this.authenticated){\r\n                this.keycloakAngular.login();\r\n                resolve(false);\r\n                return;\r\n            }\r\n            const requiredRole = route.data['role'];\r\n            let granted: boolean = false;\r\n            if (!requiredRole){\r\n                granted = true;\r\n            }\r\n            else {\r\n                if(requiredRole == this.userService.user.role){\r\n                    granted = true;\r\n                }\r\n            }\r\n\r\n            if(granted === false){\r\n                resolve(granted);\r\n            }\r\n            resolve(granted);\r\n        });\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(keycloakService: KeycloakService, _snackBar: MatSnackBar)\n                                \n                            \n            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getUserDetails\n                                \n                            \n            \n                            \n                                \n            getUserDetails()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     logout\n                                \n                            \n            \n                            \n                                \n            logout()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     redirectToProfile\n                                \n                            \n            \n                            \n                                \n            redirectToProfile()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getRoles\n                                \n                            \n            \n                            \n                                \n            getRoles()\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     string[]\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { KeycloakService } from \"keycloak-angular\";\r\nimport { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\r\n\r\n@Injectable()\r\n\r\n/**\r\n * This service handles authentication for user sessions.\r\n */\r\nexport class AuthService {\r\n    constructor(private keycloakService: KeycloakService, private _snackBar: MatSnackBar) {}\r\n\r\n    getUserDetails(){\r\n        try {\r\n            let userDetails = this.keycloakService.getKeycloakInstance().idTokenParsed;\r\n            return userDetails;\r\n        }\r\n        catch (e) {\r\n            return undefined;\r\n        }\r\n    }\r\n    \r\n    logout() {\r\n        this.keycloakService.logout();\r\n        this._snackBar.open(`Logged out`, 'X', {duration: 4000})\r\n    }\r\n\r\n    redirectToProfile(){\r\n        this.keycloakService.getKeycloakInstance().accountManagement();\r\n    }\r\n\r\n    getRoles(): string[]{\r\n        return this.keycloakService.getUserRoles();\r\n    }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ClassroomService.html":{"url":"injectables/ClassroomService.html","title":"injectable - ClassroomService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ClassroomService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classroom-service/classroom.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: HttpClient, _snackBar: MatSnackBar)\n                                \n                            \n            \n                            \n                                \n                                        The constructor for this service, contains info for the http client and a snack bar\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                \n            the client for performing HTTP requests\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                _snackBar\n                                                            \n                                                            \n                                                                \n            used for providing messages to the user\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getAllClassRooms\n                                \n                            \n            \n                            \n                                \n            getAllClassRooms()\n                                \n                            \n            \n                            \n                                \n                                        Returns all the classrooms from the pipe.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the list of classrooms, presents an error message if classrooms are unable to be obtained.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addClassroom\n                                \n                            \n            \n                            \n                                \n            addClassroom(classroom: Classroom)\n                                \n                            \n            \n                            \n                                \n                                        This method adds a classroom to the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                classroom\n                                                            \n                                                            \n                                                                the classroom to be added\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the post request.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getClassroomById\n                                \n                            \n            \n                            \n                                \n            getClassroomById(classroomId: number)\n                                \n                            \n            \n                            \n                                \n                                        This method returns a classroom by id from the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                classroomId\n                                                            \n                                                            \n                                                                \n            the id of the classroom.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the get request from the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getClassroomsByTeacherEmail\n                                \n                            \n            \n                            \n                                \n            getClassroomsByTeacherEmail(teacherEmail: string)\n                                \n                            \n            \n                            \n                                \n                                        This method returns all the classrooms associated with a teacher's email from the backend. \n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                teacherEmail\n                                                            \n                                                            \n                                                                \n            the email of the teacher\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the get request from the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateClassroom\n                                \n                            \n            \n                            \n                                \n            updateClassroom(classroom: Classroom)\n                                \n                            \n            \n                            \n                                \n                                        This method updates a classroom in the backend with new information.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                classroom\n                                                            \n                                                            \n                                                                \n            the information to be added\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the put request from the backend\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addStudentToClassroom\n                                \n                            \n            \n                            \n                                \n            addStudentToClassroom(access_code: string, classroom: Classroom, student_id: number)\n                                \n                            \n            \n                            \n                                \n                                        This method adds a student to a classroom in the backennd\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                access_code\n                                                            \n                                                            \n                                                                \n            the access code for the classroom\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                classroom\n                                                            \n                                                            \n                                                                \n            the classroom to be added to\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                student_id\n                                                            \n                                                            \n                                                                \n            the id of the student to be added\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the put request from the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getClassroomByAccessCode\n                                \n                            \n            \n                            \n                                \n            getClassroomByAccessCode(access_code: string)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     removeStudent\n                                \n                            \n            \n                            \n                                \n            removeStudent(classroom: Classroom, student_id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteClassroom\n                                \n                            \n            \n                            \n                                \n            deleteClassroom(classroom_id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap} from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport {Classroom} from \"../classroom\";\r\nimport {Student} from \"../student\";\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n\r\n/**\r\n * The service module for Classrooms\r\n */\r\nexport class ClassroomService {\r\n\r\n  /**\r\n   * The constructor for this service, contains info for the http client and a snack bar\r\n   * @param http - the client for performing HTTP requests\r\n   * @param _snackBar - used for providing messages to the user\r\n   */\r\n  constructor(private http: HttpClient, private _snackBar: MatSnackBar) {\r\n  }\r\n\r\n  /**\r\n   * Returns all the classrooms from the pipe.\r\n   * @returns the list of classrooms, presents an error message if classrooms are unable to be obtained.\r\n   */\r\n  getAllClassRooms(): Observable {\r\n    return this.http.get(\"http://localhost:8080/classrooms\").pipe(\r\n      tap({\r\n        error:() => this._snackBar.open('Unable to get classrooms', 'X', {duration:2000})\r\n      }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method adds a classroom to the backend.\r\n   * @param classroom the classroom to be added\r\n   * @returns the post request.\r\n   */\r\n  addClassroom(classroom: Classroom): Observable {\r\n    return this.http.post(\"http://localhost:8080/classrooms\", classroom).pipe(\r\n      tap(\r\n        {\r\n        next:() => this._snackBar.open(`Classroom ${classroom.name} Created`, \"X\", {duration:2000}),\r\n        error:() => this._snackBar.open('Unable to create classroom', 'X', {duration:2000})\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method returns a classroom by id from the backend.\r\n   * @param classroomId - the id of the classroom.\r\n   * @returns the get request from the backend.\r\n   */\r\n  getClassroomById(classroomId: number): Observable {\r\n    return this.http.get (\"http://localhost:8080/classrooms/\" + classroomId)\r\n  }\r\n\r\n  /**\r\n   * This method returns all the classrooms associated with a teacher's email from the backend. \r\n   * @param teacherEmail - the email of the teacher\r\n   * @returns the get request from the backend.\r\n   */\r\n  getClassroomsByTeacherEmail(teacherEmail: string): Observable {\r\n    return this.http.get(`http://localhost:8080/classrooms/email/${teacherEmail}`)\r\n  }\r\n\r\n  /**\r\n   * This method updates a classroom in the backend with new information.\r\n   * @param classroom - the information to be added\r\n   * @returns the put request from the backend\r\n   */\r\n  updateClassroom(classroom: Classroom): Observable {\r\n    return this.http.put(`http://localhost:8080/classrooms/${classroom.id}`, classroom).pipe(\r\n      tap(\r\n        {\r\n          next: () => this._snackBar.open(`Classroom: ${classroom.name} was Updated`, 'X', {duration: 2000}),\r\n          error: () => this._snackBar.open('Unable to update Classroom','X', {duration: 2000})}\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method adds a student to a classroom in the backennd\r\n   * @param access_code - the access code for the classroom\r\n   * @param classroom - the classroom to be added to\r\n   * @param student_id - the id of the student to be added\r\n   * @returns the put request from the backend.\r\n   */\r\n  addStudentToClassroom(access_code: string, classroom: Classroom, student_id: number): any {\r\n    const url = `http://localhost:8080/classrooms/addStudent/${classroom.id}/${student_id}`\r\n    return this.http.put(url, null)\r\n  }\r\n\r\n  getClassroomByAccessCode(access_code: string): Observable {\r\n    const url = `http://localhost:8080/classrooms/code/${access_code}`\r\n    return this.http.get(url)\r\n  }\r\n\r\n  removeStudent(classroom: Classroom, student_id: number){\r\n      return this.http.put(\r\n        `http://localhost:8080/classrooms/removeStudent/${classroom.id}/${student_id}`,\r\n        classroom\r\n      ).subscribe()\r\n  }\r\n\r\n  deleteClassroom(classroom_id: number) {\r\n    return this.http.delete(\"http://localhost:8080/classrooms/\" + classroom_id).subscribe()\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComplexityParserService.html":{"url":"injectables/ComplexityParserService.html","title":"injectable - ComplexityParserService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ComplexityParserService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/complexity-parser/complexity-parser.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor()\n                                \n                            \n            \n                            \n                                \n                                        The constructor for the parser. It doesn't require any information.\n            \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     parse\n                                \n                            \n            \n                            \n                                \n            parse(sourceCode: string)\n                                \n                            \n            \n                            \n                                \n                                        Parses the source code and returns the blocks of code.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                sourceCode\n                                                            \n                                                            \n                                                                The source code being parsed.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     Block[]\n            \n                                        \n                                            \n                                                A list of blocks.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    Private parserConfiguration\n                                \n                            \n            \n                            \n                                \n                                        \n                                            \n                                        \n                                    parserConfiguration(lexer: Tokenizr)\n                                \n                            \n            \n                            \n                                \n                                        Configures the parser to identify java code.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                lexer\n                                                                    :     Tokenizr\n            \n                                                            \n                                                            \n                                                                The lexer to configure.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { Block } from './block';\r\nimport Tokenizr, { Token } from \"tokenizr\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComplexityParserService {\r\n\r\n  /**\r\n   * The constructor for the parser. It doesn't require any information.\r\n   */\r\n  constructor() { }\r\n\r\n  /**\r\n   * Parses the source code and returns the blocks of code.\r\n   * @param {string} sourceCode  The source code being parsed.\r\n   * @returns A list of blocks.\r\n   */\r\n  parse(sourceCode: string): Block[] {\r\n\r\n    let lexer = new Tokenizr()\r\n    let blockList: Block[] = []\r\n\r\n    let blockDepth: number = 0            // keeps track of the number of nested blocks\r\n    let rootBlock: number = 0             // keeps track of the index of the uppermost block\r\n    let initialStackLength: number = 0\r\n    let stack: Token[] = []               // I might not need this, I could just use lexer.tokens()\r\n    let openCurCount: number = 0          // keeps track of the open braces that don't belong to any of the loops\r\n\r\n\r\n    // Configure the parser\r\n    this.parserConfiguration(lexer);\r\n\r\n    // Execute lexer and configure stack\r\n    lexer.input(sourceCode)\r\n    lexer.tokens().forEach((token) => {\r\n      stack.push(token)\r\n    })\r\n    stack.reverse()\r\n    initialStackLength = stack.length\r\n\r\n\r\n    for (let i = 0; i  0) {\r\n        openCurCount--;\r\n        continue;\r\n      }\r\n\r\n      // Check if the current token is a closing brace or closing do while statment\r\n      if ((currToken?.type === \"closeCur\" || currToken?.type === \"closeDoWhile\") && openCurCount == 0) {\r\n\r\n        // Decrease the block depth now that a block has been formed\r\n        blockDepth--;\r\n\r\n        blockList[blockDepth + rootBlock].depth = blockDepth;\r\n\r\n        // Check if this block is inside another block, if so, update the previous block complexities\r\n        if (blockDepth > 0) {\r\n          for (let i = blockList.length - blockDepth; i > rootBlock; i--) {\r\n            blockList[i - 1].complexity++\r\n          }\r\n        }\r\n\r\n        // Update the previous blocks's endline value\r\n        blockList[blockDepth + rootBlock].endLine = currToken.line;\r\n      }\r\n    }\r\n\r\n    return blockList\r\n  }\r\n\r\n  /**\r\n     * Configures the parser to identify java code.\r\n     * @param {Tokenizr} lexer The lexer to configure.\r\n     */\r\n  private parserConfiguration(lexer: Tokenizr) {\r\n\r\n    // Rules for the loop headers\r\n    lexer.rule(/for\\s*\\(.*\\s*;.*;\\s*.+\\/\\s*\\d+\\s*\\)\\s*{/,(ctx, match) => {\r\n      ctx.accept(\"logloop\");\r\n    });\r\n\r\n    lexer.rule(/for\\s*\\(.*\\)\\s*\\{/, (ctx, match) => {\r\n      ctx.accept(\"loop\");\r\n    });\r\n    lexer.rule(/while\\s*\\(.*\\)\\s*\\{/, (ctx, match) => {\r\n      ctx.accept(\"loop\");\r\n    });\r\n    lexer.rule(/do\\s*\\{/, (ctx, match) => {\r\n      ctx.accept(\"loop\");\r\n    });\r\n\r\n    // Rules for curly braces\r\n    lexer.rule(/\\{/, (ctx, match) => {\r\n      ctx.accept(\"openCur\");\r\n    });\r\n    lexer.rule(/\\}\\s*while.+\\;/, (ctx, match) => {\r\n      ctx.accept(\"closeDoWhile\");\r\n    });\r\n    lexer.rule(/\\}/, (ctx, match) => {\r\n      ctx.accept(\"closeCur\");\r\n    });\r\n\r\n\r\n\r\n    // Rules for other uneeded characters and whitespace\r\n    // Ignore single line comment\r\n    lexer.rule(/\\/\\/[^\\r\\n]*\\r?\\n?/, (ctx, match) => {\r\n      ctx.ignore();\r\n    });\r\n\r\n    // Ignore multiline comment\r\n    lexer.rule(/\\/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*\\//, (ctx, match) => {\r\n      ctx.ignore();\r\n    });\r\n\r\n    // Ignore white space\r\n    lexer.rule(/[ \\t\\r\\n]+/, (ctx, match) => {\r\n      ctx.ignore();\r\n    });\r\n\r\n    // Ignore other characters\r\n    lexer.rule(/./, (ctx, match) => {\r\n      ctx.ignore();\r\n    });\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProblemService.html":{"url":"injectables/ProblemService.html","title":"injectable - ProblemService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ProblemService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/problem-service/problem.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: HttpClient, _snackBar: MatSnackBar)\n                                \n                            \n            \n                            \n                                \n                                        This is the constructor for the service.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                \n            the HTTP client for the service\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                _snackBar\n                                                            \n                                                            \n                                                                \n            used to deliver messages to the user\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getAllProblems\n                                \n                            \n            \n                            \n                                \n            getAllProblems()\n                                \n                            \n            \n                            \n                                \n                                        Retrieves all problems from the backend.\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                The list of all problems.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addProblem\n                                \n                            \n            \n                            \n                                \n            addProblem(problem: Problem)\n                                \n                            \n            \n                            \n                                \n                                        Posts a problem to the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                problem\n                                                            \n                                                            \n                                                                a problem.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a Problem Observable.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getProblemById\n                                \n                            \n            \n                            \n                                \n            getProblemById(problemId: number)\n                                \n                            \n            \n                            \n                                \n                                        Retrieves a problem from the backend with the specified Id.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                problemId\n                                                            \n                                                            \n                                                                The id of the problem to retrieve.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                Returns an observable of the problem that it receives from the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getProblemBySetId\n                                \n                            \n            \n                            \n                                \n            getProblemBySetId(setId: number)\n                                \n                            \n            \n                            \n                                \n                                        Retrieves the problems from the backend with the specified setId.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                setId\n                                                            \n                                                            \n                                                                The id of the set that the problems belong to.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                Returns an observable of the problem that it receives from the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteProblem\n                                \n                            \n            \n                            \n                                \n            deleteProblem(problemId: number)\n                                \n                            \n            \n                            \n                                \n                                        Deletes the problems from the backend with the specified problemId.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                problemId\n                                                            \n                                                            \n                                                                The id of the problem.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                The result from the delete request.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateProblem\n                                \n                            \n            \n                            \n                                \n            updateProblem(problemId: number, problem: Problem)\n                                \n                            \n            \n                            \n                                \n                                        Updates the problems with the specified problemId.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                problemId\n                                                            \n                                                            \n                                                                The id of the problem.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                The result from the delete request.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap} from 'rxjs';\r\nimport { Problem } from '../problem';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * This is the service for the Problem class.\r\n */\r\nexport class ProblemService {\r\n  \r\n  /**\r\n   * This is the constructor for the service.\r\n   * @param http - the HTTP client for the service\r\n   * @param _snackBar - used to deliver messages to the user\r\n   */\r\n  constructor(private http: HttpClient, private _snackBar: MatSnackBar) {\r\n  }\r\n\r\n  /**\r\n   * Retrieves all problems from the backend.\r\n   * @returns The list of all problems.\r\n   */\r\n  getAllProblems(): Observable{\r\n    return this.http.get(\"http://localhost:8080/problems\").pipe(\r\n      tap(\r\n      {\r\n        error: () => this._snackBar.open('Unable to get problems','X', {duration: 2000})\r\n      }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n  *   Posts a problem to the backend.\r\n  *   @param problem a problem.\r\n  *   @returns a Problem Observable.\r\n  **/\r\n  addProblem(problem: Problem): Observable{\r\n    return this.http.post(\"http://localhost:8080/problems\", problem).pipe(\r\n      tap(\r\n      {\r\n        next: () => this._snackBar.open(`Problem ${problem.name} Created`, 'X', {duration: 2000}),\r\n        error: () => this._snackBar.open('Unable to Create Problem','X', {duration: 2000})\r\n      }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n  *   Retrieves a problem from the backend with the specified Id.\r\n  *   @param problemId The id of the problem to retrieve.\r\n  *   @returns Returns an observable of the problem that it receives from the backend.\r\n  **/\r\n  getProblemById(problemId:number): Observable{\r\n    return this.http.get(\"http://localhost:8080/problems/\" + problemId);\r\n  }\r\n\r\n  /**\r\n  *   Retrieves the problems from the backend with the specified setId.\r\n  *   @param setId The id of the set that the problems belong to.\r\n  *   @returns Returns an observable of the problem that it receives from the backend.\r\n  **/\r\n  getProblemBySetId(setId:number): Observable{\r\n    return this.http.get(\"http://localhost:8080/set/problems/\" + setId);\r\n  }\r\n\r\n  /**\r\n  *   Deletes the problems from the backend with the specified problemId.\r\n  *   @param problemId The id of the problem.\r\n  *   @returns The result from the delete request.\r\n  **/\r\n  deleteProblem(problemId:number){\r\n      return this.http.delete(\"http://localhost:8080/problems/\" + problemId);\r\n  }\r\n\r\n    /**\r\n  *   Updates the problems with the specified problemId.\r\n  *   @param problemId The id of the problem.\r\n  *   @returns The result from the delete request.\r\n  **/\r\n  updateProblem(problemId:number, problem: Problem){\r\n    return this.http.put(\"http://localhost:8080/problems/\" + problemId, problem);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProblemsetService.html":{"url":"injectables/ProblemsetService.html","title":"injectable - ProblemsetService","body":"\n                   \n\n\n\n\n\n  Injectables\n  ProblemsetService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/problemset-service/problemset.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: HttpClient, _snackBar: MatSnackBar)\n                                \n                            \n            \n                            \n                                \n                                        The constructor for the service.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                \n            the HTTP client for the service\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                _snackBar\n                                                            \n                                                            \n                                                                \n            used to deliver messages to the user\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getAllProblemSets\n                                \n                            \n            \n                            \n                                \n            getAllProblemSets()\n                                \n                            \n            \n                            \n                                \n                                        This method gets all the problem sets from the backend\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a get request for all problem sets.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getProblemSetsByClassroomId\n                                \n                            \n            \n                            \n                                \n            getProblemSetsByClassroomId(classroomId: number)\n                                \n                            \n            \n                            \n                                \n                                        This method gets all the problemsets associated with a classroom.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                classroomId\n                                                            \n                                                            \n                                                                \n            the id of the classroom \n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the get request for the problem sets.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getProblemSetById\n                                \n                            \n            \n                            \n                                \n            getProblemSetById(problemsetId: number)\n                                \n                            \n            \n                            \n                                \n                                        This method returns a problem set based on its id.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                problemsetId\n                                                            \n                                                            \n                                                                \n            the id of the problem set to be returned\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a get request for a problem set\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addProblemSet\n                                \n                            \n            \n                            \n                                \n            addProblemSet(problemset: ProblemSet)\n                                \n                            \n            \n                            \n                                \n                                        This method adds a problem set to the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                problemset\n                                                            \n                                                            \n                                                                \n            the problem set to be added.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the post request to the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateProblemSet\n                                \n                            \n            \n                            \n                                \n            updateProblemSet(problemset: ProblemSet, problemsetId: number)\n                                \n                            \n            \n                            \n                                \n                                        This method updates a problem set in the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                problemset\n                                                            \n                                                            \n                                                                \n            the problemset data to be added\n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                problemsetId\n                                                            \n                                                            \n                                                                \n            the problemset being updates\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a put request from the backend\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteProblemSet\n                                \n                            \n            \n                            \n                                \n            deleteProblemSet(problemsetId: number)\n                                \n                            \n            \n                            \n                                \n                                        This method deletes a problem set from the backend\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                problemsetId\n                                                            \n                                                            \n                                                                \n            the id of the problem set to be deleted.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a delete request from the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap} from 'rxjs';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ProblemSet } from '../problemset';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * The service for the ProblemSet object.\r\n */\r\nexport class ProblemsetService {\r\n\r\n  /**\r\n   * The constructor for the service.\r\n   * @param http - the HTTP client for the service\r\n   * @param _snackBar - used to deliver messages to the user\r\n   */\r\n  constructor(private http: HttpClient, private _snackBar: MatSnackBar) { }\r\n\r\n  /**\r\n   * This method gets all the problem sets from the backend\r\n   * @returns a get request for all problem sets.\r\n   */\r\n  getAllProblemSets(): Observable{\r\n    return this.http.get(\"http://localhost:8080/problemsets\");\r\n  }\r\n\r\n  /**\r\n   * This method gets all the problemsets associated with a classroom.\r\n   * @param classroomId - the id of the classroom \r\n   * @returns the get request for the problem sets.\r\n   */\r\n  getProblemSetsByClassroomId(classroomId: number): Observable{\r\n    return this.http.get(\"http://localhost:8080/problemsets/classroom/\" + classroomId);\r\n  }\r\n\r\n  /**\r\n   * This method returns a problem set based on its id.\r\n   * @param problemsetId - the id of the problem set to be returned\r\n   * @returns a get request for a problem set\r\n   */\r\n  getProblemSetById(problemsetId: number): Observable{\r\n    return this.http.get(\"http://localhost:8080/problemsets/\" + problemsetId);\r\n  }\r\n\r\n  /**\r\n   * This method adds a problem set to the backend.\r\n   * @param problemset - the problem set to be added.\r\n   * @returns the post request to the backend.\r\n   */\r\n  addProblemSet(problemset: ProblemSet): Observable{\r\n    return this.http.post(\"http://localhost:8080/problemsets\", problemset).pipe(\r\n      tap(\r\n      {\r\n        next: () => this._snackBar.open(`Problem Set ${problemset.name} Created`, 'X', {duration: 2000}),\r\n        error: () => this._snackBar.open('Unable to Create Problem Set','X', {duration: 2000})\r\n      }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method updates a problem set in the backend.\r\n   * @param problemset - the problemset data to be added\r\n   * @param problemsetId - the problemset being updates\r\n   * @returns a put request from the backend\r\n   */\r\n  updateProblemSet(problemset: ProblemSet, problemsetId: number): Observable{\r\n    return this.http.put(\"http://localhost:8080/problemsets/\" + problemsetId, problemset).pipe(\r\n      tap(\r\n      {\r\n        next: () => this._snackBar.open(`Problem Set ${problemset.name} was Updated`, 'X', {duration: 2000}),\r\n        error: () => this._snackBar.open('Unable to update Problem Set','X', {duration: 2000})\r\n      }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * This method deletes a problem set from the backend\r\n   * @param problemsetId - the id of the problem set to be deleted.\r\n   * @returns a delete request from the backend.\r\n   */\r\n  deleteProblemSet(problemsetId: number): Observable{\r\n    return this.http.delete(\"http://localhost:8080/problemsets/\" + problemsetId);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SolutionService.html":{"url":"injectables/SolutionService.html","title":"injectable - SolutionService","body":"\n                   \n\n\n\n\n\n  Injectables\n  SolutionService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/solution-service/solution.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: HttpClient)\n                                \n                            \n            \n                            \n                                \n                                        This is the constructor for the service.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                \n            the HTTP client for requests.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     addSolution\n                                \n                            \n            \n                            \n                                \n            addSolution(solution: Solution)\n                                \n                            \n            \n                            \n                                \n                                        Sends a Post request with a solution to the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                solution\n                                                            \n                                                            \n                                                                a solution from a student.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a Solution Observable.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getSolutionByProblemId\n                                \n                            \n            \n                            \n                                \n            getSolutionByProblemId(problemId: number)\n                                \n                            \n            \n                            \n                                \n                                        Sends a Post request with a solution to the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                solution\n                                                            \n                                                            \n                                                                a solution from a student.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                a Solution Observable.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n    \n    \n        import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Solution } from '../solution';\r\nimport { Problem } from '../problem';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * This is the service for the Solution class.\r\n */\r\nexport class SolutionService {\r\n\r\n  /**\r\n   * This is the constructor for the service.\r\n   * @param http - the HTTP client for requests.\r\n   */\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /**\r\n  *   Sends a Post request with a solution to the backend.\r\n  *   @param solution a solution from a student.\r\n  *   @returns a Solution Observable.\r\n  **/\r\n  addSolution(solution: Solution): Observable{\r\n    return this.http.post(\"http://localhost:8080/solutions\", solution);\r\n  }\r\n\r\n  /**\r\n  *   Sends a Post request with a solution to the backend.\r\n  *   @param solution a solution from a student.\r\n  *   @returns a Solution Observable.\r\n  **/\r\n  getSolutionByProblemId(problemId: number){\r\n    return this.http.get(\"http://localhost:8080/solutions/problem/\" + problemId);\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StudentService.html":{"url":"injectables/StudentService.html","title":"injectable - StudentService","body":"\n                   \n\n\n\n\n\n  Injectables\n  StudentService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/student-service/student.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: HttpClient, _snackBar: MatSnackBar)\n                                \n                            \n            \n                            \n                                \n                                        The constructor for the service.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                \n            the HTTP client \n            \n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                _snackBar\n                                                            \n                                                            \n                                                                \n            for delivering messages to users\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     getStudents\n                                \n                            \n            \n                            \n                                \n            getStudents()\n                                \n                            \n            \n                            \n                                \n                                        Makes a get request to return all students\n            \n                                        \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a get request for all Student objects\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getStudent\n                                \n                            \n            \n                            \n                                \n            getStudent(id: number)\n                                \n                            \n            \n                            \n                                \n                                        Retrieves a Student by its id.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            the Student object's id\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a get request for a student object\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     createStudent\n                                \n                            \n            \n                            \n                                \n            createStudent(student: Student)\n                                \n                            \n            \n                            \n                                \n                                        This method creates a student and adds it to the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                student\n                                                            \n                                                            \n                                                                \n            the Student object to add\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                the post request to the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     updateStudent\n                                \n                            \n            \n                            \n                                \n            updateStudent(student: Student)\n                                \n                            \n            \n                            \n                                \n                                        This method updates a student object with new information.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                student\n                                                            \n                                                            \n                                                                \n            the new data to be updated\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a put request to the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     deleteStudent\n                                \n                            \n            \n                            \n                                \n            deleteStudent(id: number)\n                                \n                            \n            \n                            \n                                \n                                        This method deletes a student from the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                id\n                                                            \n                                                            \n                                                                \n            the id of the Student to be deleted.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a delete request to the backend.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getEnrollment\n                                \n                            \n            \n                            \n                                \n            getEnrollment(student_id: number)\n                                \n                            \n            \n                            \n                                \n                                        \n                                            Returns:     any\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                    Private studentUrl\n                                \n                            \n                            \n                                \n                                    studentUrl:     string\n            \n                                \n                            \n                                \n                                    \n                                        Default value: http://localhost:8080/students\n                                    \n                                \n                        \n                    \n            \n    \n    \n        import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {Observable, tap} from 'rxjs';\r\n\r\nimport { Student } from '../student';\r\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\r\nimport {Classroom} from \"../classroom\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * This is the service for the Student class.\r\n */\r\nexport class StudentService {\r\n  private studentUrl = 'http://localhost:8080/students';\r\n\r\n  /**\r\n   * The constructor for the service.\r\n   * @param http - the HTTP client \r\n   * @param _snackBar - for delivering messages to users\r\n   */\r\n  constructor(private http: HttpClient, private _snackBar: MatSnackBar) { }\r\n\r\n  /**\r\n   * Makes a get request to return all students\r\n   * @returns a get request for all Student objects\r\n   */\r\n  getStudents(): Observable {\r\n    return this.http.get('http://localhost:8080/students').pipe(\r\n      tap(\r\n        {error: () => this._snackBar.open('Unable to get problems','X', {duration: 2000})}\r\n      )\r\n    );\r\n  }\r\n\r\n  // Get a student by ID\r\n  /**\r\n   * Retrieves a Student by its id.\r\n   * @param id - the Student object's id\r\n   * @returns a get request for a student object\r\n   */\r\n  getStudent(id: number): Observable {\r\n    const url = `${this.studentUrl}/${id}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  /**\r\n   * This method creates a student and adds it to the backend.\r\n   * @param student - the Student object to add\r\n   * @returns the post request to the backend.\r\n   */\r\n  createStudent(student: Student): Observable {\r\n    return this.http.post(this.studentUrl, student);\r\n  }\r\n\r\n  /**\r\n   * This method updates a student object with new information.\r\n   * @param student - the new data to be updated\r\n   * @returns a put request to the backend.\r\n   */\r\n  updateStudent(student: Student): Observable {\r\n    const url = `${this.studentUrl}/${student.id}`;\r\n    return this.http.put(url, student);\r\n  }\r\n\r\n  /**\r\n   * This method deletes a student from the backend.\r\n   * @param id - the id of the Student to be deleted.\r\n   * @returns a delete request to the backend.\r\n   */\r\n  deleteStudent(id: number): Observable {\r\n    const url = `${this.studentUrl}/${id}`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  getEnrollment(student_id: number): Observable {\r\n    const url = `${this.studentUrl}/${student_id}/classrooms`\r\n    return this.http.get(url)\r\n  }\r\n}\r\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(http: HttpClient)\n                                \n                            \n            \n                            \n                                \n                                        This is the constructor for the service\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                http\n                                                            \n                                                            \n                                                                \n            the HTTP client being used for requests.\n            \n            \n                                                            \n                                                        \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                Methods\n                    \n                        \n                            \n                                \n                                     updateUser\n                                \n                            \n            \n                            \n                                \n            updateUser(userObject: any, role: string)\n                                \n                            \n            \n                            \n                                \n                                        updates the user information\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                userDetails\n                                                            \n                                                            \n                                                                the user details from keycloak.\n            \n                                                            \n                                                        \n                                                        \n                                                            \n                                                                role\n                                                            \n                                                            \n                                                                the user role specifying if they are a teacher or a student.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addTeacher\n                                \n                            \n            \n                            \n                                \n            addTeacher(teacher: Teacher)\n                                \n                            \n            \n                            \n                                \n                                        Posts a teacher to the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                teacher\n                                                            \n                                                            \n                                                                a teacher.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                an Teacher Observable.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getTeacherByEmail\n                                \n                            \n            \n                            \n                                \n            getTeacherByEmail(email: string)\n                                \n                            \n            \n                            \n                                \n                                        Gets a teacher by email from the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                the email of the teacher.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a Teacher Observable.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     getStudentByEmail\n                                \n                            \n            \n                            \n                                \n            getStudentByEmail(email: string)\n                                \n                            \n            \n                            \n                                \n                                        Gets a student by email from the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                email\n                                                            \n                                                            \n                                                                the email of the student.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a Student Observable.\n            \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     addStudent\n                                \n                            \n            \n                            \n                                \n            addStudent(student: Student)\n                                \n                            \n            \n                            \n                                \n                                        Posts a teacher to the backend.\n            \n                                        \n                                                Parameters :\n                                                \n                                                        \n                                                            \n                                                                student\n                                                            \n                                                            \n                                                                the student being added to the backend.\n            \n                                                            \n                                                        \n                                                \n                                        \n                                        \n                                            Returns:     any\n            \n                                        \n                                            \n                                                a Student Observable.\n            \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                Properties\n                    \n                        \n                            \n                                \n                                     user\n                                \n                            \n                            \n                                \n                                    user:     any\n            \n                                \n                            \n                            \n                                \n                                    Holds the information of the current logged in user.\n            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                     userDetails\n                                \n                            \n                            \n                                \n                                    userDetails:     any\n            \n                                \n                            \n                        \n                    \n            \n    \n    \n        import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Teacher } from './teacher';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { Student } from './student';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * This is the User object service.\r\n */\r\nexport class UserService {\r\n\r\n  /**\r\n   * This is the constructor for the service\r\n   * @param http - the HTTP client being used for requests.\r\n   */\r\n  constructor(private http: HttpClient) {}\r\n  \r\n  /**\r\n  * Holds the information of the current logged in user.\r\n  **/\r\n  user: any;\r\n  userDetails: any;\r\n\r\n  /**\r\n  *   updates the user information\r\n  *   @param userDetails the user details from keycloak.\r\n  *   @param role the user role specifying if they are a teacher or a student.\r\n  **/\r\n  updateUser(userObject: any, role: string){\r\n    this.user = userObject;\r\n    if(this.user){\r\n      this.user.role = role;\r\n    }\r\n  }\r\n\r\n  /**\r\n  *   Posts a teacher to the backend.\r\n  *   @param teacher a teacher.\r\n  *   @returns an Teacher Observable.\r\n  **/\r\n  addTeacher(teacher: Teacher): Observable{\r\n    return this.http.post(\"http://localhost:8080/teachers\", teacher)\r\n  }\r\n\r\n  /**\r\n  *   Gets a teacher by email from the backend.\r\n  *   @param email the email of the teacher.\r\n  *   @returns a Teacher Observable.\r\n  **/\r\n  getTeacherByEmail(email: string): Observable{\r\n    return this.http.get(\"http://localhost:8080/teachers/email/\" + email)\r\n  }\r\n\r\n  /**\r\n  *   Gets a student by email from the backend.\r\n  *   @param email the email of the student.\r\n  *   @returns a Student Observable.\r\n  **/\r\n  getStudentByEmail(email: string): Observable{\r\n    return this.http.get(\"http://localhost:8080/students/email/\" + email)\r\n  }\r\n\r\n    /**\r\n    *   Posts a teacher to the backend.\r\n    *   @param student the student being added to the backend.\r\n    *   @returns a Student Observable.\r\n    **/\r\n  addStudent(student: Student): Observable{\r\n    return this.http.post(\"http://localhost:8080/students\", student)\r\n  }\r\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Block\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/complexity-parser/block.ts\n        \n\n            \n                Description\n            \n            \n                This interface defines a \"block\" of code\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        begLine\n                                    \n                                \n                                \n                                    \n                                        begLine:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        complexity\n                                    \n                                \n                                \n                                    \n                                        complexity:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        depth\n                                    \n                                \n                                \n                                    \n                                        depth:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        endLine\n                                    \n                                \n                                \n                                    \n                                        endLine:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface Block {\r\n    complexity: number;\r\n    begLine: number;\r\n    endLine: number;\r\n    depth: number;\r\n}\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Classroom.html":{"url":"interfaces/Classroom.html","title":"interface - Classroom","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Classroom\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/classroom.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the Classroom object.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        accessCode\n                                    \n                                \n                                \n                                    \n                                        accessCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        enrolled_students\n                                    \n                                \n                                \n                                    \n                                        enrolled_students:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        teacher\n                                    \n                                \n                                \n                                    \n                                        teacher:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import {Student} from \"./student\";\r\n\r\n/**\r\n * Interface for the Classroom object.\r\n */\r\nexport interface Classroom {\r\n\r\n  id?: number\r\n  name: string\r\n  teacher: any\r\n  accessCode: string\r\n  enrolled_students: any;\r\n\r\n\r\n\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Problem.html":{"url":"interfaces/Problem.html","title":"interface - Problem","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Problem\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/problem.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the Problem object.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        complexity\n                                    \n                                \n                                \n                                    \n                                        complexity:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        hints\n                                    \n                                \n                                \n                                    \n                                        hints:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        overallComplexity\n                                    \n                                \n                                \n                                    \n                                        overallComplexity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        setId\n                                    \n                                \n                                \n                                    \n                                        setId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        sourceCode\n                                    \n                                \n                                \n                                    \n                                        sourceCode:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        totalScore\n                                    \n                                \n                                \n                                    \n                                        totalScore:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface Problem {\r\n    id?: number;\r\n    setId: number;\r\n    name: string;\r\n    sourceCode: string[];\r\n    complexity: string[];\r\n    hints: string[];\r\n    overallComplexity: string;\r\n    totalScore: number;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProblemSet.html":{"url":"interfaces/ProblemSet.html","title":"interface - ProblemSet","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  ProblemSet\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/problemset.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the ProblemSet object.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        classroomId\n                                    \n                                \n                                \n                                    \n                                        classroomId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        dueDate\n                                    \n                                \n                                \n                                    \n                                        dueDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        problemList\n                                    \n                                \n                                \n                                    \n                                        problemList:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        showDate\n                                    \n                                \n                                \n                                    \n                                        showDate:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        visibility\n                                    \n                                \n                                \n                                    \n                                        visibility:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface ProblemSet {\r\n    id?: number;\r\n    name: string;\r\n    classroomId: number;\r\n    problemList: number[];\r\n    type: string;\r\n    showDate: string;\r\n    dueDate: string;\r\n    visibility: string;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Solution.html":{"url":"interfaces/Solution.html","title":"interface - Solution","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Solution\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/solution.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the Solution object.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        complexityAnswer\n                                    \n                                \n                                \n                                    \n                                        complexityAnswer:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        overallComplexity\n                                    \n                                \n                                \n                                    \n                                        overallComplexity:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        problemId\n                                    \n                                \n                                \n                                    \n                                        problemId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        score\n                                    \n                                \n                                \n                                    \n                                        score:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        studentId\n                                    \n                                \n                                \n                                    \n                                        studentId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface Solution {\r\n    id?: number;\r\n    studentId: number;\r\n    problemId: number;\r\n    complexityAnswer: string[];\r\n    overallComplexity: string;\r\n    score: number;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Student.html":{"url":"interfaces/Student.html","title":"interface - Student","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Student\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/student.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the Student object.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        enrolled_classes\n                                    \n                                \n                                \n                                    \n                                        enrolled_classes:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        password_hash\n                                    \n                                \n                                \n                                    \n                                        password_hash:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        import {Classroom} from \"./classroom\";\r\n\r\n/**\r\n * Interface for the Student object.\r\n */\r\nexport interface Student {\r\n    id?: number;\r\n    email: string;\r\n    first_name: string;\r\n    last_name: string;\r\n    enrolled_classes: any;\r\n    password_hash: string;\r\n\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Teacher.html":{"url":"interfaces/Teacher.html","title":"interface - Teacher","body":"\n                   \n\n\n\n\n\n\n\n\n  Interfaces\n  Teacher\n\n\n\n    \n        Infos\n    \n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teacher.ts\n        \n\n            \n                Description\n            \n            \n                Interface for the Teacher object.\n\n            \n\n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        first_name\n                                    \n                                \n                                \n                                    \n                                        first_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        last_name\n                                    \n                                \n                                \n                                    \n                                        last_name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        teacherEmail\n                                    \n                                \n                                \n                                    \n                                        teacherEmail:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                        \n                    \n            \n    \n    \n        export interface Teacher {\r\n    id?: number;\r\n    first_name: string;\r\n    last_name: string;\r\n    teacherEmail: string;\r\n    // password_hash: string;\r\n}\r\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous.html":{"url":"miscellaneous.html","title":"miscellaneous - miscellaneous","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n\n\n    \n        Variables\n            \n                \n                    \n                        \n                             keycloakConfig\n                        \n                    \n                    \n                        \n                            keycloakConfig:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockProblemIdMap\n                        \n                    \n                    \n                        \n                            mockProblemIdMap:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockDialogRef\n                        \n                    \n                    \n                        \n                            mockDialogRef:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockMatDialog\n                        \n                    \n                    \n                        \n                            mockMatDialog:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockProblem1\n                        \n                    \n                    \n                        \n                            mockProblem1:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockProblem2\n                        \n                    \n                    \n                        \n                            mockProblem2:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockProblemArray\n                        \n                    \n                    \n                        \n                            mockProblemArray:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockAddProblem\n                        \n                    \n                    \n                        \n                            mockAddProblem:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockProblemList\n                        \n                    \n                    \n                        \n                            mockProblemList:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             MockProblemService\n                        \n                    \n                    \n                        \n                            MockProblemService:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockRange\n                        \n                    \n                    \n                        \n                            mockRange:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockSelection\n                        \n                    \n                    \n                        \n                            mockSelection:     \n    \n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                             mockMatSnackBar\n                        \n                    \n                    \n                        \n                            mockMatSnackBar:     \n    \n                        \n                    \n                \n            \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage \n\n\n\n    Project\n    39%\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/app/add-problem-modal/add-problem-modal.component.ts\n            \n            \n                component\n            \n            \n                AddProblemModalComponent\n            \n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                src/app/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/auth.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                src/app/classroom-creation/classroom-creation.component.ts\n            \n            \n                component\n            \n            \n                ClassroomCreationComponent\n            \n            \n                30 %\n                (6/20)\n            \n        \n        \n            \n                src/app/classroom-detail/classroom-detail.component.ts\n            \n            \n                component\n            \n            \n                ClassroomDetailComponent\n            \n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                src/app/classroom-service/classroom.service.ts\n            \n            \n                injectable\n            \n            \n                ClassroomService\n            \n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                src/app/classroom.ts\n            \n            \n                interface\n            \n            \n                Classroom\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/app/complexity-parser/block.ts\n            \n            \n                interface\n            \n            \n                Block\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/complexity-parser/complexity-parser.service.ts\n            \n            \n                injectable\n            \n            \n                ComplexityParserService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/confirmation-modal/confirmation-modal.component.ts\n            \n            \n                component\n            \n            \n                ConfirmationModalComponent\n            \n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                src/app/homepage/homepage.component.ts\n            \n            \n                component\n            \n            \n                HomepageComponent\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                src/app/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                src/app/navbar/navbar.component.ts\n            \n            \n                component\n            \n            \n                NavbarComponent\n            \n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                src/app/problem-creation/problem-creation.component.ts\n            \n            \n                component\n            \n            \n                ProblemCreationComponent\n            \n            \n                52 %\n                (11/21)\n            \n        \n        \n            \n                src/app/problem-service/problem.service.ts\n            \n            \n                injectable\n            \n            \n                ProblemService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/app/problem.ts\n            \n            \n                interface\n            \n            \n                Problem\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/app/problemset-service/problemset.service.ts\n            \n            \n                injectable\n            \n            \n                ProblemsetService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                src/app/problemset.ts\n            \n            \n                interface\n            \n            \n                ProblemSet\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                src/app/select-set-modal/select-set-modal.component.ts\n            \n            \n                component\n            \n            \n                SelectSetModalComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                src/app/solution-service/solution.service.ts\n            \n            \n                injectable\n            \n            \n                SolutionService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                src/app/solution.ts\n            \n            \n                interface\n            \n            \n                Solution\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/student-classroom-view/student-classroom-view.component.ts\n            \n            \n                component\n            \n            \n                StudentClassroomViewComponent\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                src/app/student-classrooms/student-classrooms.component.ts\n            \n            \n                component\n            \n            \n                StudentClassroomsComponent\n            \n            \n                38 %\n                (5/13)\n            \n        \n        \n            \n                src/app/student-problem-set/student-problem-set.component.ts\n            \n            \n                component\n            \n            \n                StudentProblemSetComponent\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                src/app/student-service/student.service.ts\n            \n            \n                injectable\n            \n            \n                StudentService\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                src/app/student-solution/student-solution.component.ts\n            \n            \n                component\n            \n            \n                StudentSolutionComponent\n            \n            \n                29 %\n                (5/17)\n            \n        \n        \n            \n                src/app/student.ts\n            \n            \n                interface\n            \n            \n                Student\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                src/app/teacher-problem/teacher-problem.component.ts\n            \n            \n                component\n            \n            \n                TeacherProblemComponent\n            \n            \n                68 %\n                (11/16)\n            \n        \n        \n            \n                src/app/teacher-problemset-page/teacher-problemset-page.component.ts\n            \n            \n                component\n            \n            \n                TeacherProblemsetPageComponent\n            \n            \n                62 %\n                (10/16)\n            \n        \n        \n            \n                src/app/teacher.ts\n            \n            \n                interface\n            \n            \n                Teacher\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/app/user.service.ts\n            \n            \n                injectable\n            \n            \n                UserService\n            \n            \n                85 %\n                (6/7)\n            \n        \n    \n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
