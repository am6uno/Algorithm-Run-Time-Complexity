var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.447,1,0.879]],["body/components/AppComponent.html",[0,0.771,1,1.594,2,1.875,3,0.486,4,0.418,5,1.646,6,1.646,7,1.646,8,1.646,9,0.418,10,3.057,11,1.646,12,2.611,13,2.611,14,2.581,15,2.078,16,5.138,17,2.078,18,4.689,19,0.418,20,1.008,21,3.632,22,0.418,23,0.039,24,0.989,25,1.646,26,1.485,27,3.314,28,0.989,29,3.713,30,0.89,31,0.799,32,0.486,33,0.89,34,1.646,35,2.078,36,2.078,37,1.646,38,2.392,39,1.646,40,0.9,41,1.646,42,1.096,43,1.646,44,1.096,45,1.646,46,1.096,47,1.646,48,1.096,49,1.249,50,1.646,51,1.096,52,1.646,53,1.096,54,0.89,55,0.989,56,1.646,57,1.646,58,0.03,59,0.03]],["title/modules/AppModule.html",[60,2.451,61,1.846]],["body/modules/AppModule.html",[0,0.74,1,1.675,3,0.34,4,0.292,9,0.292,23,0.04,30,1.447,31,0.559,32,0.34,33,0.623,42,1.556,44,1.556,46,1.513,48,1.556,49,1.244,51,1.556,53,1.556,54,0.884,55,0.692,58,0.024,59,0.024,61,3.688,62,1.836,63,2.286,64,2.138,65,2.138,66,2.138,67,2.138,68,2.048,69,3.036,70,2.138,71,1.43,72,2.597,73,3.688,74,3.688,75,3.688,76,3.688,77,3.688,78,3.688,79,3.036,80,1.836,81,2.597,82,2.597,83,2.597,84,3.688,85,2.597,86,3.688,87,2.597,88,2.597,89,2.607,90,1.151,91,3.688,92,2.597,93,2.138,94,3.688,95,2.597,96,3.688,97,2.597,98,2.597,99,1.836,100,2.597,101,3.688,102,2.597,103,3.688,104,1.61,105,1.836,106,2.597,107,3.688,108,2.597,109,3.688,110,2.138,111,3.688,112,2.138,113,3.688,114,1.43,115,1.43,116,3.688,117,3.53,118,1.61,119,1.61,120,3.688,121,2.597,122,1.61,123,4.93,124,2.597,125,1.836,126,2.597,127,3.688,128,2.597,129,2.597,130,3.688,131,2.597,132,1.43,133,2.597,134,4.93,135,2.597,136,4.668,137,1.43,138,1.61,139,2.597,140,2.597,141,2.597,142,2.597,143,2.597,144,2.597,145,1.43,146,2.597]],["title/injectables/AuthService.html",[68,1.191,147,0.879]],["body/injectables/AuthService.html",[3,0.477,4,0.41,9,0.41,19,0.41,22,0.41,23,0.04,24,1.235,28,1.475,30,1.222,31,0.784,32,0.477,33,0.874,40,0.7,58,0.03,59,0.03,68,1.853,71,2.007,114,2.007,115,2.007,117,4.657,118,2.26,119,2.26,147,1.368,148,1.796,149,3.001,150,1.368,151,5.361,152,5.361,153,4.414,154,5.361,155,1.076,156,3.645,157,3.158,158,3.323,159,3.645,160,1.076,161,0.7,162,3.645,163,1.583,164,3.645,165,3.645,166,1.675,167,3.645,168,1.458,169,1.317,170,3.645,171,2.873,172,3.645,173,2.258,174,3.645,175,3.645,176,3.001,177,3.645,178,3.645,179,2.577,180,2.26,181,3.645,182,3.645,183,3.645]],["title/interfaces/Block.html",[184,0.879,185,1.467]],["body/interfaces/Block.html",[3,0.554,4,0.476,9,0.476,19,0.476,20,1.093,22,0.636,23,0.039,32,0.554,58,0.033,59,0.033,184,1.25,185,2.504,186,2.085,187,2.991,188,3.484,189,5.649,190,3.11,191,4.651,192,4.651,193,1.994]],["title/injectables/ComplexityParserService.html",[147,0.879,194,1.639]],["body/injectables/ComplexityParserService.html",[3,0.302,4,0.53,9,0.26,14,1.269,19,0.381,22,0.381,23,0.041,24,1.177,26,0.922,28,1.068,30,0.962,31,0.496,32,0.302,33,0.553,40,0.65,58,0.022,59,0.022,147,0.999,148,1.136,150,0.999,155,1.184,160,0.999,161,0.65,163,1.389,166,0.833,169,1.449,173,1.022,185,2.701,187,3.123,191,1.898,192,1.898,193,1.537,194,1.863,195,2.738,196,1.898,197,2.786,198,3.384,199,2.306,200,3.384,201,2.306,202,2.786,203,3.232,204,4.705,205,1.667,206,2.098,207,2.786,208,3.384,209,2.392,210,3.384,211,4.184,212,2.306,213,3.384,214,4.009,215,3.384,216,3.384,217,4.918,218,4.418,219,4.009,220,1.429,221,1.667,222,1.136,223,2.392,224,4.705,225,2.31,226,4.009,227,4.009,228,2.306,229,3.384,230,2.306,231,3.384,232,3.384,233,1.898,234,1.898,235,2.306,236,4.009,237,1.898,238,3.384,239,2.306,240,2.306,241,2.306,242,2.306,243,1.898,244,2.306,245,2.306,246,2.306,247,2.306,248,2.306,249,2.306,250,2.306,251,2.392,252,1.898,253,3.384,254,2.306,255,2.306,256,3.384,257,2.306,258,2.306,259,2.306,260,2.306,261,2.306,262,3.384,263,2.306,264,2.306,265,2.306,266,3.384,267,3.384,268,2.306,269,2.306,270,2.306,271,2.306,272,2.306,273,2.306,274,2.306,275,2.306,276,4.009,277,2.306,278,2.306,279,2.306,280,5.408,281,4.452,282,4.009,283,2.306,284,2.306,285,2.306,286,4.705,287,2.306,288,2.306,289,2.306,290,2.306,291,2.306,292,3.384,293,2.306,294,4.418,295,2.306,296,1.429,297,3.384,298,2.306,299,4.418,300,2.306,301,1.269,302,1.429,303,2.306]],["title/components/HomepageComponent.html",[0,0.447,42,0.879]],["body/components/HomepageComponent.html",[0,0.667,1,0.819,2,1.545,3,0.363,4,0.312,5,1.229,6,1.229,7,1.229,8,1.229,9,0.312,11,1.229,12,2.464,13,2.464,15,1.712,17,1.712,19,0.312,20,0.831,22,0.435,23,0.04,25,1.229,26,1.109,28,1.184,30,1.153,31,0.597,32,0.363,33,0.665,34,1.229,35,1.712,36,1.712,37,1.229,38,2.13,39,1.229,40,0.853,41,1.229,42,1.419,43,1.229,44,0.819,45,1.229,46,0.819,47,1.229,48,0.819,49,1.029,50,1.229,51,0.819,52,1.229,53,0.819,54,1.066,55,0.739,56,1.229,57,1.229,58,0.025,59,0.025,68,2.092,90,1.229,122,1.72,132,1.527,137,2.646,138,2.395,145,1.527,150,1.141,155,0.819,160,0.819,161,0.533,163,0.819,166,1.396,168,1.109,169,1.396,171,1.72,301,1.527,304,2.284,305,2.127,306,2.755,307,4.445,308,4.445,309,3.863,310,4.445,311,2.979,312,1.961,313,2.645,314,2.955,315,2.774,316,2.774,317,2.127,318,2.127,319,2.774,320,1.961,321,2.284,322,2.774,323,2.284,324,2.284,325,2.19,326,3.397,327,2.284,328,2.284,329,2.395,330,2.774,331,3.18,332,2.284,333,2.774,334,3.863,335,3.863,336,3.18,337,2.755,338,2.395,339,2.395,340,2.127,341,1.72,342,1.72,343,1.961,344,1.367,345,1.903,346,2.19,347,2.731,348,2.284,349,2.774,350,2.284,351,2.284,352,1.961,353,2.774,354,1.72,355,1.527,356,1.72,357,1.367,358,1.72,359,1.527,360,1.367,361,1.367,362,2.774,363,1.367]],["title/components/LoginComponent.html",[0,0.447,44,0.879]],["body/components/LoginComponent.html",[0,0.559,1,0.602,2,1.235,3,0.267,4,0.23,5,0.904,6,0.904,7,0.904,8,0.904,9,0.23,11,0.904,12,2.281,13,2.281,15,1.369,17,1.369,19,0.23,20,0.664,22,0.566,23,0.04,24,0.823,25,1.652,26,1.491,28,1.372,30,1.127,31,0.439,32,0.267,33,0.489,34,0.904,35,1.369,36,1.369,37,0.904,38,1.843,39,0.904,40,0.937,41,0.904,42,0.602,43,0.904,44,1.228,45,0.904,46,0.602,47,0.904,48,0.602,49,0.823,50,0.904,51,0.602,52,0.904,53,0.602,54,1.296,55,0.544,56,0.904,57,0.904,58,0.02,59,0.02,68,1.88,90,0.904,93,1.68,122,1.265,132,1.123,137,2.052,138,2.311,150,0.912,155,0.912,160,1.319,161,0.858,163,1.319,166,1.699,169,1.503,171,2.769,225,2.083,305,1.7,306,2.311,311,2.578,312,1.442,313,2.405,314,2.688,317,2.289,318,2.289,320,1.442,321,1.68,323,1.68,324,1.68,325,2.627,326,3.322,327,1.68,328,1.68,329,1.915,331,3.423,332,1.68,336,3.069,340,1.7,344,1.522,345,1.522,346,1.522,347,2.635,354,1.265,355,1.7,357,1.837,358,1.265,360,1.005,361,1.005,363,1.005,364,1.68,365,3.728,366,3.089,367,3.728,368,3.728,369,2.543,370,2.543,371,3.089,372,3.089,373,3.069,374,3.423,375,2.04,376,3.089,377,2.04,378,3.089,379,2.04,380,3.089,381,2.04,382,3.089,383,2.04,384,2.04,385,2.04,386,2.04,387,2.04,388,1.68,389,3.089,390,2.04,391,3.089,392,3.069,393,2.04,394,2.04,395,2.04,396,3.089,397,2.939,398,2.04,399,3.089,400,3.089,401,2.184,402,2.543,403,2.184,404,2.543,405,1.68,406,2.543,407,2.184,408,2.543,409,2.04,410,3.089,411,2.543,412,1.442,413,1.68,414,2.04,415,2.04,416,2.311,417,1.7,418,2.543,419,2.04,420,1.442,421,1.7,422,2.184,423,1.442,424,1.442,425,1.7,426,1.123,427,1.123,428,1.442,429,1.442,430,1.915,431,1.123,432,1.265,433,1.265,434,1.442,435,1.442,436,1.442,437,1.265,438,1.442,439,1.442,440,1.123,441,2.04,442,2.04,443,1.123,444,1.123,445,1.265,446,1.442,447,1.442]],["title/components/NavbarComponent.html",[0,0.447,46,0.879]],["body/components/NavbarComponent.html",[0,0.664,1,0.812,2,1.535,3,0.36,4,0.309,5,1.218,6,1.218,7,1.218,8,1.218,9,0.309,11,1.218,12,2.459,13,2.459,15,1.701,17,1.701,19,0.309,21,1.943,22,0.309,23,0.04,27,2.713,28,1.023,30,1.061,31,0.591,32,0.36,33,0.659,34,1.218,35,1.701,36,1.701,37,1.218,38,2.121,39,1.218,40,0.849,41,1.218,42,0.812,43,1.218,44,0.812,45,1.218,46,1.414,47,1.218,48,0.812,49,1.39,50,1.218,51,0.812,52,1.218,53,0.812,54,0.659,55,0.732,56,1.218,57,1.218,58,0.025,59,0.025,68,2.086,71,2.113,122,1.704,150,1.133,153,4.295,155,0.812,160,0.812,161,0.528,163,0.812,166,0.993,168,1.099,169,0.993,176,2.263,222,1.354,296,1.704,301,2.113,302,1.704,312,1.943,313,2.638,320,1.943,337,1.704,338,2.968,339,1.704,340,2.435,341,1.704,342,1.704,343,1.943,344,1.354,345,2.358,346,2.734,352,3.384,356,1.704,357,1.354,359,2.113,360,2.358,361,2.179,363,2.179,408,2.263,417,1.513,421,1.513,425,2.435,426,1.513,427,1.513,430,1.704,431,2.113,440,2.635,444,2.435,445,1.704,448,2.263,449,4.423,450,4.423,451,3.838,452,2.749,453,2.749,454,2.749,455,2.749,456,4.787,457,4.787,458,4.146,459,3.838,460,1.943,461,2.263,462,2.749,463,2.749,464,2.263,465,2.749,466,2.749,467,1.943,468,3.838,469,2.749,470,2.749,471,2.379,472,2.263,473,2.263,474,1.704,475,2.263,476,2.263,477,2.749,478,1.513,479,1.704]],["title/interfaces/Problem.html",[49,0.793,184,0.879]],["body/interfaces/Problem.html",[3,0.509,4,0.438,9,0.438,19,0.438,20,1.038,22,0.663,23,0.039,24,1.626,32,0.509,40,1.054,49,1.286,58,0.031,59,0.031,161,0.927,184,1.149,186,1.917,190,3.021,193,1.941,206,3.402,480,3.203,481,3.88,482,2.704,483,3.402,484,4.519,485,3.88]],["title/components/ProblemCreationComponent.html",[0,0.447,48,0.879]],["body/components/ProblemCreationComponent.html",[0,0.359,1,0.314,2,0.729,3,0.139,4,0.506,5,0.472,6,0.472,7,0.472,8,0.472,9,0.205,11,0.472,12,1.815,13,1.815,15,0.808,17,0.808,19,0.12,20,0.392,21,0.753,22,0.518,23,0.04,24,1.272,25,1.738,26,1.568,28,1.343,30,0.834,31,0.229,32,0.139,33,0.255,34,0.472,35,0.808,36,0.808,37,0.472,38,1.256,39,0.472,40,0.932,41,0.472,42,0.314,43,0.472,44,0.314,45,0.472,46,0.314,47,0.472,48,0.837,49,1.431,50,0.472,51,0.314,52,0.472,53,0.314,54,0.255,55,0.284,56,0.472,57,0.472,58,0.012,59,0.012,90,0.472,105,3.6,114,0.586,115,0.586,132,1.317,138,1.976,145,0.586,150,0.539,155,0.314,157,1.483,158,1.757,160,0.941,161,0.612,163,1.328,166,1.344,168,0.426,169,1.152,173,1.06,180,1.131,185,0.899,190,2.956,193,1.338,194,2.047,195,0.66,197,2.863,202,1.502,203,3.089,205,0.525,206,1.757,221,0.525,222,0.899,223,0.753,225,2.317,296,3.007,301,0.586,302,0.66,314,2.047,317,0.586,318,0.586,337,0.66,338,2.909,339,1.131,340,2.708,341,2.156,342,1.483,344,1.932,345,1.571,346,2.018,351,1.502,352,0.753,354,1.131,355,2.774,356,1.483,357,2.39,358,0.66,359,1.755,360,1.571,361,1.179,363,1.713,392,0.877,416,2.787,417,2.532,420,1.289,421,2.047,422,2.772,423,2.004,424,1.691,425,2.956,426,2.255,427,2.956,428,1.691,429,1.691,430,2.851,431,2.255,432,1.483,433,1.483,434,2.004,435,1.691,436,2.895,437,2.909,438,1.691,439,1.691,440,1.004,443,0.586,444,1.317,445,0.66,446,2.004,460,1.691,464,0.877,467,0.753,471,2.633,474,1.483,478,0.586,479,1.757,481,3.178,483,1.757,484,2.334,485,2.628,486,3.157,487,0.877,488,2.393,489,1.824,490,2.393,491,1.824,492,2.835,493,2.835,494,2.835,495,1.824,496,1.824,497,2.835,498,1.824,499,2.835,500,0.753,501,1.713,502,1.824,503,1.065,504,1.065,505,1.065,506,1.065,507,1.065,508,1.065,509,1.824,510,1.065,511,2.393,512,1.824,513,1.065,514,1.065,515,1.824,516,1.824,517,1.824,518,1.502,519,1.824,520,1.065,521,1.502,522,1.824,523,1.824,524,2.393,525,1.824,526,1.824,527,1.065,528,1.065,529,1.065,530,1.065,531,1.065,532,1.065,533,2.539,534,1.065,535,1.065,536,1.065,537,0.753,538,0.877,539,1.065,540,1.065,541,1.824,542,1.824,543,1.824,544,1.065,545,3.477,546,1.065,547,1.289,548,1.065,549,1.065,550,1.065,551,1.065,552,1.065,553,1.065,554,1.065,555,1.065,556,1.065,557,1.065,558,1.97,559,1.065,560,1.065,561,1.824,562,1.824,563,1.065,564,1.824,565,1.065,566,1.065,567,1.065,568,1.065,569,1.065,570,1.065,571,1.065,572,1.065,573,1.065,574,1.065,575,1.065,576,1.065,577,1.065,578,1.065,579,1.065,580,1.065,581,1.065,582,1.065,583,1.065,584,1.065,585,1.065,586,1.065,587,1.065,588,1.065,589,1.065,590,1.065,591,1.065,592,1.065,593,1.065,594,1.065,595,1.065,596,1.065,597,1.065,598,1.065,599,2.393,600,1.065,601,1.065,602,1.065,603,1.065,604,2.393,605,1.065,606,1.065,607,1.824,608,1.824,609,2.393,610,1.824,611,1.824,612,2.625,613,1.502,614,2.334,615,0.877,616,2.393,617,1.824,618,1.065,619,1.97,620,3.837,621,3.251,622,1.289,623,1.065,624,1.824,625,1.065,626,1.065,627,1.065,628,1.065,629,1.502,630,2.334,631,1.502,632,1.289,633,2.334,634,1.065,635,2.863,636,0.877,637,1.289,638,0.877,639,1.502,640,1.691,641,2.334,642,0.877,643,0.877,644,0.877,645,0.877,646,1.502,647,0.877,648,1.502,649,1.502,650,1.97,651,1.502,652,0.877,653,0.877,654,0.877,655,0.877]],["title/components/ProblemSelectionComponent.html",[0,0.447,51,0.879]],["body/components/ProblemSelectionComponent.html",[0,0.547,1,0.581,2,1.201,3,0.257,4,0.221,5,0.871,6,0.871,7,0.871,8,0.871,9,0.221,11,0.871,12,2.258,13,2.258,15,1.331,17,1.331,19,0.221,20,0.646,22,0.522,23,0.04,24,1.235,25,1.331,26,1.201,28,1.284,30,0.978,31,0.423,32,0.257,33,0.471,34,0.871,35,1.331,36,1.331,37,0.871,38,1.808,39,0.871,40,0.998,41,0.871,42,0.581,43,0.871,44,0.581,45,0.871,46,0.581,47,0.871,48,0.581,49,1.584,50,0.871,51,1.205,52,0.871,53,0.581,54,0.471,55,0.8,56,0.871,57,0.871,58,0.019,59,0.019,90,0.871,99,3.513,137,1.653,145,2.006,150,0.887,155,0.581,160,1.205,161,0.783,163,1.298,166,1.317,168,0.786,169,0.711,173,1.331,193,1.191,205,1.796,209,2.884,221,2.01,225,1.331,281,3,301,1.653,305,1.653,306,2.259,311,2.529,314,2.653,317,1.082,318,2.006,344,0.969,345,1.48,346,2.165,355,2.246,357,1.48,359,1.082,360,0.969,361,0.969,363,1.48,416,2.988,417,1.082,418,1.619,421,1.082,425,2.246,426,1.653,427,1.082,431,1.653,432,1.219,433,1.219,437,1.862,443,1.082,444,1.653,458,4.657,471,2.259,472,1.619,473,1.619,474,1.219,475,1.619,476,1.619,478,1.082,479,1.219,486,3.081,500,1.39,501,2.604,518,2.473,521,2.473,537,1.39,620,3.407,621,2.123,640,1.39,656,1.619,657,3.645,658,3.003,659,4.395,660,4.82,661,3.003,662,3.003,663,3.003,664,1.966,665,4.633,666,3.836,667,2.872,668,3.003,669,1.966,670,3.003,671,3.003,672,5.198,673,4.08,674,3.003,675,3.003,676,1.966,677,3.003,678,3.003,679,2.473,680,3.003,681,3.003,682,3.003,683,1.966,684,3.003,685,3.003,686,3.003,687,1.966,688,1.862,689,1.966,690,1.966,691,4.08,692,1.966,693,1.966,694,3.645,695,1.966,696,1.966,697,1.966,698,1.966,699,1.966,700,1.966,701,1.966,702,1.966,703,2.123,704,3.003]],["title/injectables/ProblemService.html",[147,0.879,501,1.467]],["body/injectables/ProblemService.html",[3,0.374,4,0.322,9,0.322,14,1.574,19,0.322,22,0.508,23,0.04,28,1.297,30,1.225,31,0.615,32,0.374,33,0.686,40,0.867,49,1.612,58,0.026,59,0.026,104,1.772,114,1.574,115,1.574,147,1.165,148,1.408,150,1.165,155,0.844,157,2.799,158,3.018,160,1.333,161,0.867,163,1.69,168,1.143,169,1.033,173,2.001,179,2.021,180,2.799,193,1.289,205,1.943,209,2.788,220,1.772,221,2.399,329,1.772,397,2.788,440,1.574,482,2.517,486,3.166,501,1.943,547,3.192,666,3.441,667,3.47,688,3.018,703,2.021,705,2.353,706,3.247,707,4.008,708,3.944,709,2.021,710,3.441,711,2.859,712,2.788,713,3.944,714,2.859,715,3.247,716,4.108,717,2.859,718,4.868,719,2.859,720,2.859,721,3.944,722,4.516,723,4.516,724,3.192,725,1.574,726,2.859,727,3.944,728,2.859,729,2.859,730,2.859,731,2.859,732,2.859,733,2.353,734,2.859,735,2.859]],["title/interfaces/Solution.html",[55,0.793,184,0.879]],["body/interfaces/Solution.html",[3,0.53,4,0.456,9,0.456,19,0.456,20,1.064,22,0.654,23,0.039,24,1.547,32,0.53,55,1.318,58,0.032,59,0.032,161,0.95,184,1.196,186,1.995,193,1.984,482,2.742,483,3.45,688,3.45,736,3.334,737,4.582,738,4.582,739,4.582]],["title/injectables/SolutionService.html",[147,0.879,740,1.846]],["body/injectables/SolutionService.html",[3,0.481,4,0.414,9,0.414,14,2.023,19,0.414,22,0.524,23,0.04,28,1.241,30,1.29,31,0.79,32,0.481,33,0.881,40,0.894,54,1.226,55,1.624,58,0.03,59,0.03,104,2.278,147,1.375,148,1.811,150,1.375,155,1.085,160,1.375,161,0.894,163,1.51,168,1.47,173,1.629,205,1.811,220,2.278,221,2.295,667,2.888,709,2.598,710,3.801,712,3.293,716,4.007,725,2.023,740,2.888,741,4.21,742,3.026,743,4.658,744,3.675,745,4.658,746,3.675,747,4.658,748,4.658,749,4.658,750,3.675]],["title/interfaces/Student.html",[54,0.714,184,0.879]],["body/interfaces/Student.html",[3,0.533,4,0.459,9,0.459,19,0.459,20,1.069,22,0.655,23,0.039,24,1.619,32,0.533,54,1.192,58,0.032,59,0.032,161,0.954,184,1.204,186,2.009,193,1.751,401,3.943,403,3.943,407,3.943,412,3.943,413,4.593,482,2.748,751,3.357]],["title/components/StudentSolutionComponent.html",[0,0.447,53,0.879]],["body/components/StudentSolutionComponent.html",[0,0.43,1,0.404,2,0.9,3,0.179,4,0.154,5,0.606,6,0.606,7,0.606,8,0.606,9,0.154,11,0.606,12,2.005,13,2.005,15,0.998,17,0.998,19,0.253,20,0.484,22,0.549,23,0.04,24,1.114,25,1.752,26,1.581,28,1.395,30,1.117,31,0.294,32,0.179,33,0.328,34,0.606,35,0.998,36,0.998,37,0.606,38,1.474,39,0.606,40,0.759,41,0.606,42,0.404,43,0.606,44,0.404,45,0.606,46,0.404,47,0.606,48,0.404,49,1.323,50,0.606,51,0.404,52,0.606,53,0.982,54,1.047,55,1.486,56,0.606,57,0.606,58,0.015,59,0.015,90,0.606,114,0.753,115,0.753,125,3.737,132,0.753,137,0.753,145,1.579,150,0.665,155,0.665,157,1.778,158,2.061,160,0.847,161,0.551,163,1.168,166,1.037,169,1.429,180,1.395,185,1.811,190,2.733,193,1.648,194,2.301,195,0.848,203,2.279,222,1.109,223,2.028,225,2.161,251,0.967,296,3.023,302,0.848,305,1.239,306,1.778,311,2.061,314,2.301,317,1.83,318,1.579,326,0.967,329,1.395,337,1.395,338,2.96,339,0.848,340,2.628,341,2.061,342,1.778,343,0.967,344,1.413,345,1.638,346,2.151,348,1.126,350,1.126,354,0.848,355,2.564,356,1.395,357,2.059,358,0.848,359,1.239,360,1.413,361,0.674,363,1.638,373,2.362,374,2.737,388,1.126,397,1.591,416,2.061,417,2.177,420,0.967,421,1.239,422,2.028,423,0.967,424,0.967,425,2.882,426,1.83,427,2.91,428,0.967,429,0.967,430,2.061,431,1.83,432,0.848,433,0.848,434,0.967,435,0.967,436,2.35,437,2.707,438,0.967,439,0.967,443,0.753,444,1.239,445,0.848,446,2.598,447,1.591,460,0.967,461,1.126,467,0.967,471,2.451,474,1.778,479,1.395,481,0.967,483,2.061,500,0.967,501,1.948,533,2.061,537,0.967,538,1.126,547,1.591,558,1.126,612,3.026,613,2.362,614,2.362,615,2.362,619,1.126,620,3.771,621,2.795,622,0.967,629,1.126,630,1.853,631,1.126,632,0.967,633,1.853,635,2.362,636,1.126,637,1.591,638,1.126,639,1.126,640,2.028,641,2.737,642,1.126,643,1.126,644,1.126,645,1.126,646,1.853,647,1.126,648,1.853,649,1.853,650,2.362,651,1.853,652,1.126,653,1.126,654,1.126,655,1.126,666,1.591,688,2.061,703,1.591,724,0.967,725,0.753,733,1.126,737,2.737,738,3.026,739,2.737,740,2.591,752,4.353,753,1.126,754,2.869,755,2.251,756,2.869,757,2.869,758,2.869,759,3.325,760,2.251,761,2.251,762,2.869,763,3.325,764,1.368,765,1.368,766,1.368,767,1.368,768,2.251,769,1.368,770,1.368,771,1.368,772,1.368,773,1.368,774,2.251,775,2.251,776,2.251,777,2.251,778,2.251,779,2.251,780,1.368,781,1.368,782,1.368,783,1.368,784,1.368,785,1.368,786,1.368,787,1.368,788,1.368,789,1.368,790,1.368,791,1.368,792,1.368,793,1.368,794,2.251,795,1.368,796,1.368,797,1.368,798,2.251,799,1.368,800,1.368,801,1.368,802,1.368,803,2.251,804,1.368,805,2.251,806,1.368,807,1.368,808,1.368,809,1.368,810,1.368,811,1.368,812,1.368,813,1.368,814,1.368,815,2.251,816,2.251,817,2.251,818,2.251,819,2.251,820,1.368,821,1.368,822,1.368,823,2.251,824,1.368,825,1.368,826,1.368,827,1.368,828,1.368,829,1.368]],["title/interfaces/Teacher.html",[184,0.879,325,1.467]],["body/interfaces/Teacher.html",[3,0.541,4,0.465,9,0.465,19,0.465,20,1.078,22,0.646,23,0.039,24,1.622,32,0.541,58,0.032,59,0.032,161,0.962,184,1.221,186,2.037,193,1.762,325,2.469,401,3.962,403,3.962,405,4.614,407,3.962,482,2.761,830,3.403]],["title/injectables/UserService.html",[147,0.879,313,1.467]],["body/injectables/UserService.html",[3,0.311,4,0.268,9,0.268,14,1.308,19,0.268,20,0.744,22,0.578,23,0.04,24,1.428,28,1.367,30,1.142,31,0.511,32,0.311,33,0.57,40,0.954,54,1.433,58,0.022,59,0.022,104,1.473,118,2.529,147,1.022,148,1.171,150,1.022,155,0.702,160,1.468,161,0.954,163,1.663,166,0.859,168,0.95,171,2.529,173,1.986,205,2.346,207,3.359,220,1.473,221,2.749,252,2.848,313,1.704,325,2.967,347,3.85,369,2.848,370,2.848,402,1.956,404,1.956,406,1.956,412,4.13,667,3.421,709,1.68,710,3.168,712,2.445,715,3.689,716,4.163,724,1.68,725,1.308,831,1.956,832,5.633,833,3.46,834,3.46,835,3.46,836,2.376,837,3.46,838,2.376,839,4.08,840,3.46,841,2.376,842,3.46,843,2.376,844,4.481,845,3.46,846,2.376,847,3.46,848,2.376,849,3.46,850,4.481,851,4.08,852,4.08,853,2.376,854,3.46,855,3.46,856,2.376,857,2.376,858,2.376,859,2.376,860,2.376,861,2.376,862,2.376]],["title/coverage.html",[863,3.339]],["body/coverage.html",[0,0.844,1,0.984,9,0.375,10,2.744,22,0.375,23,0.04,42,0.984,44,0.984,46,0.984,48,0.984,49,0.888,51,0.984,53,0.984,54,0.799,55,1.165,58,0.028,59,0.028,68,1.333,99,2.356,105,2.356,125,2.356,147,1.589,149,2.744,184,1.589,185,1.642,187,3.091,188,2.744,194,1.835,195,2.066,196,2.744,222,1.642,225,2.683,304,2.744,313,1.642,325,1.642,364,2.744,447,2.356,448,2.744,480,2.744,486,3.026,487,2.744,501,1.642,622,2.356,656,2.744,705,2.744,736,2.744,740,2.066,741,2.744,742,2.744,751,2.744,752,2.744,753,2.744,830,2.744,831,2.744,863,2.744,864,2.744,865,3.333,866,3.333,867,3.333,868,4.373,869,3.333,870,3.333,871,3.333,872,3.333,873,3.333,874,3.333,875,3.333,876,3.333,877,3.333,878,3.333,879,3.333,880,3.333,881,3.333,882,4.373,883,3.333,884,3.333,885,3.333,886,4.547,887,5.629,888,2.744,889,5.629,890,2.744,891,2.744,892,2.744,893,2.744,894,2.744,895,2.744,896,2.744,897,3.333,898,3.333]],["title/dependencies.html",[63,2.219,899,1.76]],["body/dependencies.html",[23,0.04,31,0.904,58,0.033,59,0.033,63,2.605,79,4.166,80,3.577,90,1.862,110,3.459,112,3.459,118,3.137,119,2.605,211,3.459,725,2.313,900,4.202,901,5.975,902,4.202,903,4.166,904,4.202,905,4.202,906,4.202,907,4.202,908,4.202,909,4.202,910,4.202,911,4.202,912,4.202,913,4.202,914,4.202,915,4.202]],["title/index.html",[19,0.28,916,2.49,917,2.49]],["body/index.html",[0,0.762,4,0.408,23,0.03,27,2.561,40,0.696,58,0.03,59,0.03,71,1.994,119,3.149,203,2.246,222,1.785,233,2.983,234,4.182,243,3.8,251,2.561,305,1.994,411,2.983,440,2.796,443,1.994,679,3.8,864,4.182,899,2.561,903,2.983,918,4.616,919,3.623,920,5.08,921,2.983,922,3.623,923,4.616,924,5.912,925,5.648,926,4.616,927,5.524,928,3.623,929,3.623,930,3.623,931,3.623,932,3.623,933,3.623,934,3.623,935,3.623,936,3.623,937,3.623,938,5.08,939,3.623,940,5.524,941,3.623,942,3.623,943,3.623,944,3.623,945,4.616,946,4.616,947,5.349,948,3.623,949,3.623,950,3.623,951,3.623,952,5.648,953,3.623,954,3.623,955,3.623,956,4.616,957,3.623,958,3.623,959,3.623,960,3.623,961,5.08,962,3.623,963,3.623,964,2.561,965,3.623]],["title/modules.html",[62,2.867]],["body/modules.html",[23,0.035,58,0.035,59,0.035,61,2.936,62,3.348,80,3.348,966,4.736,967,4.736,968,4.736]],["title/overview.html",[964,2.867]],["body/overview.html",[1,1.731,2,1.598,23,0.039,42,1.568,44,1.568,46,1.568,48,1.568,51,1.568,53,1.568,58,0.032,59,0.032,60,3.289,61,3.823,63,3.042,64,3.289,65,3.289,66,3.289,67,3.289,68,2.124,69,4.04,70,3.289,71,2.199,148,1.968,186,1.968,225,1.771,478,2.701,533,2.477,964,2.824,969,3.995]],["title/properties.html",[20,0.77,899,1.76]],["body/properties.html",[20,1.024,23,0.037,58,0.035,59,0.035,921,3.92,970,4.761]],["title/routes.html",[89,2.867]],["body/routes.html",[23,0.035,58,0.035,59,0.035,89,3.393]],["title/miscellaneous/variables.html",[971,2.05,972,2.946]],["body/miscellaneous/variables.html",[19,0.409,22,0.622,23,0.04,25,2.545,26,2.296,40,0.887,58,0.03,59,0.03,179,3.267,190,2.544,206,2.865,237,2.989,478,2.544,482,2.277,485,3.267,533,2.865,632,3.267,637,3.784,706,2.989,707,2.989,886,2.989,888,4.186,890,4.186,891,4.407,892,3.805,893,4.186,894,3.805,895,2.989,896,3.805,971,2.989,972,2.989,973,5.651,974,3.63,975,3.63,976,5.353,977,3.63,978,5.353,979,4.622,980,5.085,981,4.622,982,3.63,983,3.63,984,3.63,985,3.63]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":225,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":970,"title":{},"body":{"properties.html":{}}}],["0.12.0",{"_index":915,"title":{},"body":{"dependencies.html":{}}}],["0.26",{"_index":439,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["0/1",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":872,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":883,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":873,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":871,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":869,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":868,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":882,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":879,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":620,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["1",{"_index":533,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.1em",{"_index":472,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["1.6.8",{"_index":911,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":881,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":640,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["100",{"_index":339,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["100px",{"_index":823,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["10em",{"_index":623,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["10px",{"_index":621,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["12px",{"_index":631,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["13.0.0",{"_index":907,"title":{},"body":{"dependencies.html":{}}}],["14px",{"_index":428,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["15",{"_index":874,"title":{},"body":{"coverage.html":{}}}],["15.1.0",{"_index":901,"title":{},"body":{"dependencies.html":{}}}],["15.1.5",{"_index":903,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["15px",{"_index":615,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["1].complexity",{"_index":271,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["2",{"_index":637,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":913,"title":{},"body":{"dependencies.html":{}}}],["2.5",{"_index":646,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["2/4",{"_index":870,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":351,"title":{},"body":{"components/HomepageComponent.html":{},"components/ProblemCreationComponent.html":{}}}],["20.0.5",{"_index":909,"title":{},"body":{"dependencies.html":{}}}],["2000",{"_index":547,"title":{},"body":{"components/ProblemCreationComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["20px",{"_index":420,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["24px",{"_index":635,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["25px",{"_index":463,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2em",{"_index":465,"title":{},"body":{"components/NavbarComponent.html":{}}}],["2px",{"_index":436,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["3",{"_index":418,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["3/20",{"_index":875,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":878,"title":{},"body":{"coverage.html":{}}}],["3/8",{"_index":877,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":634,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["30px",{"_index":356,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["33",{"_index":880,"title":{},"body":{"coverage.html":{}}}],["37",{"_index":876,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":427,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["4",{"_index":632,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"miscellaneous/variables.html":{}}}],["4000",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["40px",{"_index":358,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["42px",{"_index":829,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["49494b",{"_index":359,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["4em",{"_index":466,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4px",{"_index":479,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["5",{"_index":478,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":447,"title":{},"body":{"components/LoginComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["50px",{"_index":462,"title":{},"body":{"components/NavbarComponent.html":{}}}],["5px",{"_index":437,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["6/8",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":622,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["6px",{"_index":421,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["7",{"_index":969,"title":{},"body":{"overview.html":{}}}],["7.8.0",{"_index":910,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":884,"title":{},"body":{"coverage.html":{}}}],["88px",{"_index":424,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["8px",{"_index":422,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["90",{"_index":638,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["_snackbar",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{},"components/ProblemCreationComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["a.begline",{"_index":813,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["absolute",{"_index":822,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["account",{"_index":441,"title":{},"body":{"components/LoginComponent.html":{}}}],["activatedroute",{"_index":374,"title":{},"body":{"components/LoginComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["actual_component",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["add",{"_index":411,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["added",{"_index":839,"title":{},"body":{"injectables/UserService.html":{}}}],["addproblem",{"_index":706,"title":{},"body":{"injectables/ProblemService.html":{},"miscellaneous/variables.html":{}}}],["addproblem(problem",{"_index":713,"title":{},"body":{"injectables/ProblemService.html":{}}}],["addsolution",{"_index":743,"title":{},"body":{"injectables/SolutionService.html":{}}}],["addsolution(solution",{"_index":745,"title":{},"body":{"injectables/SolutionService.html":{}}}],["addstudent",{"_index":369,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["addstudent(student",{"_index":837,"title":{},"body":{"injectables/UserService.html":{}}}],["addstudent(userdetails",{"_index":376,"title":{},"body":{"components/LoginComponent.html":{}}}],["addteacher",{"_index":370,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["addteacher(teacher",{"_index":840,"title":{},"body":{"injectables/UserService.html":{}}}],["addteacher(userdetails",{"_index":378,"title":{},"body":{"components/LoginComponent.html":{}}}],["align",{"_index":417,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["allproblems",{"_index":659,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["angular",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":900,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":902,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":904,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":905,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/menu",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ProblemCreationComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["angular/material/table",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"dependencies.html":{}}}],["annotations",{"_index":636,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["annotations:nth",{"_index":648,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["another",{"_index":265,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["answer",{"_index":828,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["app.component",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app_initializer",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["app_routes",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appinit",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":932,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":61,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":681,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["array(problem.complexity.length).fill",{"_index":799,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["artifacts",{"_index":941,"title":{},"body":{"index.html":{}}}],["auth",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.service",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["authguard",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["authservice",{"_index":68,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":352,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{}}}],["autofill",{"_index":515,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["automatically",{"_index":933,"title":{},"body":{"index.html":{}}}],["b.begline",{"_index":812,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["b7fff8",{"_index":776,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["b8b7ff",{"_index":777,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["back",{"_index":819,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["backend",{"_index":667,"title":{},"body":{"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["background",{"_index":345,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["bar",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/ProblemCreationComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["based",{"_index":685,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["bd8c7d",{"_index":444,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["begline",{"_index":189,"title":{},"body":{"interfaces/Block.html":{}}}],["being",{"_index":207,"title":{},"body":{"injectables/ComplexityParserService.html":{},"injectables/UserService.html":{}}}],["belong",{"_index":240,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["between",{"_index":461,"title":{},"body":{"components/NavbarComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["block",{"_index":185,"title":{"interfaces/Block.html":{}},"body":{"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["block.complexity",{"_index":604,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["blockcolors",{"_index":756,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["blockdepth",{"_index":224,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["blocklist",{"_index":223,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["blocklist.foreach((block",{"_index":600,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["blocklist.length",{"_index":269,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["blocklist[blockdepth",{"_index":262,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["blocklist[i",{"_index":270,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["blocks",{"_index":204,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["blocks's",{"_index":272,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["blur",{"_index":570,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["bold",{"_index":643,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["boolean",{"_index":317,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["border",{"_index":425,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["box",{"_index":434,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["brace",{"_index":254,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["braces",{"_index":238,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["break",{"_index":626,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["browse",{"_index":968,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":940,"title":{},"body":{"index.html":{}}}],["button",{"_index":354,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["calculatescore",{"_index":759,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["canactivate",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["capabilities",{"_index":959,"title":{},"body":{"index.html":{}}}],["catch",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["center",{"_index":344,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["change",{"_index":935,"title":{},"body":{"index.html":{}}}],["character",{"_index":567,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["characters",{"_index":292,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["check",{"_index":251,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/StudentSolutionComponent.html":{},"index.html":{}}}],["checked",{"_index":674,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["checks",{"_index":670,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["child(1n",{"_index":649,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["child(2",{"_index":651,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["child(n",{"_index":652,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["choice",{"_index":955,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["cli",{"_index":920,"title":{},"body":{"index.html":{}}}],["closecur",{"_index":257,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["closedowhile",{"_index":258,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["closing",{"_index":253,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["cloud_upload",{"_index":608,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["cluster_appmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":203,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"index.html":{}}}],["code:focus",{"_index":628,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["codeinput",{"_index":490,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["color",{"_index":346,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["column",{"_index":639,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["command",{"_index":956,"title":{},"body":{"index.html":{}}}],["comment",{"_index":297,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["complexiity",{"_index":525,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["complexities",{"_index":268,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["complexity",{"_index":190,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"miscellaneous/variables.html":{}}}],["complexityanswer",{"_index":737,"title":{},"body":{"interfaces/Solution.html":{},"components/StudentSolutionComponent.html":{}}}],["complexityparserservice",{"_index":194,"title":{"injectables/ComplexityParserService.html":{}},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["compodoc",{"_index":950,"title":{},"body":{"index.html":{}}}],["compodocs",{"_index":951,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"index.html":{}}}],["component/student",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"overview.html":{}}}],["configure",{"_index":218,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["configures",{"_index":213,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["consolas,\"courier",{"_index":647,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["console.log(\"unable",{"_index":410,"title":{},"body":{"components/LoginComponent.html":{}}}],["console.log(blocklist",{"_index":275,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["console.log(stack",{"_index":249,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["console.log(userdetails",{"_index":400,"title":{},"body":{"components/LoginComponent.html":{}}}],["const",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["constant",{"_index":522,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["constructor",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":312,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["constructor(http",{"_index":709,"title":{},"body":{"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["constructor(keycloakservice",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(private",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["constructor(problemservice",{"_index":500,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["content",{"_index":337,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["contenteditable",{"_index":568,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["continue",{"_index":250,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["correctanswer",{"_index":824,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["coverage",{"_index":863,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":440,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"injectables/ProblemService.html":{},"index.html":{}}}],["created",{"_index":732,"title":{},"body":{"injectables/ProblemService.html":{}}}],["createdproblem",{"_index":587,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{}}}],["creation'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["creation.component",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["creation.component.css",{"_index":488,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.html",{"_index":489,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts",{"_index":487,"title":{},"body":{"components/ProblemCreationComponent.html":{},"coverage.html":{}}}],["creation.component.ts:101",{"_index":508,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:115",{"_index":514,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:138",{"_index":520,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:14",{"_index":534,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:15",{"_index":535,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:151",{"_index":504,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:16",{"_index":531,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:17",{"_index":529,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:18",{"_index":530,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:19",{"_index":532,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:20",{"_index":536,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:21",{"_index":502,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:25",{"_index":507,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:38",{"_index":513,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:53",{"_index":506,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:61",{"_index":527,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:67",{"_index":510,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation.component.ts:82",{"_index":528,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["creation/problem",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"components/ProblemCreationComponent.html":{},"coverage.html":{}}}],["ctx",{"_index":280,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["ctx.accept(\"closecur",{"_index":290,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["ctx.accept(\"closedowhile",{"_index":289,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["ctx.accept(\"loop",{"_index":282,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["ctx.accept(\"opencur",{"_index":287,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["ctx.ignore",{"_index":299,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["curly",{"_index":285,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["current",{"_index":252,"title":{},"body":{"injectables/ComplexityParserService.html":{},"injectables/UserService.html":{}}}],["currentscore",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currtoken.line",{"_index":274,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["currtoken?.type",{"_index":256,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["cursor",{"_index":432,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["d0ffb7",{"_index":775,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["d1bfa7",{"_index":363,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["data",{"_index":693,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["declarations",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["decoration:none",{"_index":429,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["decrease",{"_index":259,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":63,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deps",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["depth",{"_index":191,"title":{},"body":{"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{}}}],["description",{"_index":205,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["details",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["dev",{"_index":929,"title":{},"body":{"index.html":{}}}],["development",{"_index":922,"title":{},"body":{"index.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["directives",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":939,"title":{},"body":{"index.html":{}}}],["directory",{"_index":944,"title":{},"body":{"index.html":{}}}],["display",{"_index":341,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["dist",{"_index":943,"title":{},"body":{"index.html":{}}}],["div",{"_index":569,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["document.createtextnode(tabnodevalue",{"_index":579,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["document.getselection",{"_index":573,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["documentation",{"_index":864,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["don't",{"_index":239,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["duration",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"components/ProblemCreationComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["dynamic",{"_index":906,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{}}}],["e2e",{"_index":953,"title":{},"body":{"index.html":{}}}],["e6ffe6",{"_index":825,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["email",{"_index":412,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Student.html":{},"injectables/UserService.html":{}}}],["encounter",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["end",{"_index":952,"title":{},"body":{"index.html":{}}}],["endline",{"_index":192,"title":{},"body":{"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{}}}],["enrolled_classes",{"_index":413,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Student.html":{}}}],["enter",{"_index":607,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["entry",{"_index":616,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["equivalent",{"_index":505,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["error",{"_index":397,"title":{},"body":{"components/LoginComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["event",{"_index":511,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["event.preventdefault",{"_index":571,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["event.target.files[0",{"_index":549,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["event.target.innertext",{"_index":562,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["execute",{"_index":243,"title":{},"body":{"injectables/ComplexityParserService.html":{},"index.html":{}}}],["exponential",{"_index":605,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{}}}],["false",{"_index":318,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["family",{"_index":467,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["fbfaf7",{"_index":629,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["feffb7",{"_index":774,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["fetch",{"_index":804,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["ffb7bd",{"_index":779,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["ffb7f5",{"_index":778,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["ffe6e6",{"_index":827,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["field",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{}}}],["fields",{"_index":419,"title":{},"body":{"components/LoginComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["file','x",{"_index":546,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["file:file",{"_index":548,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["filecontent",{"_index":553,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["filecontent.split(/[\\r\\n",{"_index":555,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["filereader",{"_index":551,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["files",{"_index":936,"title":{},"body":{"index.html":{}}}],["filter",{"_index":684,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["find",{"_index":518,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["firefox",{"_index":476,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["first",{"_index":957,"title":{},"body":{"index.html":{}}}],["first_name",{"_index":401,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Student.html":{},"interfaces/Teacher.html":{}}}],["firstname",{"_index":857,"title":{},"body":{"injectables/UserService.html":{}}}],["fit",{"_index":353,"title":{},"body":{"components/HomepageComponent.html":{}}}],["flex",{"_index":342,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["font",{"_index":360,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["for(let",{"_index":811,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["form",{"_index":446,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["formatcomplexity",{"_index":491,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["formatcomplexity(complexity",{"_index":503,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["formcomplete",{"_index":492,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["formed",{"_index":261,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["formsmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":960,"title":{},"body":{"index.html":{}}}],["generate",{"_index":938,"title":{},"body":{"index.html":{}}}],["generated",{"_index":919,"title":{},"body":{"index.html":{}}}],["getallproblems",{"_index":707,"title":{},"body":{"injectables/ProblemService.html":{},"miscellaneous/variables.html":{}}}],["getlinecolor",{"_index":760,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["getlinecolor(linenum",{"_index":766,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["getloggeduser",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{}}}],["getproblembyid",{"_index":708,"title":{},"body":{"injectables/ProblemService.html":{}}}],["getproblembyid(problemid",{"_index":719,"title":{},"body":{"injectables/ProblemService.html":{}}}],["getproblembyid(problemid:number",{"_index":734,"title":{},"body":{"injectables/ProblemService.html":{}}}],["getroles",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{}}}],["gets",{"_index":844,"title":{},"body":{"injectables/UserService.html":{}}}],["getsourcecodefromtextinput",{"_index":493,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["getstudentbyemail",{"_index":833,"title":{},"body":{"injectables/UserService.html":{}}}],["getstudentbyemail(email",{"_index":842,"title":{},"body":{"injectables/UserService.html":{}}}],["getteacherbyemail",{"_index":834,"title":{},"body":{"injectables/UserService.html":{}}}],["getteacherbyemail(email",{"_index":845,"title":{},"body":{"injectables/UserService.html":{}}}],["getting",{"_index":916,"title":{"index.html":{}},"body":{}}],["gettotalscore",{"_index":494,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["go",{"_index":963,"title":{},"body":{"index.html":{}}}],["handlestudentlogin",{"_index":371,"title":{},"body":{"components/LoginComponent.html":{}}}],["handlestudentlogin(userdetails",{"_index":380,"title":{},"body":{"components/LoginComponent.html":{}}}],["handletab",{"_index":495,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["handletab(event",{"_index":509,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["handleteacherlogin",{"_index":372,"title":{},"body":{"components/LoginComponent.html":{}}}],["handleteacherlogin(userdetails",{"_index":382,"title":{},"body":{"components/LoginComponent.html":{}}}],["header",{"_index":820,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["headers",{"_index":278,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["height",{"_index":338,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["help",{"_index":961,"title":{},"body":{"index.html":{}}}],["hints",{"_index":481,"title":{},"body":{"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["holds",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["home",{"_index":457,"title":{},"body":{"components/NavbarComponent.html":{}}}],["homepage",{"_index":307,"title":{},"body":{"components/HomepageComponent.html":{}}}],["homepage'},{'name",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["homepage.component.css",{"_index":308,"title":{},"body":{"components/HomepageComponent.html":{}}}],["homepage.component.html",{"_index":309,"title":{},"body":{"components/HomepageComponent.html":{}}}],["homepage/homepage.component",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["homepagecomponent",{"_index":42,"title":{"components/HomepageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["http",{"_index":712,"title":{},"body":{"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":931,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":710,"title":{},"body":{"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["https://stackoverflow.com/questions/2237497/make",{"_index":563,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["icon",{"_index":464,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{}}}],["id",{"_index":482,"title":{},"body":{"interfaces/Problem.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"interfaces/Student.html":{},"interfaces/Teacher.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["identify",{"_index":215,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["if(!searchtext",{"_index":695,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["if(!student",{"_index":395,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(!teacher",{"_index":398,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(!this.formcomplete",{"_index":584,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["if(line",{"_index":596,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["if(problem.name.tolowercase",{"_index":699,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["if(range",{"_index":580,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["if(student",{"_index":330,"title":{},"body":{"components/HomepageComponent.html":{}}}],["if(teacher",{"_index":333,"title":{},"body":{"components/HomepageComponent.html":{}}}],["if(this.authservice.getloggeduser",{"_index":321,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{}}}],["if(this.codeinput.length",{"_index":539,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["if(this.matchessearch(searchtext",{"_index":697,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["if(this.name",{"_index":557,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["if(this.role",{"_index":391,"title":{},"body":{"components/LoginComponent.html":{}}}],["if(this.userservice.user",{"_index":323,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{}}}],["ignore",{"_index":294,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["implements",{"_index":305,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["incomplete','x",{"_index":586,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["incorrectanswer",{"_index":826,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{}}}],["information",{"_index":850,"title":{},"body":{"injectables/UserService.html":{}}}],["initialization",{"_index":677,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["initializer",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["initialstacklength",{"_index":231,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["injectable",{"_index":147,"title":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inline",{"_index":619,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["input",{"_index":633,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["input:focus",{"_index":641,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["input[type='file",{"_index":618,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["input[type=submit",{"_index":655,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["insert",{"_index":566,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["inside",{"_index":264,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["int",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":184,"title":{"interfaces/Block.html":{},"interfaces/Problem.html":{},"interfaces/Solution.html":{},"interfaces/Student.html":{},"interfaces/Teacher.html":{}},"body":{"interfaces/Block.html":{},"interfaces/Problem.html":{},"interfaces/Solution.html":{},"interfaces/Student.html":{},"interfaces/Teacher.html":{},"coverage.html":{}}}],["interfaces",{"_index":186,"title":{},"body":{"interfaces/Block.html":{},"interfaces/Problem.html":{},"interfaces/Solution.html":{},"interfaces/Student.html":{},"interfaces/Teacher.html":{},"overview.html":{}}}],["isloading",{"_index":757,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["items",{"_index":460,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["java",{"_index":216,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["jest",{"_index":949,"title":{},"body":{"index.html":{}}}],["jest.fn",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.fn().mockreturnvalue([mockproblem1",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jest.fn().mockreturnvalue(of(mockproblemarray",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["js",{"_index":908,"title":{},"body":{"dependencies.html":{}}}],["justify",{"_index":343,"title":{},"body":{"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["keeps",{"_index":226,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["key",{"_index":565,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["keycloak",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["keycloakangularmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["keycloakservice",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["label",{"_index":630,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["larger",{"_index":362,"title":{},"body":{"components/HomepageComponent.html":{}}}],["last",{"_index":653,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["last_name",{"_index":403,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Student.html":{},"interfaces/Teacher.html":{}}}],["lastname",{"_index":858,"title":{},"body":{"injectables/UserService.html":{}}}],["left",{"_index":614,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["lexer",{"_index":217,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.input(sourcecode",{"_index":244,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.rule",{"_index":286,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.rule(/\\/\\/[^\\r\\n]*\\r?\\n",{"_index":298,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.rule(/\\}\\s*while",{"_index":288,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.rule(/do\\s",{"_index":284,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.rule(/for\\s*\\(.*\\)\\s",{"_index":279,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.rule(/while\\s*\\(.*\\)\\s",{"_index":283,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.tokens",{"_index":235,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["lexer.tokens().foreach((token",{"_index":245,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["line",{"_index":296,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["line:nth",{"_index":650,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["linear",{"_index":524,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["linecomplexitycorrect",{"_index":761,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["linecomplexitycorrect(index",{"_index":769,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["linenum",{"_index":768,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["list",{"_index":209,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{}}}],["loading",{"_index":821,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["log",{"_index":459,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logged",{"_index":855,"title":{},"body":{"injectables/UserService.html":{}}}],["loggedin",{"_index":310,"title":{},"body":{"components/HomepageComponent.html":{}}}],["login",{"_index":336,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["login.component.css",{"_index":365,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":366,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/:role",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["login/login.component",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["logincomponent",{"_index":44,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginpage",{"_index":415,"title":{},"body":{"components/LoginComponent.html":{}}}],["logout",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["loop",{"_index":277,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["loops",{"_index":241,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["margin",{"_index":355,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["mat",{"_index":445,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["matbuttonmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":281,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemSelectionComponent.html":{}}}],["matches",{"_index":672,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["matchessearch",{"_index":661,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["matchessearch(searchtext",{"_index":668,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["matching",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matformfieldmodule",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"components/ProblemCreationComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["matsnackbarmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["maxn",{"_index":599,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["mention",{"_index":523,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["menu",{"_index":456,"title":{},"body":{"components/NavbarComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["methods",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["middle",{"_index":645,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["min",{"_index":423,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["miscellaneous",{"_index":971,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mockaddproblem",{"_index":888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockmatsnackbar",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockproblem1",{"_index":890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockproblem2",{"_index":891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockproblemarray",{"_index":892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockproblemlist",{"_index":893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockproblemservice",{"_index":894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":60,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":62,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":962,"title":{},"body":{"index.html":{}}}],["multi",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["multiline",{"_index":300,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["navbar",{"_index":449,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["navbar.component.css",{"_index":450,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":451,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar/navbar.component",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["navbarcomponent",{"_index":46,"title":{"components/NavbarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":930,"title":{},"body":{"index.html":{}}}],["need",{"_index":233,"title":{},"body":{"injectables/ComplexityParserService.html":{},"index.html":{}}}],["needed",{"_index":475,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["nested",{"_index":228,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["new",{"_index":222,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":329,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["ng",{"_index":925,"title":{},"body":{"index.html":{}}}],["ngcomponentoutlet",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":311,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["none",{"_index":430,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["now",{"_index":260,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["npm",{"_index":927,"title":{},"body":{"index.html":{}}}],["number",{"_index":193,"title":{},"body":{"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{}}}],["o(1",{"_index":610,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["o(c",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["o(n",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":716,"title":{},"body":{"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["onfileselected",{"_index":496,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["onfileselected(event",{"_index":512,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["oninit",{"_index":306,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["opacity",{"_index":477,"title":{},"body":{"components/NavbarComponent.html":{}}}],["open",{"_index":237,"title":{},"body":{"injectables/ComplexityParserService.html":{},"miscellaneous/variables.html":{}}}],["opencurcount",{"_index":236,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["optional",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{}}}],["out",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/NavbarComponent.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":431,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["overall",{"_index":612,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["overallcomplexity",{"_index":483,"title":{},"body":{"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"interfaces/Solution.html":{},"components/StudentSolutionComponent.html":{}}}],["overallcomplexitycorrect",{"_index":762,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["overview",{"_index":964,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":899,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":357,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["page",{"_index":443,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"index.html":{}}}],["panel",{"_index":517,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["param",{"_index":221,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["parammap",{"_index":790,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["params['id",{"_index":795,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["params['role",{"_index":390,"title":{},"body":{"components/LoginComponent.html":{}}}],["parse",{"_index":197,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{}}}],["parse(sourcecode",{"_index":200,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["parsed",{"_index":208,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["parser",{"_index":214,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["parser.service",{"_index":538,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["parser.service.ts",{"_index":196,"title":{},"body":{"injectables/ComplexityParserService.html":{},"coverage.html":{}}}],["parser.service.ts:109",{"_index":212,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["parser.service.ts:17",{"_index":201,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["parser.service.ts:8",{"_index":199,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["parser/block",{"_index":792,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["parser/block.ts",{"_index":188,"title":{},"body":{"interfaces/Block.html":{},"coverage.html":{}}}],["parser/complexity",{"_index":195,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["parserconfiguration",{"_index":198,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["parserconfiguration(lexer",{"_index":210,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["parses",{"_index":202,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{}}}],["password_hash",{"_index":407,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Student.html":{},"interfaces/Teacher.html":{}}}],["path",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["placeholder",{"_index":408,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["platform",{"_index":954,"title":{},"body":{"index.html":{}}}],["pointer",{"_index":433,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["position",{"_index":348,"title":{},"body":{"components/HomepageComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["post",{"_index":748,"title":{},"body":{"injectables/SolutionService.html":{}}}],["posts",{"_index":715,"title":{},"body":{"injectables/ProblemService.html":{},"injectables/UserService.html":{}}}],["pre",{"_index":627,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["previous",{"_index":267,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["private",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["problem",{"_index":49,"title":{"interfaces/Problem.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["problem','x",{"_index":733,"title":{},"body":{"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["problem).pipe",{"_index":730,"title":{},"body":{"injectables/ProblemService.html":{}}}],["problem.complexity[i",{"_index":816,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["problem.name",{"_index":703,"title":{},"body":{"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["problem.name.tolowercase().includes(searchtext.tolowercase",{"_index":701,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["problem.overallcomplexity",{"_index":818,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["problem.sourcecode[i",{"_index":817,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["problem1",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problem2",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["problemcreationcomponent",{"_index":48,"title":{"components/ProblemCreationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["problemid",{"_index":688,"title":{},"body":{"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"components/StudentSolutionComponent.html":{}}}],["problems",{"_index":666,"title":{},"body":{"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{}}}],["problems','x",{"_index":728,"title":{},"body":{"injectables/ProblemService.html":{}}}],["problemselectioncomponent",{"_index":51,"title":{"components/ProblemSelectionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["problemservice",{"_index":501,"title":{"injectables/ProblemService.html":{}},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["project",{"_index":918,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Block.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"interfaces/Solution.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":220,"title":{},"body":{"injectables/ComplexityParserService.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["radius",{"_index":426,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["radius:0px",{"_index":654,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["range",{"_index":574,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["range.insertnode(tabnode",{"_index":581,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["range.setendafter(tabnode",{"_index":583,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["range.setstartafter(tabnode",{"_index":582,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["reader",{"_index":550,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["reader.onload",{"_index":552,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["reader.readastext(file",{"_index":556,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["reader.result",{"_index":554,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["receives",{"_index":723,"title":{},"body":{"injectables/ProblemService.html":{}}}],["redirecttoprofile",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{}}}],["reference",{"_index":965,"title":{},"body":{"index.html":{}}}],["relative",{"_index":349,"title":{},"body":{"components/HomepageComponent.html":{}}}],["reload",{"_index":934,"title":{},"body":{"index.html":{}}}],["request",{"_index":749,"title":{},"body":{"injectables/SolutionService.html":{}}}],["reset",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resize",{"_index":617,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["results",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrevied",{"_index":678,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["retrieve",{"_index":722,"title":{},"body":{"injectables/ProblemService.html":{}}}],["retrieves",{"_index":718,"title":{},"body":{"injectables/ProblemService.html":{}}}],["return",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["rgba(0",{"_index":438,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["role",{"_index":347,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["roman",{"_index":469,"title":{},"body":{"components/NavbarComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ComplexityParserService.html":{},"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["rootblock",{"_index":229,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["rootblock].depth",{"_index":263,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["rootblock].endline",{"_index":273,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["route",{"_index":373,"title":{},"body":{"components/LoginComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["router",{"_index":314,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["routermodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(app_routes",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["routes",{"_index":89,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"routes.html":{}}}],["rules",{"_index":276,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["run",{"_index":924,"title":{},"body":{"index.html":{}}}],["running",{"_index":945,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":725,"title":{},"body":{"injectables/ProblemService.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["scaffolding",{"_index":937,"title":{},"body":{"index.html":{}}}],["score",{"_index":738,"title":{},"body":{"interfaces/Solution.html":{},"components/StudentSolutionComponent.html":{}}}],["score}}/{{problem.totalscore",{"_index":815,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["search",{"_index":458,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["search:focus",{"_index":473,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["searchproblems",{"_index":662,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["searchproblems(searchtext",{"_index":682,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["searchtext",{"_index":673,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["searchtext.tolowercase",{"_index":700,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["searchvalue.value",{"_index":704,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["see",{"_index":675,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["sel",{"_index":572,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["sel?.getrangeat(0",{"_index":575,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["selectedproblems",{"_index":660,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["selection'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["selection.component",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["selection.component.css",{"_index":657,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection.component.html",{"_index":658,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection.component.ts",{"_index":656,"title":{},"body":{"components/ProblemSelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:11",{"_index":664,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection.component.ts:18",{"_index":689,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection.component.ts:19",{"_index":690,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection.component.ts:25",{"_index":676,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection.component.ts:36",{"_index":683,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection.component.ts:56",{"_index":669,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection.component.ts:65",{"_index":687,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selection/problem",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"components/ProblemSelectionComponent.html":{},"coverage.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["selectproblem",{"_index":663,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["selectproblem(problemid",{"_index":686,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["sends",{"_index":747,"title":{},"body":{"injectables/SolutionService.html":{}}}],["serif",{"_index":470,"title":{},"body":{"components/NavbarComponent.html":{}}}],["serve",{"_index":926,"title":{},"body":{"index.html":{}}}],["server",{"_index":923,"title":{},"body":{"index.html":{}}}],["service/problem.service",{"_index":537,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["service/problem.service.ts",{"_index":705,"title":{},"body":{"injectables/ProblemService.html":{},"coverage.html":{}}}],["service/problem.service.ts:10",{"_index":711,"title":{},"body":{"injectables/ProblemService.html":{}}}],["service/problem.service.ts:19",{"_index":717,"title":{},"body":{"injectables/ProblemService.html":{}}}],["service/problem.service.ts:34",{"_index":714,"title":{},"body":{"injectables/ProblemService.html":{}}}],["service/problem.service.ts:50",{"_index":720,"title":{},"body":{"injectables/ProblemService.html":{}}}],["service/solution.service",{"_index":791,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["service/solution.service.ts",{"_index":742,"title":{},"body":{"injectables/SolutionService.html":{},"coverage.html":{}}}],["service/solution.service.ts:18",{"_index":746,"title":{},"body":{"injectables/SolutionService.html":{}}}],["service/solution.service.ts:9",{"_index":744,"title":{},"body":{"injectables/SolutionService.html":{}}}],["set",{"_index":680,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["setalltoconstant",{"_index":497,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["setcodeinput",{"_index":498,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["setcodeinput(event",{"_index":526,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["setid",{"_index":484,"title":{},"body":{"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{}}}],["sets",{"_index":521,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["shadow",{"_index":435,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["showresults",{"_index":758,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["single",{"_index":295,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["size",{"_index":361,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["solid",{"_index":471,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["solution",{"_index":55,"title":{"interfaces/Solution.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["solution','x",{"_index":810,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["solution.component.css",{"_index":754,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.html",{"_index":755,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts",{"_index":753,"title":{},"body":{"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["solution.component.ts:17",{"_index":764,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:25",{"_index":788,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:26",{"_index":785,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:27",{"_index":789,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:28",{"_index":786,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:29",{"_index":782,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:30",{"_index":784,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:31",{"_index":787,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:32",{"_index":781,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:33",{"_index":780,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:35",{"_index":783,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:37",{"_index":771,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:58",{"_index":773,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:77",{"_index":765,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:91",{"_index":772,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:95",{"_index":770,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution.component.ts:99",{"_index":767,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["solution/:id",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["solutionservice",{"_index":740,"title":{"injectables/SolutionService.html":{}},"body":{"injectables/SolutionService.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"index.html":{}}}],["sourcecode",{"_index":206,"title":{},"body":{"injectables/ComplexityParserService.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"miscellaneous/variables.html":{}}}],["sourcecode[i",{"_index":611,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["space",{"_index":302,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["specified",{"_index":721,"title":{},"body":{"injectables/ProblemService.html":{}}}],["specifying",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["spinner",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../problem.service.mock.ts",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../snack.bar.mock.ts",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth.service.ts",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/auth.service.ts:19",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:24",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:28",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:6",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/auth.service.ts:9",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/complexity",{"_index":187,"title":{},"body":{"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"coverage.html":{}}}],["src/app/homepage/homepage.component.ts",{"_index":304,"title":{},"body":{"components/HomepageComponent.html":{},"coverage.html":{}}}],["src/app/homepage/homepage.component.ts:11",{"_index":315,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/homepage/homepage.component.ts:13",{"_index":319,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/homepage/homepage.component.ts:15",{"_index":316,"title":{},"body":{"components/HomepageComponent.html":{}}}],["src/app/login/login.component.ts",{"_index":364,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:13",{"_index":375,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:20",{"_index":387,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:21",{"_index":386,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:22",{"_index":385,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:24",{"_index":384,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:47",{"_index":381,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:64",{"_index":383,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:82",{"_index":379,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:98",{"_index":377,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/navbar/navbar.component.ts",{"_index":448,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/navbar/navbar.component.ts:10",{"_index":452,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/navbar/navbar.component.ts:13",{"_index":453,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/problem",{"_index":486,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"coverage.html":{}}}],["src/app/problem.ts",{"_index":480,"title":{},"body":{"interfaces/Problem.html":{},"coverage.html":{}}}],["src/app/solution",{"_index":741,"title":{},"body":{"injectables/SolutionService.html":{},"coverage.html":{}}}],["src/app/solution.ts",{"_index":736,"title":{},"body":{"interfaces/Solution.html":{},"coverage.html":{}}}],["src/app/student",{"_index":752,"title":{},"body":{"components/StudentSolutionComponent.html":{},"coverage.html":{}}}],["src/app/student.ts",{"_index":751,"title":{},"body":{"interfaces/Student.html":{},"coverage.html":{}}}],["src/app/teacher.ts",{"_index":830,"title":{},"body":{"interfaces/Teacher.html":{},"coverage.html":{}}}],["src/app/user.service.ts",{"_index":831,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/user.service.ts:10",{"_index":836,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:16",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:23",{"_index":848,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:37",{"_index":841,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:46",{"_index":846,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:55",{"_index":843,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user.service.ts:64",{"_index":838,"title":{},"body":{"injectables/UserService.html":{}}}],["src/mocks/problem.service.mock.ts",{"_index":886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/mocks/snack.bar.mock.ts",{"_index":895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":232,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["stack.length",{"_index":248,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["stack.push(token",{"_index":246,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["stack.reverse",{"_index":247,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["start",{"_index":928,"title":{},"body":{"index.html":{}}}],["started",{"_index":917,"title":{"index.html":{}},"body":{}}],["statements",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["statment",{"_index":255,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["stored",{"_index":942,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/LoginComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"interfaces/Solution.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{}}}],["student",{"_index":54,"title":{"interfaces/Student.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["studentexists",{"_index":367,"title":{},"body":{"components/LoginComponent.html":{}}}],["studentid",{"_index":739,"title":{},"body":{"interfaces/Solution.html":{},"components/StudentSolutionComponent.html":{}}}],["students",{"_index":335,"title":{},"body":{"components/HomepageComponent.html":{}}}],["studentsolution",{"_index":807,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["studentsolutioncomponent",{"_index":53,"title":{"components/StudentSolutionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["style",{"_index":474,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["submit",{"_index":613,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["submitproblem",{"_index":499,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["submitsolution",{"_index":763,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["support",{"_index":966,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":967,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":442,"title":{},"body":{"components/LoginComponent.html":{}}}],["t",{"_index":577,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["t\\r\\n",{"_index":303,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["tab",{"_index":564,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["table",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["tabnode",{"_index":578,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["tabnodevalue",{"_index":576,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["tap",{"_index":724,"title":{},"body":{"injectables/ProblemService.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["teacher",{"_index":325,"title":{"interfaces/Teacher.html":{}},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["teacheremail",{"_index":405,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Teacher.html":{}}}],["teacherexists",{"_index":368,"title":{},"body":{"components/LoginComponent.html":{}}}],["teachers",{"_index":334,"title":{},"body":{"components/HomepageComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["test",{"_index":948,"title":{},"body":{"index.html":{}}}],["testing",{"_index":958,"title":{},"body":{"index.html":{}}}],["tests",{"_index":947,"title":{},"body":{"index.html":{}}}],["text",{"_index":416,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["this._snackbar.open('could",{"_index":803,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this._snackbar.open('enter",{"_index":544,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this._snackbar.open('form",{"_index":585,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this._snackbar.open('unable",{"_index":727,"title":{},"body":{"injectables/ProblemService.html":{}}}],["this._snackbar.open(`logged",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._snackbar.open(`problem",{"_index":731,"title":{},"body":{"injectables/ProblemService.html":{}}}],["this.addstudent(userdetails",{"_index":396,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.addteacher(userdetails",{"_index":399,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.allproblems",{"_index":691,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["this.allproblems.foreach((problem",{"_index":696,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["this.authservice.getloggeduser",{"_index":327,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":455,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.blocklist",{"_index":801,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.blocklist[i].begline",{"_index":814,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.calculatescore",{"_index":806,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.codeinput",{"_index":561,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.codeinput.split(/[\\r\\n",{"_index":540,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.complexity",{"_index":591,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.complexity.foreach(line",{"_index":595,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.complexity.length",{"_index":560,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.complexity.push",{"_index":542,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.complexity[block.begline",{"_index":601,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.complexityanswer",{"_index":798,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.complexityparserservice.parse(this.problem.sourcecode.join(\"\\n",{"_index":802,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.complexityparserservice.parse(this.sourcecode.join(\"\\n",{"_index":598,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.formatcomplexity(block.complexity",{"_index":602,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.formatcomplexity(maxn",{"_index":606,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.gettotalscore",{"_index":593,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.handlestudentlogin(userdetails",{"_index":394,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.handleteacherlogin(userdetails",{"_index":393,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.hints",{"_index":592,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.hints.push",{"_index":543,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.hints[block.begline",{"_index":603,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.http.get(\"http://localhost:8080/problems",{"_index":735,"title":{},"body":{"injectables/ProblemService.html":{}}}],["this.http.get(\"http://localhost:8080/problems\").pipe",{"_index":726,"title":{},"body":{"injectables/ProblemService.html":{}}}],["this.http.get(\"http://localhost:8080/students/email",{"_index":861,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(\"http://localhost:8080/teachers/email",{"_index":860,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(\"http://localhost:8080/problems",{"_index":729,"title":{},"body":{"injectables/ProblemService.html":{}}}],["this.http.post(\"http://localhost:8080/solutions",{"_index":750,"title":{},"body":{"injectables/SolutionService.html":{}}}],["this.http.post(\"http://localhost:8080/students",{"_index":862,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(\"http://localhost:8080/teachers",{"_index":859,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isloading",{"_index":800,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.keycloakservice.getkeycloakinstance().accountmanagement",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keycloakservice.getkeycloakinstance().idtokenparsed",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keycloakservice.getuserroles",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.keycloakservice.logout",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggedin",{"_index":322,"title":{},"body":{"components/HomepageComponent.html":{}}}],["this.name",{"_index":589,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.overallcomplexity",{"_index":558,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["this.parserconfiguration(lexer",{"_index":242,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["this.problem",{"_index":797,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.problemid",{"_index":794,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.problemservice",{"_index":793,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.problemservice.addproblem(createdproblem).subscribe",{"_index":594,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.problemservice.getallproblems().subscribe(data",{"_index":692,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["this.problemservice.getproblembyid(this.problemid).subscribe",{"_index":796,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.role",{"_index":389,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.route.params.subscribe(params",{"_index":388,"title":{},"body":{"components/LoginComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["this.router.navigate",{"_index":392,"title":{},"body":{"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{}}}],["this.router.navigate(['problem",{"_index":326,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["this.router.navigate(['student",{"_index":702,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["this.score",{"_index":805,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.selectedproblems",{"_index":694,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["this.selectedproblems.push(problem",{"_index":698,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["this.setalltoconstant",{"_index":597,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.setid",{"_index":588,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.showresults",{"_index":809,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.solutionservice.addsolution(studentsolution).subscribe",{"_index":808,"title":{},"body":{"components/StudentSolutionComponent.html":{}}}],["this.sourcecode",{"_index":590,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.sourcecode.length",{"_index":559,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.sourcecode.push(line",{"_index":541,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["this.user",{"_index":856,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.addstudent(student).subscribe",{"_index":414,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.addteacher(teacher).subscribe",{"_index":409,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getstudentbyemail(userdetails.email).subscribe",{"_index":328,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{}}}],["this.userservice.getteacherbyemail(userdetails.email).subscribe",{"_index":332,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{}}}],["this.userservice.updateuser(userdetails",{"_index":331,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{}}}],["this.userservice.user",{"_index":454,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.userservice.user.role",{"_index":324,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{}}}],["times",{"_index":468,"title":{},"body":{"components/NavbarComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{}}}],["token",{"_index":219,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["tokenizr",{"_index":211,"title":{},"body":{"injectables/ComplexityParserService.html":{},"dependencies.html":{}}}],["tools",{"_index":609,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["top",{"_index":350,"title":{},"body":{"components/HomepageComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["total",{"_index":519,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["totalscore",{"_index":485,"title":{},"body":{"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":227,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["true",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"components/HomepageComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["try",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["tslib",{"_index":912,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Block.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"interfaces/Problem.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"injectables/ProblemService.html":{},"interfaces/Solution.html":{},"injectables/SolutionService.html":{},"interfaces/Student.html":{},"components/StudentSolutionComponent.html":{},"interfaces/Teacher.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"components/NavbarComponent.html":{}}}],["uneeded",{"_index":291,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["unit",{"_index":946,"title":{},"body":{"index.html":{}}}],["update",{"_index":266,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["updates",{"_index":849,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser",{"_index":835,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(userdetails",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["upload",{"_index":545,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["uppermost",{"_index":230,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["use",{"_index":234,"title":{},"body":{"injectables/ComplexityParserService.html":{},"index.html":{}}}],["used",{"_index":665,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["usefactory",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":832,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":320,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{}}}],["userdetails",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["userdetails.email",{"_index":406,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["userdetails.family_name",{"_index":404,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["userdetails.given_name",{"_index":402,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserService.html":{}}}],["userservice",{"_index":313,"title":{"injectables/UserService.html":{}},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["variable",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":972,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":921,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":644,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["via",{"_index":679,"title":{},"body":{"components/ProblemSelectionComponent.html":{},"index.html":{}}}],["void",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{},"components/StudentSolutionComponent.html":{},"injectables/UserService.html":{}}}],["weight",{"_index":642,"title":{},"body":{"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["whether",{"_index":671,"title":{},"body":{"components/ProblemSelectionComponent.html":{}}}],["white",{"_index":301,"title":{},"body":{"injectables/ComplexityParserService.html":{},"components/HomepageComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/ProblemSelectionComponent.html":{}}}],["whitespace",{"_index":293,"title":{},"body":{"injectables/ComplexityParserService.html":{}}}],["width",{"_index":340,"title":{},"body":{"components/HomepageComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProblemCreationComponent.html":{},"components/StudentSolutionComponent.html":{}}}],["within",{"_index":516,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["word",{"_index":624,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["wrap",{"_index":625,"title":{},"body":{"components/ProblemCreationComponent.html":{}}}],["x",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ProblemService.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":914,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'encounter'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'encounter';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProblemCreationComponent', 'selector': 'app-problem-creation'},{'name': 'ProblemSelectionComponent', 'selector': 'app-problem-selection'},{'name': 'StudentSolutionComponent', 'selector': 'app-student-solution'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomepageComponent\n\nHomepageComponent\n\nAppModule -->\n\nHomepageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProblemCreationComponent\n\nProblemCreationComponent\n\nAppModule -->\n\nProblemCreationComponent->AppModule\n\n\n\n\n\nProblemSelectionComponent\n\nProblemSelectionComponent\n\nAppModule -->\n\nProblemSelectionComponent->AppModule\n\n\n\n\n\nStudentSolutionComponent\n\nStudentSolutionComponent\n\nAppModule -->\n\nStudentSolutionComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            HomepageComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            ProblemCreationComponent\n                        \n                        \n                            ProblemSelectionComponent\n                        \n                        \n                            StudentSolutionComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatIconModule}  from '@angular/material/icon'\nimport { RouterModule, Routes } from '@angular/router';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport { LoginComponent } from './login/login.component';\nimport { ProblemSelectionComponent } from './problem-selection/problem-selection.component';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ProblemCreationComponent } from './problem-creation/problem-creation.component';\nimport { MatTableModule } from '@angular/material/table';\nimport { FormsModule } from '@angular/forms';\nimport { NgComponentOutlet } from '@angular/common';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { KeycloakAngularModule, KeycloakService } from 'keycloak-angular';\nimport { initializer } from 'AppInit';\nimport { AuthService } from './auth.service';\nimport { AuthGuard } from 'auth';\nimport { StudentSolutionComponent } from './student-solution-component/student-solution.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n\n\nconst APP_ROUTES: Routes = [\n  {path: '', component: HomepageComponent},\n  {path: 'login/:role', component: LoginComponent, canActivate: [AuthGuard]},\n  {path: 'problem-selection', component: ProblemSelectionComponent, canActivate: [AuthGuard]},\n  {path: 'problem-creation', component: ProblemCreationComponent, canActivate: [AuthGuard]},\n  {path: 'student-solution/:id', component: StudentSolutionComponent, canActivate: [AuthGuard]}\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomepageComponent,\n    LoginComponent,\n    ProblemSelectionComponent,\n    ProblemCreationComponent,\n    StudentSolutionComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatIconModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatTableModule,\n    FormsModule,\n    NgComponentOutlet,\n    MatSnackBarModule,\n    RouterModule.forRoot(APP_ROUTES),\n    HttpClientModule,\n    KeycloakAngularModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n  ],\n  providers: [\n    KeycloakService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initializer,\n      multi: true,\n      deps: [KeycloakService]\n    },\n    AuthService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLoggedUser\n                            \n                            \n                                getRoles\n                            \n                            \n                                logout\n                            \n                            \n                                redirectToProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(keycloakService: KeycloakService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keycloakService\n                                                  \n                                                        \n                                                                    KeycloakService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoggedUser\n                        \n                    \n                \n            \n            \n                \ngetLoggedUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRoles\n                        \n                    \n                \n            \n            \n                \ngetRoles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        redirectToProfile\n                        \n                    \n                \n            \n            \n                \nredirectToProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { KeycloakService } from \"keycloak-angular\";\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Injectable()\nexport class AuthService {\n    constructor(private keycloakService: KeycloakService, private _snackBar: MatSnackBar) {}\n\n    getLoggedUser(){\n        try {\n            let userDetails = this.keycloakService.getKeycloakInstance().idTokenParsed;\n            return userDetails;\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    \n    logout() {\n        this.keycloakService.logout();\n        this._snackBar.open(`Logged out`, 'X', {duration: 4000})\n    }\n\n    redirectToProfile(){\n        this.keycloakService.getKeycloakInstance().accountManagement();\n    }\n\n    getRoles(): string[]{\n        return this.keycloakService.getUserRoles();\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Block.html":{"url":"interfaces/Block.html","title":"interface - Block","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Block\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/complexity-parser/block.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            begLine\n                                        \n                                \n                                \n                                        \n                                            complexity\n                                        \n                                \n                                \n                                        \n                                            depth\n                                        \n                                \n                                \n                                        \n                                            endLine\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        begLine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        begLine:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        complexity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complexity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        depth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        depth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        endLine\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        endLine:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Block {\n    complexity: number;\n    begLine: number;\n    endLine: number;\n    depth: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComplexityParserService.html":{"url":"injectables/ComplexityParserService.html","title":"injectable - ComplexityParserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ComplexityParserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/complexity-parser/complexity-parser.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parse\n                            \n                            \n                                    Private\n                                parserConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/complexity-parser/complexity-parser.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse(sourceCode: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/complexity-parser/complexity-parser.service.ts:17\n                \n            \n\n\n            \n                \n                    Parses the source code and returns the blocks of code.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sourceCode\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source code being parsed.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Block[]\n\n                    \n                    \n                        A list of blocks.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        parserConfiguration\n                        \n                    \n                \n            \n            \n                \n                    \n                    parserConfiguration(lexer: Tokenizr)\n                \n            \n\n\n            \n                \n                    Defined in src/app/complexity-parser/complexity-parser.service.ts:109\n                \n            \n\n\n            \n                \n                    Configures the parser to identify java code.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    lexer\n                                    \n                                            Tokenizr\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The lexer to configure.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Block } from './block';\nimport Tokenizr, { Token } from \"tokenizr\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ComplexityParserService {\n\n  constructor() { }\n\n   /**\n     * Parses the source code and returns the blocks of code.\n     * @param {string} sourceCode  The source code being parsed.\n     * @returns A list of blocks.\n     */\n  parse(sourceCode: string): Block[] {\n\n    let lexer = new Tokenizr()\n    let blockList: Block[] = []\n\n    let blockDepth: number = 0            // keeps track of the number of nested blocks\n    let rootBlock: number = 0             // keeps track of the index of the uppermost block\n    let initialStackLength: number = 0\n    let stack: Token[] = []               // I might not need this, I could just use lexer.tokens()\n    let openCurCount: number = 0          // keeps track of the open braces that don't belong to any of the loops\n\n\n    // Configure the parser\n    this.parserConfiguration(lexer);\n\n    // Execute lexer and configure stack\n    lexer.input(sourceCode)\n    lexer.tokens().forEach((token) => {\n      stack.push(token)\n    })\n    stack.reverse()\n    initialStackLength = stack.length\n\n    console.log(stack)\n\n    for (let i = 0; i  0) {\n        openCurCount--;\n        continue;\n      }\n\n      // Check if the current token is a closing brace or closing do while statment\n      if ((currToken?.type === \"closeCur\" || currToken?.type === \"closeDoWhile\") && openCurCount == 0) {\n\n        // Decrease the block depth now that a block has been formed\n        blockDepth--;\n\n        blockList[blockDepth + rootBlock].depth = blockDepth;\n\n        // Check if this block is inside another block, if so, update the previous block complexities\n        if (blockDepth > 0) {\n          for (let i = blockList.length - blockDepth; i > rootBlock; i--) {\n            blockList[i - 1].complexity++\n          }\n        }\n\n        // Update the previous blocks's endline value\n        blockList[blockDepth + rootBlock].endLine = currToken.line;\n      }\n    }\n\n    console.log(blockList);\n    return blockList\n  }\n\n  /**\n     * Configures the parser to identify java code.\n     * @param {Tokenizr} lexer The lexer to configure.\n     */\n  private parserConfiguration(lexer: Tokenizr) {\n\n    // Rules for the loop headers\n    lexer.rule(/for\\s*\\(.*\\)\\s*\\{/, (ctx, match) => {\n      ctx.accept(\"loop\");\n    });\n    lexer.rule(/while\\s*\\(.*\\)\\s*\\{/, (ctx, match) => {\n      ctx.accept(\"loop\");\n    });\n    lexer.rule(/do\\s*\\{/, (ctx, match) => {\n      ctx.accept(\"loop\");\n    });\n\n    // Rules for curly braces\n    lexer.rule(/\\{/, (ctx, match) => {\n      ctx.accept(\"openCur\");\n    });\n    lexer.rule(/\\}\\s*while.+\\;/, (ctx, match) => {\n      ctx.accept(\"closeDoWhile\");\n    });\n    lexer.rule(/\\}/, (ctx, match) => {\n      ctx.accept(\"closeCur\");\n    });\n\n\n    // Rules for other uneeded characters and whitespace\n    // Ignore single line comment\n    lexer.rule(/\\/\\/[^\\r\\n]*\\r?\\n/, (ctx, match) => {\n      ctx.ignore();\n    });\n\n    // Ignore multiline comment\n    lexer.rule(/\\/\\*[^*]*\\*+(?:[^/*][^*]*\\*+)*\\//, (ctx, match) => {\n      ctx.ignore();\n    });\n\n    // Ignore white space\n    lexer.rule(/[ \\t\\r\\n]+/, (ctx, match) => {\n      ctx.ignore();\n    });\n\n    // Ignore other characters\n    lexer.rule(/./, (ctx, match) => {\n      ctx.ignore();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomepageComponent.html":{"url":"components/HomepageComponent.html","title":"component - HomepageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomepageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/homepage/homepage.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-homepage\n            \n\n            \n                styleUrls\n                ./homepage.component.css\n            \n\n\n\n            \n                templateUrl\n                ./homepage.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loggedIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/homepage/homepage.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/homepage/homepage.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/homepage/homepage.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n  constructor(private authService: AuthService, private userService: UserService, private router: Router){}\n  loggedIn: boolean = false;\n\n  ngOnInit(): void {\n    if(this.authService.getLoggedUser()){\n      this.loggedIn = true;\n      if(this.userService.user){\n        this.userService.user.role == 'teacher' ? this.router.navigate(['problem-creation']) : this.router.navigate(['problem-selection']);\n      }\n      const userDetails: any = this.authService.getLoggedUser();\n      this.userService.getStudentByEmail(userDetails.email).subscribe({\n        next: student => {\n          if(student){\n            this.userService.updateUser(userDetails, 'student');\n            this.router.navigate(['problem-selection']);\n          }\n        }\n      });\n      this.userService.getTeacherByEmail(userDetails.email).subscribe({\n        next: teacher => {\n          if(teacher){\n            this.userService.updateUser(userDetails, 'teacher');\n            this.router.navigate(['problem-creation']);\n          }\n        }\n      });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        Teachers\n        \n        Students\n    \n    \n        Login\n    \n\n\n    \n\n    \n                \n                    ./homepage.component.css\n                \n                .homepage-content {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n\n    background-color: white;\n}\n\n.role-selection{\n    position: relative;\n    top: 20%;\n    width: auto;\n    height: fit-content;\n}\n\n.role-selection > button {\n    margin: 30px;\n    padding: 40px;\n    color: #49494b;\n    font-size: larger;\n    background-color: #d1bfa7;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Teachers                Students                Login    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProblemCreationComponent', 'selector': 'app-problem-creation'},{'name': 'ProblemSelectionComponent', 'selector': 'app-problem-selection'},{'name': 'StudentSolutionComponent', 'selector': 'app-student-solution'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomepageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                role\n                            \n                            \n                                studentExists\n                            \n                            \n                                teacherExists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStudent\n                            \n                            \n                                addTeacher\n                            \n                            \n                                handleStudentLogin\n                            \n                            \n                                handleTeacherLogin\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStudent\n                        \n                    \n                \n            \n            \n                \naddStudent(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTeacher\n                        \n                    \n                \n            \n            \n                \naddTeacher(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleStudentLogin\n                        \n                    \n                \n            \n            \n                \nhandleStudentLogin(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleTeacherLogin\n                        \n                    \n                \n            \n            \n                \nhandleTeacherLogin(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'student'\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        teacherExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login/login.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user.service';\nimport { Teacher } from '../teacher';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Student } from '../student';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  constructor(\n    private authService: AuthService, \n    private userService: UserService, \n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n  teacherExists: boolean = false;\n  studentExists: boolean = false;\n  role: string = 'student';\n\n  ngOnInit(): void {\n    if(this.userService.user){\n      this.userService.user.role == 'teacher' ? this.router.navigate(['problem-creation']) : this.router.navigate(['problem-selection']);\n    }\n    this.route.params.subscribe(params => {\n      this.role = params['role'];\n      if(this.role !== 'student' && this.role !== 'teacher'){\n        this.router.navigate(['']);\n      }\n    });\n\n    if(this.authService.getLoggedUser()){\n      const userDetails: any = this.authService.getLoggedUser();\n      if(this.role == 'teacher'){\n        this.handleTeacherLogin(userDetails);\n      }\n      else\n      {\n        this.handleStudentLogin(userDetails)\n      }\n    }\n  }\n\n  handleStudentLogin(userDetails: any){\n    this.userService.getStudentByEmail(userDetails.email).subscribe({\n      next: student => {\n        if(!student){\n          this.addStudent(userDetails);\n        }\n        this.userService.updateUser(userDetails, 'student');\n        this.router.navigate(['problem-selection']);\n      },\n      error: () => {\n        this.addStudent(userDetails);\n        this.userService.updateUser(userDetails, 'student');\n        this.router.navigate(['problem-selection']);\n      }\n    });\n  }\n\n  handleTeacherLogin(userDetails: any){\n    this.userService.getTeacherByEmail(userDetails.email).subscribe({\n      next: teacher => {\n        if(!teacher){\n          this.addTeacher(userDetails);\n        }\n        this.userService.updateUser(userDetails, 'teacher');\n        this.router.navigate(['problem-creation']);\n      },\n      error: () => {\n        this.addTeacher(userDetails);\n        this.userService.updateUser(userDetails, 'teacher');\n        this.router.navigate(['problem-creation']);\n      }\n    });\n    \n  }\n\n  addTeacher(userDetails: any){\n    console.log(userDetails);\n    let teacher: Teacher = {\n      first_name: userDetails.given_name,\n      last_name: userDetails.family_name,\n      teacherEmail: userDetails.email,\n      password_hash: \"placeholder\"\n    }\n    this.userService.addTeacher(teacher).subscribe({\n      error: () => {\n        console.log(\"Unable to add teacher\");\n        this.router.navigate(['']);\n      }\n    })\n  }\n\n  addStudent(userDetails: any){\n    console.log(userDetails);\n    let student: Student = {\n      first_name: userDetails.given_name,\n      last_name: userDetails.family_name,\n      email: userDetails.email,\n      enrolled_classes: [],\n      password_hash: \"placeholder\"\n    }\n    this.userService.addStudent(student).subscribe({\n      error: () => {\n        console.log(\"Unable to add student\");\n        this.router.navigate(['']);\n      }\n    })\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n    \n\n    \n                \n                    ./login.component.css\n                \n                .loginPage {\n    text-align: center;\n    padding: 40px;\n    margin: 3% 0;\n}\n\n.fields{\n    padding: 3% 0;\n}\n\nbutton {\n    padding: 20px;\n    margin: 6px 8px 6px 8px;\n    min-width: 88px;\n    border-radius: 3px;\n    font-size: 14px;\n    text-align: center;\n    text-decoration:none;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n}\n\n.login, .create-account{\n    background-color: #d1bfa7;\n}\n.switch-page{\n    background-color: #bd8c7d;\n}\n\n\nmat-form-field{\n    width: 50%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProblemCreationComponent', 'selector': 'app-problem-creation'},{'name': 'ProblemSelectionComponent', 'selector': 'app-problem-selection'},{'name': 'StudentSolutionComponent', 'selector': 'app-student-solution'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navbar/navbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navbar/navbar.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navbar/navbar.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n  constructor(private authService: AuthService, private userService: UserService) {}\n\n  logout() {\n    this.userService.user = undefined;\n    this.authService.logout();\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      menu\n    \n    \n      \n        home\n        Home\n      \n      \n        search\n        Problem Search\n      \n      \n        create\n        Create a Problem\n      \n       \n        logout\n        Log Out\n      \n    \n\n    Encounter\n    \n  \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .navbar {\n    background-color: #49494b;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    height: 50px;\n    padding: 30px 25px;\n}\n\n.menu {\n    height: auto;\n    width: auto;\n    background-color: #49494b;\n    border:  none;\n    color: #d1bfa7;\n}\n\n.menu mat-icon {\n    font-size: 2em;\n    height: auto;\n    width: auto;\n}\n\n.title {\n    font-size: 4em;\n    font-family: \"Times New Roman\", Times, serif;\n    color: #d1bfa7;\n}\n\n.search {\n    border: 3px solid #d1bfa7;\n    background-color: white;\n    border-radius: 6px;\n    color: #bd8c7d;\n    font-size: 1.1em;\n}\n\n.search:focus{\n    outline-color: white;\n    outline-style: solid; /* Needed for firefox */\n}\n\n::placeholder {\n    color: #bd8c7d;\n    opacity: .5;\n}\n\n.line {\n    width: 100%;\n    height: 4px;\n    background-color: #bd8c7d;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            menu                      home        Home                    search        Problem Search                    create        Create a Problem                     logout        Log Out              Encounter        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProblemCreationComponent', 'selector': 'app-problem-creation'},{'name': 'ProblemSelectionComponent', 'selector': 'app-problem-selection'},{'name': 'StudentSolutionComponent', 'selector': 'app-student-solution'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Problem.html":{"url":"interfaces/Problem.html","title":"interface - Problem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Problem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/problem.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complexity\n                                        \n                                \n                                \n                                        \n                                            hints\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            overallComplexity\n                                        \n                                \n                                \n                                        \n                                            setId\n                                        \n                                \n                                \n                                        \n                                            sourceCode\n                                        \n                                \n                                \n                                        \n                                            totalScore\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complexity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complexity:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hints:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overallComplexity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overallComplexity:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        setId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        setId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sourceCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sourceCode:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        totalScore\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        totalScore:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Problem {\n    id?: number;\n    setId: number;\n    name: string;\n    sourceCode: string[];\n    complexity: string[];\n    hints: string[];\n    overallComplexity: string;\n    totalScore: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProblemCreationComponent.html":{"url":"components/ProblemCreationComponent.html","title":"component - ProblemCreationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProblemCreationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/problem-creation/problem-creation.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-problem-creation\n            \n\n            \n                styleUrls\n                ./problem-creation.component.css\n            \n\n\n\n            \n                templateUrl\n                ./problem-creation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                codeInput\n                            \n                            \n                                complexity\n                            \n                            \n                                hints\n                            \n                            \n                                name\n                            \n                            \n                                overallComplexity\n                            \n                            \n                                setId\n                            \n                            \n                                sourceCode\n                            \n                            \n                                totalScore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                formatComplexity\n                            \n                            \n                                formComplete\n                            \n                            \n                                getSourceCodeFromTextInput\n                            \n                            \n                                getTotalScore\n                            \n                            \n                                handleTab\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                parse\n                            \n                            \n                                setAllToConstant\n                            \n                            \n                                setCodeInput\n                            \n                            \n                                submitProblem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(problemService: ProblemService, router: Router, _snackBar: MatSnackBar, complexityParserService: ComplexityParserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/problem-creation/problem-creation.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        problemService\n                                                  \n                                                        \n                                                                        ProblemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexityParserService\n                                                  \n                                                        \n                                                                        ComplexityParserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        formatComplexity\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatComplexity(complexity: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:151\n                \n            \n\n\n            \n                \n                      Returns the string equivalent of a complexity\n  @param complexity a problem.\n  @returns The complexity.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    complexity\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a problem.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The complexity.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formComplete\n                        \n                    \n                \n            \n            \n                \nformComplete()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSourceCodeFromTextInput\n                        \n                    \n                \n            \n            \n                \ngetSourceCodeFromTextInput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTotalScore\n                        \n                    \n                \n            \n            \n                \ngetTotalScore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleTab\n                        \n                    \n                \n            \n            \n                \nhandleTab(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parse\n                        \n                    \n                \n            \n            \n                \nparse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:115\n                \n            \n\n\n            \n                \n                      Parses the source code to autofill the complexity within the problem creation panel and find the total complexity.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAllToConstant\n                        \n                    \n                \n            \n            \n                \nsetAllToConstant()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:138\n                \n            \n\n\n            \n                \n                      Sets all line to constant. Hints will mention linear complexiity.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCodeInput\n                        \n                    \n                \n            \n            \n                \nsetCodeInput(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitProblem\n                        \n                    \n                \n            \n            \n                \nsubmitProblem()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-creation/problem-creation.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        codeInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-creation/problem-creation.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        complexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-creation/problem-creation.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hints\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-creation/problem-creation.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-creation/problem-creation.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overallComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-creation/problem-creation.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-creation/problem-creation.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sourceCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-creation/problem-creation.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalScore\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-creation/problem-creation.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Problem } from '../problem';\nimport { ProblemService } from '../problem-service/problem.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ComplexityParserService } from '../complexity-parser/complexity-parser.service';\n\n@Component({\n  selector: 'app-problem-creation',\n  templateUrl: './problem-creation.component.html',\n  styleUrls: ['./problem-creation.component.css']\n})\nexport class ProblemCreationComponent {\n  setId: number = 1;\n  sourceCode: string[] = [];\n  name: string = '';\n  complexity: string[] = [];\n  hints: string[] = [];\n  overallComplexity: string = '';\n  totalScore: Number = 0;\n  codeInput: string = '';\n\n  constructor(private problemService: ProblemService, private router: Router, private _snackBar: MatSnackBar, private complexityParserService: ComplexityParserService){ }\n\n  getSourceCodeFromTextInput(){\n    if(this.codeInput.length > 0){\n      for (let line of this.codeInput.split(/[\\r\\n]+/)){\n        this.sourceCode.push(line);\n        this.complexity.push('');\n        this.hints.push('');\n      }\n    }\n    else{\n      this._snackBar.open('Enter Source Code or Upload a File','X', {duration: 2000})\n    }\n  }\n\n  onFileSelected(event: any){\n    const file:File = event.target.files[0];\n    let reader = new FileReader();\n    reader.onload = () =>{\n      let fileContent = reader.result as string;\n      for (const line of fileContent.split(/[\\r\\n]+/)){\n        this.sourceCode.push(line);\n        this.complexity.push('');\n        this.hints.push('');\n      }\n    }\n    reader.readAsText(file);\n  }\n\n\n  formComplete(){\n    if(this.name && this.overallComplexity && this.sourceCode.length > 0\n      && this.complexity.length > 0){\n        return true;\n    }\n    return false;\n  }\n\n  setCodeInput(event: any){\n    this.codeInput = event.target.innerText;\n  }\n\n  /*https://stackoverflow.com/questions/2237497/make-the-tab-key-insert-a-tab-character\n  -in-a-contenteditable-div-and-not-blur */\n  handleTab(event: any){\n    this.codeInput = event.target.innerText;\n\n    event.preventDefault();\n\n    let sel          = document.getSelection(),\n        range        = sel?.getRangeAt(0),\n        tabNodeValue = '\\t',\n        tabNode      = document.createTextNode(tabNodeValue);\n      if(range){\n        range.insertNode(tabNode)\n        range.setStartAfter(tabNode)\n        range.setEndAfter(tabNode)\n      }\n  }\n  submitProblem(){\n    if(!this.formComplete()){\n      this._snackBar.open('Form Incomplete','X', {duration: 2000})\n    }\n    else{\n      const createdProblem: Problem = {\n        setId: this.setId,\n        name: this.name,\n        sourceCode: this.sourceCode,\n        complexity: this.complexity,\n        hints: this.hints,\n        overallComplexity: this.overallComplexity,\n        totalScore: this.getTotalScore(),\n      }\n      this.problemService.addProblem(createdProblem).subscribe();\n      this.router.navigate(['']);\n    }\n  }\n\n  getTotalScore(){\n    let totalScore: number = 1;\n    this.complexity.forEach(line => {\n      if(line){\n        totalScore++;\n      }\n    });\n    return totalScore;\n  }\n\n\n/**\n*   Parses the source code to autofill the complexity within the problem creation panel and find the total complexity.\n**/\nparse() {\n\n  this.setAllToConstant();\n  let blockList = this.complexityParserService.parse(this.sourceCode.join(\"\\n\"))\n  let maxN = 0;\n\n  blockList.forEach((block) => {\n\n    this.complexity[block.begLine - 1] = this.formatComplexity(block.complexity)\n\n    this.hints[block.begLine - 1] = block.complexity == 0 ? \"The complexity is linear\" : \"The complexity is exponential\"\n\n    if (block.complexity > maxN)\n      maxN = block.complexity\n\n  })\n\n  this.overallComplexity = this.formatComplexity(maxN)\n}\n\n/**\n*   Sets all line to constant. Hints will mention linear complexiity.\n**/\nsetAllToConstant() {\n  for (let i = 0; i \n    \n\n    \n        \n    Create Problem\n    \n        \n            Enter Source Code\n            \n            \n        \n        or\n        \n            cloud_upload\n            Upload Problem Code\n        \n        \n    \n     0\">\n        \n                \n                    Problem Name\n                    \n                \n        \n                \n                    Tools\n                    Parse\n                    All o(1)\n                \n            \n                \n                    \n                        Complexity\n                    \n                    \n                        Hints\n                    \n                \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                    \n                        {{i + 1}}\n                        {{sourceCode[i]}}\n                    \n                \n                \n                    Overall Complexity\n                    \n                \n                \n            \n        Submit\n    \n\n\n    \n\n    \n                \n                    ./problem-creation.component.css\n                \n                .page-title{\n    text-align: left;\n    margin: 15px;\n}\n\n.problem-creation{\n    text-align: center;\n}\n\n.source-code-entry{\n    resize: none;\n}\n\n.source-code{\n    padding: .5%;\n}\n\n/* file text upload */\ninput[type='file']{\n    display: none;\n}\n\n.upload-code{\n    background-color: #d1bfa7;\n    padding: 20px;\n    margin: 6px 8px 6px 8px;\n    min-width: 88px;\n    border-radius: 3px;\n    font-size: 14px;\n    text-align: center;\n    text-decoration:none;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n    display: inline-flex;\n    align-items: center;\n}\n\n.upload-icon{\n    margin: 0px 10px 0px 0px;\n}\n\n/* source code entry box*/\n.source-code{\n    width: 60%;\n    min-height: 10em;\n    resize: none;\n    border: 4px solid #bd8c7d;\n    border-radius: 5px;\n    word-wrap: break-word;\n    margin: auto;\n    text-align: left;\n    white-space: pre;\n}\n.source-code:focus{\n    outline: 3px solid #49494b;\n    background-color: #FBFAF7;\n}\n\n.source-code-entry-label{\n    padding: 6px 12px;\n    align-items: center;\n}\n\n\n\n\n.problem-name{\n    text-align: left;\n    margin: 1% 4%;\n    padding: 10px 10px 0px;\n}\n\n.problem-name input{\n    width: 30%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 8px 3px 0px;\n    outline: none;\n    border: 3px solid #49494b;\n    border-radius: 5px;\n}\n\n.tools-button {\n    background-color: #d1bfa7;\n    padding: 10px;\n    margin: 6px 5px 6px 8px;\n    min-width: 88px;\n    border-radius: 3px;\n    font-size: 14px;\n    text-align: center;\n    text-decoration:none;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n}\n\n.annotations{\n    text-align: left;\n    margin: 2% 4%;\n    padding: 10px 10px 0px 10px;\n    width: 90%;\n}\n\n.complexity-column-label{\n    display: inline-block;\n    width: 10%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 10px 0px 0px;\n}\n\n.hints-column-label{\n    display: inline-block;\n    width: 20%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 10px 0px 10px;\n}\n\n.form-line{\n    display: flex;\n    align-items: center;\n    height: 40px;\n}\n\n.line-complexity{\n    width: 10%;\n    height: 30px;\n    padding: 4px;\n    margin: 0px 10px 0px 0px;\n    line-height: 1;\n}\n\n.line-complexity input{\n    width: 100%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 8px 3px 0px;\n    outline: none;\n    border: 3px solid #49494b;\n    border-radius: 5px;\n}\n\n.line-hints{\n    width: 20%;\n    height: 30px;\n    padding: 4px;\n    margin: 0px 10px 0px 0px;\n}\n\n.line-hints input{\n    width: 100%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 8px 3px 0px;\n    outline: none;\n    border: 3px solid #49494b;\n    border-radius: 5px;\n}\n\n.line-hints input:focus, .line-complexity input:focus, .problem-name input:focus, .overall-complexity input:focus{\n    outline: 3px solid #bd8c7d;\n    background-color: #FBFAF7;\n}\n\nmat-label{\n    font-weight: bold;\n}\n\n.code{\n    display: flex;\n    align-content: center;\n    vertical-align: middle;\n    width: 60%;\n    height: 30px;\n    padding: 5px;\n    margin: 0px 12px;\n}\n\n.line-number{\n    line-height: 2.5;\n    margin: 0px 10px 0px 0px;\n    color: #bd8c7d;\n} \n\n.line-code{\n    line-height: 2.5;\n    font-family: Consolas,\"courier new\";\n}\n\n.annotations:nth-child(1n) .form-line:nth-child(2) .code{\n    border-width: 3px 3px 0px 3px;\n    border-style: solid;\n    border-color: #d1bfa7;\n    border-radius: 5px 5px 0px 0px;\n}\n\n.form-line:nth-child(n) .code{\n    border-width: 0px 3px 0px 3px;\n    border-style: solid;\n    border-color: #d1bfa7;\n}\n\n.annotations:nth-child(1n) .form-line:nth-last-child(2) .code{\n    border-width: 0px 3px 3px 3px;\n    border-style: solid;\n    border-color: #d1bfa7;\n    border-radius:0px 0px 5px 5px;\n}\n\n\n.overall-complexity{\n    margin: 2% 0%;\n}\n.overall-complexity input{\n    width: 10%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 4px 3px 0px;\n    outline: none;\n    border: 3px solid #49494b;\n    border-radius: 5px;\n}\n\n button, input[type=submit]{\n    background-color: #d1bfa7;\n    padding: 20px;\n    margin: 6px 8px 6px 8px;\n    min-width: 88px;\n    border-radius: 3px;\n    font-size: 14px;\n    text-align: center;\n    text-decoration:none;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Create Problem                        Enter Source Code                                        or                    cloud_upload            Upload Problem Code                         0\">                                            Problem Name                                                                                Tools                    Parse                    All o(1)                                                                                        Complexity                                                                Hints                                                                                                                                                                                                                                {{i + 1}}                        {{sourceCode[i]}}                                                                        Overall Complexity                                                                        Submit    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProblemCreationComponent', 'selector': 'app-problem-creation'},{'name': 'ProblemSelectionComponent', 'selector': 'app-problem-selection'},{'name': 'StudentSolutionComponent', 'selector': 'app-student-solution'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProblemCreationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProblemSelectionComponent.html":{"url":"components/ProblemSelectionComponent.html","title":"component - ProblemSelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProblemSelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/problem-selection/problem-selection.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-problem-selection\n            \n\n            \n                styleUrls\n                ./problem-selection.component.css\n            \n\n\n\n            \n                templateUrl\n                ./problem-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allProblems\n                            \n                            \n                                selectedProblems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                matchesSearch\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                searchProblems\n                            \n                            \n                                selectProblem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(problemService: ProblemService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/problem-selection/problem-selection.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        problemService\n                                                  \n                                                        \n                                                                        ProblemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The problemService is used to get problems from the backend.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        matchesSearch\n                        \n                    \n                \n            \n            \n                \nmatchesSearch(searchText: string, problem: Problem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-selection/problem-selection.component.ts:56\n                \n            \n\n\n            \n                \n                    Checks whether a problem matches a search.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    searchText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        text used to search for problems.\n\n                                    \n                                \n                                \n                                    problem\n                                    \n                                                Problem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a problem that is checked to see if it matches the search.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the problem name matches the search or False if the problem name does not match the search.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-selection/problem-selection.component.ts:25\n                \n            \n\n\n            \n                \n                    On initialization the list of all problems are retrevied from the backend via the problemService.\nallProblems and selectedProblems are set to the problem array from the backend.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchProblems\n                        \n                    \n                \n            \n            \n                \nsearchProblems(searchText: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-selection/problem-selection.component.ts:36\n                \n            \n\n\n            \n                \n                    Sets selectedProblems to a filter list of problems based on the search text.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    searchText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search text used to search for problems.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectProblem\n                        \n                    \n                \n            \n            \n                \nselectProblem(problemId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-selection/problem-selection.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    problemId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allProblems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-selection/problem-selection.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedProblems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/problem-selection/problem-selection.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ProblemService } from '../problem-service/problem.service';\nimport { Problem } from '../problem';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-problem-selection',\n  templateUrl: './problem-selection.component.html',\n  styleUrls: ['./problem-selection.component.css']\n})\nexport class ProblemSelectionComponent implements OnInit {\n\n  /**\n   * @param problemService The problemService is used to get problems from the backend.\n   */\n  constructor(private problemService: ProblemService, private router: Router) {}\n\n  allProblems: any = [];\n  selectedProblems: any = [];\n\n  /**\n   * On initialization the list of all problems are retrevied from the backend via the problemService.\n   * allProblems and selectedProblems are set to the problem array from the backend.\n   */\n  ngOnInit(){\n    this.allProblems = this.problemService.getAllProblems().subscribe(data => {\n      this.allProblems = data;\n      this.selectedProblems = this.allProblems;\n    });\n  }  \n\n  /**\n   * Sets selectedProblems to a filter list of problems based on the search text.\n   * @param searchText The search text used to search for problems.\n   */\n  searchProblems(searchText: string){\n    if(!searchText){\n      this.selectedProblems = this.allProblems\n    }\n    else{\n      this.selectedProblems = [];\n      this.allProblems.forEach((problem :Problem) => {\n        if(this.matchesSearch(searchText, problem)){\n          this.selectedProblems.push(problem);\n        }\n      });\n    }\n  }\n\n  /**\n   * Checks whether a problem matches a search.\n   * @param searchText text used to search for problems.\n   * @param problem a problem that is checked to see if it matches the search.\n   * @returns True if the problem name matches the search or False if the problem name does not match the search.\n   */\n  matchesSearch(searchText: string, problem: Problem){\n    if(problem.name.toLowerCase() == searchText.toLowerCase() || problem.name.toLowerCase().includes(searchText.toLowerCase())){\n        return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  selectProblem(problemId: number){\n    this.router.navigate(['student-solution/' + problemId])\n  }\n\n}\n\n    \n\n    \n        \n  Find Problems\n  \n    \n  \n\n  \n      \n          {{problem.name}}\n      \n      \n        No matches for {{searchValue.value}}\n        No matches\n      \n  \n\n\n    \n\n    \n                \n                    ./problem-selection.component.css\n                \n                .search-page {\n  margin: 5%;\n  padding: 0px 0px 10px 0px;\n}\n\n.problem {\n  color: #d1bfa7;\n  background-color: #49494b;\n  border: 5px solid #bd8c7d;\n  border-radius: 5px;\n  padding: 0px 0px 0px 4px;\n  margin: 10px 0px;\n  cursor: pointer;\n}\n\n.search {\n    border: 3px solid #bd8c7d;\n    background-color: white;\n    border-radius: 6px;\n    color: #d1bfa7;\n    font-size: 1.1em;\n}\n\n.search:focus{\n    outline-color: white;\n    outline-style: solid; /* Needed for firefox */\n}\n\n.no-match{\n  text-align: center;\n  margin: 10% 0%;\n}\n\n.problems{\n  margin: 3% 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Find Problems                          {{problem.name}}                    No matches for {{searchValue.value}}        No matches        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProblemCreationComponent', 'selector': 'app-problem-creation'},{'name': 'ProblemSelectionComponent', 'selector': 'app-problem-selection'},{'name': 'StudentSolutionComponent', 'selector': 'app-student-solution'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProblemSelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProblemService.html":{"url":"injectables/ProblemService.html","title":"injectable - ProblemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProblemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/problem-service/problem.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProblem\n                            \n                            \n                                getAllProblems\n                            \n                            \n                                getProblemById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/problem-service/problem.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProblem\n                        \n                    \n                \n            \n            \n                \naddProblem(problem: Problem)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-service/problem.service.ts:34\n                \n            \n\n\n            \n                \n                      Posts a problem to the backend.\n  @param problem a problem.\n  @returns a Problem Observable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    problem\n                                    \n                                                Problem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a problem.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        a Problem Observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllProblems\n                        \n                    \n                \n            \n            \n                \ngetAllProblems()\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-service/problem.service.ts:19\n                \n            \n\n\n            \n                \n                    Retrieves all problems from the backend.\n\n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        The list of all problems.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProblemById\n                        \n                    \n                \n            \n            \n                \ngetProblemById(problemId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/problem-service/problem.service.ts:50\n                \n            \n\n\n            \n                \n                      Retrieves a problem from the backend with the specified Id.\n  @param problemId The id of the problem to retrieve.\n  @returns Returns an observable of the problem that it receives from the backend.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    problemId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The id of the problem to retrieve.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        Returns an observable of the problem that it receives from the backend.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, tap} from 'rxjs';\nimport { Problem } from '../problem';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProblemService {\n\n  constructor(private http: HttpClient, private _snackBar: MatSnackBar) {\n  }\n\n  /**\n   * Retrieves all problems from the backend.\n   * @returns The list of all problems.\n   */\n  getAllProblems(): Observable{\n    return this.http.get(\"http://localhost:8080/problems\").pipe(\n      tap(\n      {\n        error: () => this._snackBar.open('Unable to get problems','X', {duration: 2000})\n      }\n      )\n    );\n  }\n\n  /**\n  *   Posts a problem to the backend.\n  *   @param problem a problem.\n  *   @returns a Problem Observable.\n  **/\n  addProblem(problem: Problem): Observable{\n    return this.http.post(\"http://localhost:8080/problems\", problem).pipe(\n      tap(\n      {\n        next: () => this._snackBar.open(`Problem ${problem.name} Created`, 'X', {duration: 2000}),\n        error: () => this._snackBar.open('Unable to Create Problem','X', {duration: 2000})\n      }\n      )\n    );\n  }\n\n  /**\n  *   Retrieves a problem from the backend with the specified Id.\n  *   @param problemId The id of the problem to retrieve.\n  *   @returns Returns an observable of the problem that it receives from the backend.\n  **/\n  getProblemById(problemId:number): Observable{\n    return this.http.get(\"http://localhost:8080/problems/\" + problemId);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Solution.html":{"url":"interfaces/Solution.html","title":"interface - Solution","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Solution\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/solution.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            complexityAnswer\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            overallComplexity\n                                        \n                                \n                                \n                                        \n                                            problemId\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            studentId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        complexityAnswer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        complexityAnswer:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        overallComplexity\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        overallComplexity:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        problemId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        problemId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        studentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        studentId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Solution {\n    id?: number;\n    studentId: number;\n    problemId: number;\n    complexityAnswer: string[];\n    overallComplexity: string;\n    score: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SolutionService.html":{"url":"injectables/SolutionService.html","title":"injectable - SolutionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SolutionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/solution-service/solution.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addSolution\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/solution-service/solution.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSolution\n                        \n                    \n                \n            \n            \n                \naddSolution(solution: Solution)\n                \n            \n\n\n            \n                \n                    Defined in src/app/solution-service/solution.service.ts:18\n                \n            \n\n\n            \n                \n                      Sends a Post request with a solution to the backend.\n  @param solution a solution from a student.\n  @returns a Solution Observable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    solution\n                                    \n                                                Solution\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a solution from a student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        a Solution Observable.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Solution } from '../solution';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SolutionService {\n\n  constructor(private http: HttpClient) { }\n\n  /**\n  *   Sends a Post request with a solution to the backend.\n  *   @param solution a solution from a student.\n  *   @returns a Solution Observable.\n  **/\n  addSolution(solution: Solution): Observable{\n    return this.http.post(\"http://localhost:8080/solutions\", solution);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Student.html":{"url":"interfaces/Student.html","title":"interface - Student","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Student\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/student.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            enrolled_classes\n                                        \n                                \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            password_hash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enrolled_classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enrolled_classes:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Student {\n    id?: number;\n    email: string;\n    first_name: string;\n    last_name: string;\n    enrolled_classes: any;\n    password_hash: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StudentSolutionComponent.html":{"url":"components/StudentSolutionComponent.html","title":"component - StudentSolutionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StudentSolutionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/student-solution-component/student-solution.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-student-solution\n            \n\n            \n                styleUrls\n                ./student-solution.component.css\n            \n\n\n\n            \n                templateUrl\n                ./student-solution.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blockColors\n                            \n                            \n                                blockList\n                            \n                            \n                                complexityAnswer\n                            \n                            \n                                isLoading\n                            \n                            \n                                overallComplexity\n                            \n                            \n                                problem\n                            \n                            \n                                problemId\n                            \n                            \n                                score\n                            \n                            \n                                showResults\n                            \n                            \n                                studentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateScore\n                            \n                            \n                                getLineColor\n                            \n                            \n                                lineComplexityCorrect\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                overallComplexityCorrect\n                            \n                            \n                                submitSolution\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(problemService: ProblemService, router: Router, route: ActivatedRoute, _snackBar: MatSnackBar, solutionService: SolutionService, complexityParserService: ComplexityParserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/student-solution-component/student-solution.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        problemService\n                                                  \n                                                        \n                                                                        ProblemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        solutionService\n                                                  \n                                                        \n                                                                        SolutionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        complexityParserService\n                                                  \n                                                        \n                                                                        ComplexityParserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        calculateScore\n                        \n                    \n                \n            \n            \n                \ncalculateScore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/student-solution-component/student-solution.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLineColor\n                        \n                    \n                \n            \n            \n                \ngetLineColor(lineNum: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/student-solution-component/student-solution.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lineNum\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineComplexityCorrect\n                        \n                    \n                \n            \n            \n                \nlineComplexityCorrect(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/student-solution-component/student-solution.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/student-solution-component/student-solution.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overallComplexityCorrect\n                        \n                    \n                \n            \n            \n                \noverallComplexityCorrect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/student-solution-component/student-solution.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submitSolution\n                        \n                    \n                \n            \n            \n                \nsubmitSolution()\n                \n            \n\n\n            \n                \n                    Defined in src/app/student-solution-component/student-solution.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blockColors\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : [\"#feffb7\", \"#d0ffb7\", \"#b7fff8\", \"#b8b7ff\", \"#ffb7f5\", \"#ffb7bd\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Block[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        complexityAnswer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        overallComplexity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        problem\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Problem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        problemId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        studentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/student-solution-component/student-solution.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { tap } from 'rxjs';\nimport { Problem } from '../problem';\nimport { ProblemService } from '../problem-service/problem.service';\nimport { Solution } from '../solution';\nimport { SolutionService } from '../solution-service/solution.service';\nimport { ComplexityParserService } from '../complexity-parser/complexity-parser.service';\nimport { Block } from '../complexity-parser/block';\n\n@Component({\n  selector: 'app-student-solution',\n  templateUrl: './student-solution.component.html',\n  styleUrls: ['./student-solution.component.css']\n})\nexport class StudentSolutionComponent implements OnInit{\n  constructor(\n    private problemService: ProblemService,\n    private router: Router, private route: ActivatedRoute,\n    private _snackBar: MatSnackBar,\n    private solutionService: SolutionService,\n    private complexityParserService: ComplexityParserService\n  ) {}\n  showResults: boolean = false;\n  problem: Problem;\n  studentId: number;\n  problemId: number = 0;\n  complexityAnswer: string[];\n  overallComplexity: string = \"\";\n  score: number = 0;\n  blockList: Block[];\n  blockColors: string[] = [\"#feffb7\", \"#d0ffb7\", \"#b7fff8\", \"#b8b7ff\", \"#ffb7f5\", \"#ffb7bd\"]\n\n  isLoading = true;\n\n  ngOnInit(): void {\n    this.problemService\n\n    this.route.params.subscribe(params => {\n      this.problemId = +params['id'];\n      this.problemService.getProblemById(this.problemId).subscribe({\n        next: (problem) => {\n          this.problem = problem;\n          this.complexityAnswer = new Array(problem.complexity.length).fill('');\n          this.isLoading = false;\n          this.blockList = this.complexityParserService.parse(this.problem.sourceCode.join(\"\\n\"))\n        },\n        error: () => {\n          this._snackBar.open('Could not fetch problem','X', {duration: 2000});\n          this.router.navigate(['problem-selection']);\n        }\n      });\n   });\n\n  }\n\n  submitSolution(){\n    this.score = this.calculateScore();\n    const studentSolution: Solution = {\n      studentId: 1,\n      problemId: this.problemId,\n      complexityAnswer: this.complexityAnswer,\n      overallComplexity: this.overallComplexity,\n      score: this.score,\n    }\n    this.solutionService.addSolution(studentSolution).subscribe({\n      next: () =>{\n        this.showResults = true;\n      },\n      error: () => {\n        this._snackBar.open('Could not submit solution','X', {duration: 2000});\n      }\n    });\n  }\n\n  calculateScore(): number{\n    let score = 0;\n    for(let i = 0; i  b.begLine - a.begLine)\n\n    // Check if the line number is in a block\n    for (let i = 0; i = this.blockList[i].begLine && lineNum \n    \n\n    \n        \n    \n        \n            {{problem.name}}\n            {{score}}/{{problem.totalScore}}\n        \n        \n            \n                \n                    Complexity\n                \n            \n            \n                \n                    {{problem.complexity[i]}}\n                \n                \n                    \n                \n                \n                    {{i + 1}}\n                    {{problem.sourceCode[i]}}\n                \n            \n            \n                Overall Complexity\n                \n                {{problem.overallComplexity}}\n                \n                \n                \n            \n        \n            Submit\n            Back to problems\n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./student-solution.component.css\n                \n                .page-header{\n    display: flex;\n    justify-content: space-between;\n    text-align: left;\n    margin: 15px 15px 0px 15px;\n}\n\n.annotations{\n    text-align: left;\n    margin: 2% 4%;\n    padding: 10px 10px 0px 10px;\n    width: 90%;\n}\n\n.complexity-column-label{\n    display: inline-block;\n    width: 10%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 10px 0px 0px;\n}\n\n.form-line{\n    display: flex;\n    align-items: center;\n    height: 40px;\n}\n\n.line-complexity{\n    width: 10%;\n    height: 30px;\n    padding: 4px;\n    margin: 0px 10px 0px 0px;\n    line-height: 1;\n}\n\n.line-complexity input{\n    width: 100%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 8px 3px 0px;\n    outline: none;\n    border: 3px solid #49494b;\n    border-radius: 5px;\n}\n\n.line-hints input:focus, .line-complexity input:focus, .problem-name input:focus, .overall-complexity input:focus{\n    outline: 3px solid #bd8c7d;\n    background-color: #FBFAF7;\n}\n\nmat-label{\n    font-weight: bold;\n}\n\n.code{\n    display: flex;\n    align-content: center;\n    vertical-align: middle;\n    width: 60%;\n    height: 30px;\n    padding: 5px;\n    margin: 0px 12px;\n}\n\n.line-number{\n    line-height: 2.5;\n    margin: 0px 10px 0px 0px;\n    color: #bd8c7d;\n} \n\n.line-code{\n    line-height: 2.5;\n    font-family: Consolas,\"courier new\";\n}\n\n.annotations:nth-child(1n) .form-line:nth-child(2) .code{\n    border-width: 3px 3px 0px 3px;\n    border-style: solid;\n    border-color: #d1bfa7;\n    border-radius: 5px 5px 0px 0px;\n}\n\n.form-line:nth-child(n) .code{\n    border-width: 0px 3px 0px 3px;\n    border-style: solid;\n    border-color: #d1bfa7;\n}\n\n.annotations:nth-child(1n) .form-line:nth-last-child(2) .code{\n    border-width: 0px 3px 3px 3px;\n    border-style: solid;\n    border-color: #d1bfa7;\n    border-radius:0px 0px 5px 5px;\n}\n\n\n.overall-complexity{\n    margin: 2% 0%;\n}\n.overall-complexity input{\n    width: 10%;\n    height: 24px;\n    padding: 2px;\n    margin: 3px 4px 3px 3px;\n    outline: none;\n    border: 3px solid #49494b;\n    border-radius: 5px;\n}\n\n button, input[type=submit]{\n    background-color: #d1bfa7;\n    padding: 20px;\n    margin: 6px 8px 6px 8px;\n    min-width: 88px;\n    border-radius: 3px;\n    font-size: 14px;\n    text-decoration:none;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.26);\n}\n\n.loading {\n    position: absolute;\n    height: 100px;\n    width: 100px;\n    top: 50%;\n    left: 50%;\n}\n\n.correctAnswer{\n    background-color: #e6ffe6;\n}\n\n.incorrectAnswer{\n    background-color: #ffe6e6;\n}\n\n.solution-form{\n    text-align: center;\n}\n\n.line-answer{\n    height: 42px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{problem.name}}            {{score}}/{{problem.totalScore}}                                                                Complexity                                                                            {{problem.complexity[i]}}                                                                                                        {{i + 1}}                    {{problem.sourceCode[i]}}                                                        Overall Complexity                                {{problem.overallComplexity}}                                                                                Submit            Back to problems                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HomepageComponent', 'selector': 'app-homepage'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'ProblemCreationComponent', 'selector': 'app-problem-creation'},{'name': 'ProblemSelectionComponent', 'selector': 'app-problem-selection'},{'name': 'StudentSolutionComponent', 'selector': 'app-student-solution'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StudentSolutionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Teacher.html":{"url":"interfaces/Teacher.html","title":"interface - Teacher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Teacher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/teacher.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            first_name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            last_name\n                                        \n                                \n                                \n                                        \n                                            password_hash\n                                        \n                                \n                                \n                                        \n                                            teacherEmail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        first_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teacherEmail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        teacherEmail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Teacher {\n    id?: number;\n    first_name: string;\n    last_name: string;\n    teacherEmail: string;\n    password_hash: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addStudent\n                            \n                            \n                                addTeacher\n                            \n                            \n                                getStudentByEmail\n                            \n                            \n                                getTeacherByEmail\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addStudent\n                        \n                    \n                \n            \n            \n                \naddStudent(student: Student)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user.service.ts:64\n                \n            \n\n\n            \n                \n                      Posts a teacher to the backend.\n  @param student the student being added to the backend.\n  @returns a Student Observable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    student\n                                    \n                                                Student\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the student being added to the backend.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        a Student Observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addTeacher\n                        \n                    \n                \n            \n            \n                \naddTeacher(teacher: Teacher)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user.service.ts:37\n                \n            \n\n\n            \n                \n                      Posts a teacher to the backend.\n  @param teacher a teacher.\n  @returns an Teacher Observable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    teacher\n                                    \n                                                Teacher\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        a teacher.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an Teacher Observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStudentByEmail\n                        \n                    \n                \n            \n            \n                \ngetStudentByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user.service.ts:55\n                \n            \n\n\n            \n                \n                      Gets a student by email from the backend.\n  @param email the email of the student.\n  @returns a Student Observable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the email of the student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        a Student Observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTeacherByEmail\n                        \n                    \n                \n            \n            \n                \ngetTeacherByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user.service.ts:46\n                \n            \n\n\n            \n                \n                      Gets a teacher by email from the backend.\n  @param email the email of the teacher.\n  @returns a Teacher Observable.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the email of the teacher.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        a Teacher Observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(userDetails: any, role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user.service.ts:23\n                \n            \n\n\n            \n                \n                      updates the user information\n  @param userDetails the user details from keycloak.\n  @param role the user role specifying if they are a teacher or a student.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user details from keycloak.\n\n                                    \n                                \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the user role specifying if they are a teacher or a student.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user.service.ts:16\n                        \n                    \n\n            \n                \n                    Holds the information of the current logged in user.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Teacher } from './teacher';\nimport { Observable, tap } from 'rxjs';\nimport { Student } from './student';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) {}\n  /**\n  * Holds the information of the current logged in user.\n  **/\n  user: any;\n\n  /**\n  *   updates the user information\n  *   @param userDetails the user details from keycloak.\n  *   @param role the user role specifying if they are a teacher or a student.\n  **/\n  updateUser(userDetails: any, role: string){\n    this.user = {\n      firstName: userDetails.given_name,\n      lastName: userDetails.family_name,\n      email: userDetails.email,\n      role: role,\n    }\n  }\n\n  /**\n  *   Posts a teacher to the backend.\n  *   @param teacher a teacher.\n  *   @returns an Teacher Observable.\n  **/\n  addTeacher(teacher: Teacher): Observable{\n    return this.http.post(\"http://localhost:8080/teachers\", teacher)\n  }\n\n  /**\n  *   Gets a teacher by email from the backend.\n  *   @param email the email of the teacher.\n  *   @returns a Teacher Observable.\n  **/\n  getTeacherByEmail(email: string): Observable{\n    return this.http.get(\"http://localhost:8080/teachers/email/\" + email)\n  }\n\n  /**\n  *   Gets a student by email from the backend.\n  *   @param email the email of the student.\n  *   @returns a Student Observable.\n  **/\n  getStudentByEmail(email: string): Observable{\n    return this.http.get(\"http://localhost:8080/students/email/\" + email)\n  }\n\n    /**\n    *   Posts a teacher to the backend.\n    *   @param student the student being added to the backend.\n    *   @returns a Student Observable.\n    **/\n  addStudent(student: Student): Observable{\n    return this.http.post(\"http://localhost:8080/students\", student)\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/complexity-parser/block.ts\n            \n            interface\n            Block\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/complexity-parser/complexity-parser.service.ts\n            \n            injectable\n            ComplexityParserService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/homepage/homepage.component.ts\n            \n            component\n            HomepageComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/problem-creation/problem-creation.component.ts\n            \n            component\n            ProblemCreationComponent\n            \n                15 %\n                (3/20)\n            \n        \n        \n            \n                \n                src/app/problem-selection/problem-selection.component.ts\n            \n            component\n            ProblemSelectionComponent\n            \n                37 %\n                (3/8)\n            \n        \n        \n            \n                \n                src/app/problem-service/problem.service.ts\n            \n            injectable\n            ProblemService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/problem.ts\n            \n            interface\n            Problem\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/solution-service/solution.service.ts\n            \n            injectable\n            SolutionService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/solution.ts\n            \n            interface\n            Solution\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/student-solution-component/student-solution.component.ts\n            \n            component\n            StudentSolutionComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/student.ts\n            \n            interface\n            Student\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/teacher.ts\n            \n            interface\n            Teacher\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/user.service.ts\n            \n            injectable\n            UserService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/mocks/problem.service.mock.ts\n            \n            variable\n            mockAddProblem\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/problem.service.mock.ts\n            \n            variable\n            mockProblem1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/problem.service.mock.ts\n            \n            variable\n            mockProblem2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/problem.service.mock.ts\n            \n            variable\n            mockProblemArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/problem.service.mock.ts\n            \n            variable\n            mockProblemList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/problem.service.mock.ts\n            \n            variable\n            MockProblemService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mocks/snack.bar.mock.ts\n            \n            variable\n            mockMatSnackBar\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.1.0\n        \n            @angular/cdk : ^15.1.5\n        \n            @angular/common : ^15.1.0\n        \n            @angular/compiler : ^15.1.0\n        \n            @angular/core : ^15.1.0\n        \n            @angular/forms : ^15.1.0\n        \n            @angular/material : ^15.1.5\n        \n            @angular/platform-browser : ^15.1.0\n        \n            @angular/platform-browser-dynamic : ^15.1.0\n        \n            @angular/router : ^15.1.0\n        \n            keycloak-angular : ^13.0.0\n        \n            keycloak-js : ^20.0.5\n        \n            rxjs : ~7.8.0\n        \n            tokenizr : ^1.6.8\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nEncounter\nThis project was generated with Angular CLI version 15.1.5.\nDevelopment server\nRun ng serve or npm start for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build or npm run build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun npm test to execute the unit tests via Jest.\nCreate documentation\nRun npm run compodoc to create the documentation.\nRun npm run compodocs to create the documentation and serve it.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHomepageComponent\n\nHomepageComponent\n\nAppModule -->\n\nHomepageComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nProblemCreationComponent\n\nProblemCreationComponent\n\nAppModule -->\n\nProblemCreationComponent->AppModule\n\n\n\n\n\nProblemSelectionComponent\n\nProblemSelectionComponent\n\nAppModule -->\n\nProblemSelectionComponent->AppModule\n\n\n\n\n\nStudentSolutionComponent\n\nStudentSolutionComponent\n\nAppModule -->\n\nStudentSolutionComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAuthService\n\nAuthService\n\nAppModule -->\n\nAuthService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    7 Components\n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            mockAddProblem   (src/.../problem.service.mock.ts)\n                        \n                        \n                            mockMatSnackBar   (src/.../snack.bar.mock.ts)\n                        \n                        \n                            mockProblem1   (src/.../problem.service.mock.ts)\n                        \n                        \n                            mockProblem2   (src/.../problem.service.mock.ts)\n                        \n                        \n                            mockProblemArray   (src/.../problem.service.mock.ts)\n                        \n                        \n                            mockProblemList   (src/.../problem.service.mock.ts)\n                        \n                        \n                            MockProblemService   (src/.../problem.service.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mocks/problem.service.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockAddProblem\n                        \n                    \n                \n            \n                \n                    \n                        Default value : jest.fn().mockReturnValue(of(mockProblemArray))\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockProblem1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 1,\n    name: \"problem1\",\n    sourceCode: [\"int x = 4;\", \"int y = 5;\"],\n    complexity: [\"O(C)\", \"O(C)\"],\n    totalScore: 2,\n    currentScore: 2,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockProblem2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: 2,\n    name: \"problem2\",\n    sourceCode: [\"int x = 4;\", \"int y = 5;\"],\n    complexity: [\"O(C)\", \"O(N)\"],\n    totalScore: 2,\n    currentScore: 1,\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockProblemArray\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [mockProblem1, mockProblem2]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mockProblemList\n                        \n                    \n                \n            \n                \n                    \n                        Default value : jest.fn().mockReturnValue([mockProblem1, mockProblem2])\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MockProblemService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    getAllProblems: mockProblemList,\n    addProblem: mockAddProblem\n}\n                    \n                \n\n\n        \n    \n\n    src/mocks/snack.bar.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockMatSnackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    open: jest.fn()\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
